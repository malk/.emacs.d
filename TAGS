
/home/malk/.emacs.d/.mc-lists.el,0

/home/malk/.emacs.d/backups/!home!malk!dotfiles!scripts!re-install-all-my-packages.sh~,0

/home/malk/.emacs.d/init.el,2983
(defalias 'yes-or-no-p 'y-or-n-p)yes-or-no-p67,1736
(defalias 'auto-tail-revert-mode 'tail-mode)auto-tail-revert-mode68,1770
(defun goto-line-with-feedback ()goto-line-with-feedback134,4038
(defun set-auto-complete-as-completion-at-point-function ()set-auto-complete-as-completion-at-point-function164,4822
(define-key ac-completing-map (kbd "C-n") 'ac-next)ac-completing-map172,5267
(define-key ac-completing-map (kbd "C-p") 'ac-previous)ac-completing-map173,5319
(defun add-to-ac-user-dict (entry)add-to-ac-user-dict176,5377
(defun toggle-maximize-buffer () "Maximize buffer"toggle-maximize-buffer217,6789
(defun nop () (interactive))nop226,7024
(defun loadrc ()loadrc229,7055
(defun my-coding-hook ()my-coding-hook257,7541
(defun org-export-to-ods ()org-export-to-ods294,8665
(defun erc-start-or-switch ()erc-start-or-switch331,9894
(defun esk-paredit-nonlisp ()esk-paredit-nonlisp383,11811
(defadvice magit-status (around magit-fullscreen activate)magit-status393,12143
(defun magit-quit-session ()magit-quit-session398,12295
(define-key magit-status-mode-map (kbd "q") 'magit-quit-session)magit-status-mode-map404,12471
(defun magit-toggle-whitespace ()magit-toggle-whitespace407,12602
(defun magit-ignore-whitespace ()magit-ignore-whitespace413,12761
(defun magit-dont-ignore-whitespace ()magit-dont-ignore-whitespace418,12872
(define-key magit-status-mode-map (kbd "W") 'magit-toggle-whitespace)magit-status-mode-map423,13008
(defun single-space ()single-space434,13389
(defun join-this-line-with-next-one ()join-this-line-with-next-one440,13484
(defun join-line-or-lines-in-region (&optional ARG)join-line-or-lines-in-region446,13605
(defun minimap-toggle ()minimap-toggle456,13995
(defvar smart-use-extended-syntax nilsmart-use-extended-syntax472,14547
(defvar smart-last-symbol-name ""smart-last-symbol-name476,14700
(defvar smart-symbol-old-pt nilsmart-symbol-old-pt484,14948
(defun smart-symbol-goto (name direction)smart-symbol-goto487,15025
(defun smart-symbol-go-forward ()smart-symbol-go-forward516,16309
(defun smart-symbol-go-backward ()smart-symbol-go-backward521,16464
(defun smart-symbol-at-pt (&optional dir)smart-symbol-at-pt526,16632
(defun cycle-ispell-languages ()cycle-ispell-languages560,17759
(define-key nrepl-interaction-mode-map (kbd "C-c C-d") 'ac-nrepl-popup-doc)nrepl-interaction-mode-map589,18706
(defalias 'perl-mode 'cperl-mode)perl-mode593,18793
(defun my-cperl-eldoc-documentation-function ()my-cperl-eldoc-documentation-function594,18827
(defun global-key (key binding)global-key624,19833
(defun disable-key (key)disable-key651,20873
(defvar mk-minor-mode-map (make-keymap) "mk-minor-mode keymap.")mk-minor-mode-map686,22236
(define-minor-mode mk-minor-modemk-minor-mode688,22302
(defadvice load (after give-my-keybindings-priority)load697,22778
(defun precious-key (key binding)precious-key705,23151
(defun personal-key (key binding)personal-key740,24488

/home/malk/.emacs.d/elpa/ack-and-a-half-20130103.2016/ack-and-a-half-pkg.el,132
(define-package "ack-and-a-half" "20130103.2016" "Yet another front-end for ack [source: github]" (quote nil))"ack-and-a-half"1,0

/home/malk/.emacs.d/elpa/ack-and-a-half-20130103.2016/ack-and-a-half.el,3768
(define-compilation-mode ack-and-a-half-mode "Ack"ack-and-a-half-mode73,2785
(defgroup ack-and-a-half nil "Yet another front end for ack."ack-and-a-half84,3424
(defcustom ack-and-a-half-executable (or (executable-find "ack")ack-and-a-half-executable88,3523
(defcustom ack-and-a-half-buffer-name "*Ack-and-a-half*"ack-and-a-half-buffer-name94,3741
(defun ack-buffer-name (mode) ack-and-a-half-buffer-name)ack-buffer-name99,3885
(defcustom ack-and-a-half-arguments nilack-and-a-half-arguments101,3944
(defcustom ack-and-a-half-mode-type-alist nilack-and-a-half-mode-type-alist106,4075
(defcustom ack-and-a-half-mode-extension-alist nilack-and-a-half-mode-extension-alist116,4542
(defcustom ack-and-a-half-ignore-case 'smartack-and-a-half-ignore-case127,5085
(defcustom ack-and-a-half-regexp-search tack-and-a-half-regexp-search135,5425
(defcustom ack-and-a-half-use-environment tack-and-a-half-use-environment142,5724
(defcustom ack-and-a-half-root-directory-functions '(ack-and-a-half-guess-project-root)ack-and-a-half-root-directory-functions148,5949
(defcustom ack-and-a-half-project-root-file-patternsack-and-a-half-project-root-file-patterns156,6404
(defcustom ack-and-a-half-prompt-for-directory 'unless-guessedack-and-a-half-prompt-for-directory172,6967
(defconst ack-and-a-half-mode-type-default-alistack-and-a-half-mode-type-default-alist185,7582
(defconst ack-and-a-half-mode-extension-default-alistack-and-a-half-mode-extension-default-alist238,8918
(defun ack-and-a-half-create-type (extensions)ack-and-a-half-create-type242,9054
(defun ack-and-a-half-type-for-major-mode (mode)ack-and-a-half-type-for-major-mode247,9255
(defun ack-and-a-half-guess-project-root ()ack-and-a-half-guess-project-root267,10091
(defvar ack-and-a-half-directory-history nilack-and-a-half-directory-history282,10797
(defvar ack-and-a-half-literal-history nilack-and-a-half-literal-history284,10900
(defvar ack-and-a-half-regexp-history nilack-and-a-half-regexp-history286,11001
(defun ack-and-a-half-initial-contents-for-read ()ack-and-a-half-initial-contents-for-read289,11114
(defun ack-and-a-half-default-for-read ()ack-and-a-half-default-for-read293,11275
(defun ack-and-a-half-use-region-p ()ack-and-a-half-use-region-p297,11389
(defsubst ack-and-a-half-read (regexp)ack-and-a-half-read302,11572
(defun ack-and-a-half-read-dir ()ack-and-a-half-read-dir314,12072
(defsubst ack-and-a-half-xor (a b)ack-and-a-half-xor324,12512
(defun ack-and-a-half-interactive ()ack-and-a-half-interactive327,12568
(defun ack-and-a-half-type ()ack-and-a-half-type334,12875
(defun ack-and-a-half-option (name enabled)ack-and-a-half-option339,13075
(defun ack-and-a-half-arguments-from-options (regexp)ack-and-a-half-arguments-from-options342,13167
(defun ack-and-a-half-string-replace (from to string &optional re)ack-and-a-half-string-replace353,13637
(defun ack-and-a-half-shell-quote (string)ack-and-a-half-shell-quote372,14375
(defun ack-and-a-half-run (directory regexp pattern &rest arguments)ack-and-a-half-run376,14577
(defun ack-and-a-half-read-file (prompt choices)ack-and-a-half-read-file393,15492
(defun ack-and-a-half-list-files (directory &rest arguments)ack-and-a-half-list-files402,15804
(defun ack-and-a-half-version-string ()ack-and-a-half-version-string415,16315
(defun ack-and-a-half-mode-setup ()ack-and-a-half-mode-setup423,16583
(defun ack-and-a-half (pattern &optional regexp directory)ack-and-a-half440,17277
(defun ack-and-a-half-same (pattern &optional regexp directory)ack-and-a-half-same453,17863
(defun ack-and-a-half-find-file (&optional directory)ack-and-a-half-find-file473,18842
(defun ack-and-a-half-find-file-same (&optional directory)ack-and-a-half-find-file-same483,19195

/home/malk/.emacs.d/elpa/ack-and-a-half-20130103.2016/ack-and-a-half-autoloads.el,0

/home/malk/.emacs.d/elpa/clojure-mode-20121230.2359/clojure-mode.el,3719
(defconst clojure-font-lock-keywordsclojure-font-lock-keywords66,2131
(defgroup clojure-mode nilclojure-mode292,14068
(defcustom clojure-mode-font-lock-comment-sexp nilclojure-mode-font-lock-comment-sexp297,14169
(defcustom clojure-mode-load-command  "(clojure.core/load-file \"%s\")\n"clojure-mode-load-command304,14456
(defcustom clojure-mode-use-backtracking-indent tclojure-mode-use-backtracking-indent312,14801
(defcustom clojure-max-backtracking 3clojure-max-backtracking317,14966
(defvar clojure-mode-mapclojure-mode-map322,15110
(defvar clojure-mode-syntax-tableclojure-mode-syntax-table336,15757
(defvar clojure-mode-abbrev-table nilclojure-mode-abbrev-table349,16264
(define-abbrev-table 'clojure-mode-abbrev-table ())clojure-mode-abbrev-table352,16351
(defvar clojure-prev-l/c-dir/file nilclojure-prev-l/c-dir/file354,16404
(defvar clojure-test-ns-segment-position -1clojure-test-ns-segment-position359,16640
(defun clojure-mode-version ()clojure-mode-version368,16975
(defalias 'clojure-parent-modeclojure-parent-mode373,17146
(define-derived-mode clojure-mode clojure-parent-mode "Clojure"clojure-mode377,17251
(defun clojure-display-inferior-lisp-buffer ()clojure-display-inferior-lisp-buffer417,18930
(defun clojure-load-file (file-name)clojure-load-file424,19201
(defun clojure-match-next-def ()clojure-match-next-def438,19819
(defun clojure-mode-font-lock-setup ()clojure-mode-font-lock-setup449,20263
(defun clojure-font-lock-def-at-point (point)clojure-font-lock-def-at-point473,21236
(defun clojure-font-lock-extend-region-def ()clojure-font-lock-extend-region-def495,21923
(defun clojure-find-block-comment-start (limit)clojure-find-block-comment-start516,22701
(defun clojure-font-lock-extend-region-comment ()clojure-font-lock-extend-region-comment524,23003
(defun clojure-font-lock-mark-comment (limit)clojure-font-lock-mark-comment543,23730
(defun clojure-forward-sexp (n)clojure-forward-sexp569,24616
(defun clojure-indent-function (indent-point state)clojure-indent-function587,25384
(defun clojure-backtracking-indent (indent-point state normal-indent)clojure-backtracking-indent658,28818
(defun put-clojure-indent (sym indent)put-clojure-indent714,31195
(defmacro define-clojure-indent (&rest kvs)define-clojure-indent717,31280
(defun add-custom-clojure-indents (name value)add-custom-clojure-indents722,31447
(defcustom clojure-defun-indents nilclojure-defun-indents728,31612
(defun clojure-string-start ()clojure-string-start806,32969
(defun clojure-char-at-point ()clojure-char-at-point815,33331
(defun clojure-char-before-point ()clojure-char-before-point820,33515
(defun clojure-string-end ()clojure-string-end827,33829
(defun clojure-docstring-start+end-points ()clojure-docstring-start+end-points847,34610
(defun clojure-mark-string ()clojure-mark-string853,34891
(defun clojure-fill-docstring (&optional argument)clojure-fill-docstring860,35057
(defconst clojure-namespace-name-regexclojure-namespace-name-regex893,36508
(defun clojure-expected-ns ()clojure-expected-ns937,38020
(defun clojure-insert-ns-form ()clojure-insert-ns-form946,38457
(defun clojure-update-ns ()clojure-update-ns951,38586
(defun clojure-find-ns ()clojure-find-ns963,38985
(defalias 'clojure-find-package 'clojure-find-ns)clojure-find-package971,39228
(defun clojure-in-tests-p ()clojure-in-tests-p974,39299
(defun clojure-underscores-for-hyphens (namespace)clojure-underscores-for-hyphens978,39431
(defun clojure-test-for (namespace)clojure-test-for981,39531
(defun clojure-jump-to-test ()clojure-jump-to-test986,39726
(defun clojure-jump-between-tests-and-code ()clojure-jump-between-tests-and-code994,40037

/home/malk/.emacs.d/elpa/clojure-mode-20121230.2359/clojure-mode-autoloads.el,0

/home/malk/.emacs.d/elpa/clojure-mode-20121230.2359/clojure-mode-pkg.el,126
(define-package "clojure-mode" "20121230.2359" "Major mode for Clojure code [source: github]" (quote nil))"clojure-mode"1,0

/home/malk/.emacs.d/elpa/paredit-20110508.1256/paredit.el,11339
(defconst paredit-version 23)paredit-version154,6710
(defconst paredit-beta-p t)paredit-beta-p155,6740
(defvar paredit-mode-map (make-sparse-keymap)paredit-mode-map209,8359
(defvar paredit-override-check-parens-functionparedit-override-check-parens-function212,8446
(define-minor-mode paredit-modeparedit-mode217,8621
(defun paredit-override-check-parens-interactively (condition)paredit-override-check-parens-interactively236,9421
(defun enable-paredit-mode ()enable-paredit-mode239,9563
(defun disable-paredit-mode ()disable-paredit-mode244,9683
(defvar paredit-backward-delete-keyparedit-backward-delete-key249,9805
(defvar paredit-forward-delete-keysparedit-forward-delete-keys253,9921
(defvar paredit-commands nilparedit-commands263,10261
(defun paredit-define-keys ()paredit-define-keys490,19292
(defun paredit-function-documentation (fn)paredit-function-documentation496,19486
(defun paredit-annotate-mode-with-examples ()paredit-annotate-mode-with-examples503,19756
(defun paredit-annotate-functions-with-examples ()paredit-annotate-functions-with-examples530,20964
(defun paredit-insert-html-examples ()paredit-insert-html-examples547,21658
(defun paredit-html-quote (string)paredit-html-quote596,23693
(defvar paredit-wrap-commands '(paredit-wrap-sexp)paredit-wrap-commands657,26342
(define-paredit-pair ?\( ?\) "round")?\661,26508
(define-paredit-pair ?\[ ?\] "square")?\[662,26546
(define-paredit-pair ?\{ ?\} "curly")?\{663,26585
(define-paredit-pair ?\< ?\> "angled")?\<664,26623
(defalias 'paredit-open-parenthesis 'paredit-open-round)paredit-open-parenthesis668,26695
(defalias 'paredit-close-parenthesis 'paredit-close-round)paredit-close-parenthesis669,26752
(defalias 'paredit-close-parenthesis-and-newlineparedit-close-parenthesis-and-newline670,26811
(defalias 'paredit-open-bracket 'paredit-open-square)paredit-open-bracket673,26897
(defalias 'paredit-close-bracket 'paredit-close-square)paredit-close-bracket674,26951
(defalias 'paredit-close-bracket-and-newlineparedit-close-bracket-and-newline675,27007
(defun paredit-move-past-close (close)paredit-move-past-close678,27091
(defun paredit-move-past-close-and-newline (close)paredit-move-past-close-and-newline683,27224
(defun paredit-move-past-close-and (close if-moved)paredit-move-past-close-and698,27725
(defun paredit-find-comment-on-line ()paredit-find-comment-on-line706,27983
(defun paredit-insert-pair (n open close forward)paredit-insert-pair728,29004
(defun paredit-scan-sexps-hack (point n)paredit-scan-sexps-hack759,30189
(defun paredit-region-safe-for-insert-p ()paredit-region-safe-for-insert-p775,30661
(defvar paredit-space-for-delimiter-predicates nilparedit-space-for-delimiter-predicates792,31432
(defun paredit-space-for-delimiter-p (endp delimiter)paredit-space-for-delimiter-p808,32334
(defun paredit-move-past-close-and-reindent (close)paredit-move-past-close-and-reindent827,33215
(defun paredit-missing-close ()paredit-missing-close860,34818
(defun paredit-delete-leading-whitespace ()paredit-delete-leading-whitespace868,35065
(defun paredit-blink-paren-match (another-line-p)paredit-blink-paren-match879,35546
(defun paredit-doublequote (&optional n)paredit-doublequote891,35967
(defun paredit-meta-doublequote (&optional n)paredit-meta-doublequote916,37150
(defun paredit-forward-for-quote (end)paredit-forward-for-quote933,37865
(defun paredit-backslash ()paredit-backslash966,39350
(defun paredit-backslash-interactive ()paredit-backslash-interactive974,39686
(defun paredit-newline ()paredit-newline991,40386
(defun paredit-reindent-defun (&optional argument)paredit-reindent-defun1017,41446
(defun paredit-semicolon (&optional n)paredit-semicolon1043,42600
(defun paredit-semicolon-find-line-break-point ()paredit-semicolon-find-line-break-point1064,43543
(defun paredit-semicolon-with-line-break (line-break-point n)paredit-semicolon-with-line-break1089,44631
(defun paredit-initialize-comment-dwim ()paredit-initialize-comment-dwim1114,45622
(defun paredit-comment-dwim (&optional argument)paredit-comment-dwim1128,46240
(defun paredit-comment-on-line-p ()paredit-comment-on-line-p1157,47710
(defun paredit-insert-comment ()paredit-insert-comment1175,48407
(defun paredit-forward-delete (&optional argument)paredit-forward-delete1208,49588
(defun paredit-forward-delete-in-string ()paredit-forward-delete-in-string1257,51718
(defun paredit-forward-delete-in-comment ()paredit-forward-delete-in-comment1280,52899
(defun paredit-forward-delete-comment-start ()paredit-forward-delete-comment-start1290,53283
(defun paredit-backward-delete (&optional argument)paredit-backward-delete1296,53535
(defun paredit-backward-delete-in-string ()paredit-backward-delete-in-string1344,55679
(defun paredit-backward-delete-in-comment ()paredit-backward-delete-in-comment1367,56814
(defun paredit-backward-delete-maybe-comment-end ()paredit-backward-delete-maybe-comment-end1379,57298
(defun paredit-kill (&optional argument)paredit-kill1392,57807
(defun paredit-kill-line-in-string ()paredit-kill-line-in-string1416,58864
(defun paredit-kill-line-in-comment ()paredit-kill-line-in-comment1428,59290
(defun paredit-kill-sexps-on-line ()paredit-kill-sexps-on-line1437,59677
(defun paredit-forward-sexps-to-kill (beginning eol)paredit-forward-sexps-to-kill1465,61130
(defun paredit-kill-sexps-on-whole-line (beginning)paredit-kill-sexps-on-whole-line1500,62518
(defun paredit-forward-kill-word ()paredit-forward-kill-word1531,64056
(defun paredit-backward-kill-word ()paredit-backward-kill-word1560,65301
(defun paredit-kill-word-state (parse-state adjacent-char-fn)paredit-kill-word-state1589,66492
(defun paredit-kill-word-hack (old-state new-state parse-state)paredit-kill-word-hack1602,67045
(defun paredit-copy-as-kill ()paredit-copy-as-kill1624,67910
(defun paredit-copy-as-kill-in-string ()paredit-copy-as-kill-in-string1640,68562
(defun paredit-copy-sexps-as-kill ()paredit-copy-sexps-as-kill1648,68836
(defun paredit-delete-region (start end)paredit-delete-region1671,69833
(defun paredit-kill-region (start end)paredit-kill-region1681,70226
(defun paredit-check-region-for-delete (start end)paredit-check-region-for-delete1691,70609
(defun paredit-check-region-for-delete:depth (start start-state end end-state)paredit-check-region-for-delete:depth1703,71271
(defun paredit-check-region-for-delete:string (start start-state end end-state)paredit-check-region-for-delete:string1711,71599
(defun paredit-check-region-for-delete:commentparedit-check-region-for-delete:comment1719,71985
(defun paredit-check-region-for-delete:char-quoteparedit-check-region-for-delete:char-quote1755,73905
(defun-saving-mark paredit-forward ()paredit-forward1780,74706
(defun-saving-mark paredit-backward ()paredit-backward1791,75220
(defun backward-down-list (&optional arg)backward-down-list1804,75811
(defalias 'paredit-recentre-on-sexp 'paredit-recenter-on-sexp)paredit-recentre-on-sexp1813,76092
(defun paredit-recenter-on-sexp (&optional n)paredit-recenter-on-sexp1815,76156
(defun paredit-recenter-on-defun ()paredit-recenter-on-defun1837,77087
(defun paredit-focus-on-defun ()paredit-focus-on-defun1844,77268
(defun paredit-up/down (n vertical-direction)paredit-up/down1852,77456
(defun paredit-next-up/down-point (horizontal-direction vertical-direction)paredit-next-up/down-point1859,77713
(defun paredit-find-next-string-start (horizontal-direction limit)paredit-find-next-string-start1901,79817
(defun paredit-forward-down (&optional argument)paredit-forward-down1919,80616
(defun paredit-backward-up (&optional argument)paredit-backward-up1926,80887
(defun paredit-forward-up (&optional argument)paredit-forward-up1934,81224
(defun paredit-backward-down (&optional argument)paredit-backward-down1942,81553
(defun paredit-wrap-sexp (&optional argument open close)paredit-wrap-sexp1951,81895
(defun paredit-count-sexps-forward ()paredit-count-sexps-forward1976,83017
(defun paredit-yank-pop (&optional argument)paredit-yank-pop1985,83266
(defun paredit-splice-sexp (&optional argument)paredit-splice-sexp2015,84602
(defun paredit-kill-surrounding-sexps-for-splice (argument)paredit-kill-surrounding-sexps-for-splice2049,86323
(defun paredit-splice-sexp-killing-backward (&optional n)paredit-splice-sexp-killing-backward2081,87876
(defun paredit-splice-sexp-killing-forward (&optional n)paredit-splice-sexp-killing-forward2090,88274
(defun paredit-raise-sexp (&optional argument)paredit-raise-sexp2099,88675
(defun paredit-convolute-sexp (&optional n)paredit-convolute-sexp2131,90158
(defun paredit-splice-string (argument)paredit-splice-string2164,91587
(defun paredit-unescape-string (string)paredit-unescape-string2192,92779
(defun paredit-forward-slurp-sexp ()paredit-forward-slurp-sexp2208,93214
(defun paredit-forward-slurp-into-list ()paredit-forward-slurp-into-list2226,93945
(defun paredit-forward-slurp-into-string ()paredit-forward-slurp-into-string2243,94829
(defun paredit-forward-barf-sexp ()paredit-forward-barf-sexp2253,95216
(defun paredit-backward-slurp-sexp ()paredit-backward-slurp-sexp2275,96275
(defun paredit-backward-slurp-into-list ()paredit-backward-slurp-into-list2293,96995
(defun paredit-backward-slurp-into-string ()paredit-backward-slurp-into-string2312,97601
(defun paredit-backward-barf-sexp ()paredit-backward-barf-sexp2324,97985
(defun paredit-split-sexp ()paredit-split-sexp2352,98916
(defun paredit-join-sexps ()paredit-join-sexps2372,99713
(defun paredit-add-to-previous-list ()paredit-add-to-previous-list2420,102012
(defun paredit-add-to-next-list ()paredit-add-to-next-list2428,102278
(defun paredit-join-with-previous-list ()paredit-join-with-previous-list2437,102596
(defun paredit-join-with-next-list ()paredit-join-with-next-list2447,102962
(defun paredit-in-string-escape-p ()paredit-in-string-escape-p2459,103323
(defun paredit-in-char-p (&optional position)paredit-in-char-p2471,103715
(defun paredit-indent-sexps ()paredit-indent-sexps2477,103914
(defun paredit-forward-and-indent ()paredit-forward-and-indent2484,104165
(defun paredit-skip-whitespace (trailing-p &optional limit)paredit-skip-whitespace2490,104356
(defalias 'paredit-region-active-pparedit-region-active-p2498,104778
(defun paredit-hack-kill-region (start end)paredit-hack-kill-region2504,104968
(defun paredit-current-parse-state ()paredit-current-parse-state2526,105949
(defun paredit-in-string-p (&optional state)paredit-in-string-p2535,106310
(defun paredit-string-start+end-points (&optional state)paredit-string-start+end-points2543,106655
(defun paredit-in-comment-p (&optional state)paredit-in-comment-p2557,107277
(defun paredit-point-at-sexp-boundary (n)paredit-point-at-sexp-boundary2566,107658
(defun paredit-point-at-sexp-start ()paredit-point-at-sexp-start2571,107823
(defun paredit-point-at-sexp-end ()paredit-point-at-sexp-end2577,107933
(defun paredit-lose-if-not-in-sexp (command)paredit-lose-if-not-in-sexp2583,108041
(defun paredit-check-region (start end)paredit-check-region2589,108243
(defun paredit-region-ok-p (start end)paredit-region-ok-p2599,108689
(defun paredit-current-indentation ()paredit-current-indentation2612,109100

/home/malk/.emacs.d/elpa/paredit-20110508.1256/paredit-pkg.el,122
(define-package "paredit" "20110508.1256" "minor mode for editing parentheses [source: darcs]" (quote nil))"paredit"1,0

/home/malk/.emacs.d/elpa/paredit-20110508.1256/paredit-autoloads.el,0

/home/malk/.emacs.d/elpa/multiple-cursors-20130123.1205/rectangular-region-mode.el,999
(defvar rrm/anchor (make-marker)rrm/anchor32,1073
(defvar rectangular-region-mode-map (make-sparse-keymap)rectangular-region-mode-map35,1176
(define-key rectangular-region-mode-map (kbd "C-g") 'rrm/keyboard-quit)rectangular-region-mode-map38,1297
(define-key rectangular-region-mode-map (kbd "<return>") 'rrm/switch-to-multiple-cursors)rectangular-region-mode-map39,1369
(defun rrm/keyboard-quit ()rrm/keyboard-quit41,1460
(defun set-rectangular-region-anchor ()set-rectangular-region-anchor50,1724
(defun rrm/remove-rectangular-region-overlays ()rrm/remove-rectangular-region-overlays60,2067
(defun rrm/repaint ()rrm/repaint68,2357
(defun rrm/switch-to-multiple-cursors (&rest forms)rrm/switch-to-multiple-cursors92,3476
(defadvice er/expand-region (before switch-from-rrm-to-mc activate)er/expand-region98,3670
(defadvice kill-ring-save (before switch-from-rrm-to-mc activate)kill-ring-save102,3810
(define-minor-mode rectangular-region-moderectangular-region-mode106,3948

/home/malk/.emacs.d/elpa/multiple-cursors-20130123.1205/multiple-cursors-pkg.el,127
(define-package "multiple-cursors" "20130123.1205" "Multiple cursors for Emacs. [source: github]" 'nil)"multiple-cursors"1,0

/home/malk/.emacs.d/elpa/multiple-cursors-20130123.1205/multiple-cursors-autoloads.el,0

/home/malk/.emacs.d/elpa/multiple-cursors-20130123.1205/multiple-cursors.el,0

/home/malk/.emacs.d/elpa/multiple-cursors-20130123.1205/multiple-cursors-core.el,4975
(defface mc/cursor-facemc/cursor-face32,1014
(defface mc/region-facemc/region-face37,1130
(defmacro mc/add-fake-cursor-to-undo-list (&rest forms)mc/add-fake-cursor-to-undo-list42,1243
(defun mc/all-fake-cursors (&optional start end)mc/all-fake-cursors52,1892
(defmacro mc/for-each-fake-cursor (&rest forms)mc/for-each-fake-cursor57,2086
(defmacro mc/save-excursion (&rest forms)mc/save-excursion62,2270
(defun mc--compare-by-overlay-start (o1 o2)mc--compare-by-overlay-start70,2648
(defmacro mc/for-each-cursor-ordered (&rest forms)mc/for-each-cursor-ordered73,2738
(defmacro mc/save-window-scroll (&rest forms)mc/save-window-scroll82,3207
(defun mc/make-cursor-overlay-at-eol (pos)mc/make-cursor-overlay-at-eol94,3606
(defun mc/make-cursor-overlay-inline (pos)mc/make-cursor-overlay-inline100,3852
(defun mc/make-cursor-overlay-at-point ()mc/make-cursor-overlay-at-point106,4069
(defun mc/make-region-overlay-between-point-and-mark ()mc/make-region-overlay-between-point-and-mark114,4361
(defvar mc/cursor-specific-vars '(autopair-actionmc/cursor-specific-vars121,4637
(defun mc/store-current-state-in-overlay (o)mc/store-current-state-in-overlay126,4856
(defun mc/restore-state-from-overlay (o)mc/restore-state-from-overlay140,5504
(defun mc/remove-fake-cursor (o)mc/remove-fake-cursor153,6146
(defun mc/pop-state-from-overlay (o)mc/pop-state-from-overlay160,6389
(defun mc/delete-region-overlay (o)mc/delete-region-overlay165,6567
(defvar mc--current-cursor-id 0mc--current-cursor-id170,6744
(defun mc/create-cursor-id ()mc/create-cursor-id173,6863
(defun mc/create-fake-cursor-at-point (&optional id)mc/create-fake-cursor-at-point177,6957
(defun mc/execute-command (cmd)mc/execute-command190,7561
(defvar mc--executing-command-for-fake-cursor nil)mc--executing-command-for-fake-cursor199,7888
(defun mc/execute-command-for-fake-cursor (cmd cursor)mc/execute-command-for-fake-cursor201,7940
(defun mc/execute-command-for-all-fake-cursors (cmd)mc/execute-command-for-all-fake-cursors212,8332
(defadvice read-char (around mc-support activate)read-char228,8898
(defadvice read-quoted-char (around mc-support activate)read-quoted-char235,9104
(defun mc--reset-read-prompts ()mc--reset-read-prompts242,9338
(defun mc/fake-cursor-p (o)mc/fake-cursor-p248,9460
(defun mc/cursor-with-id (id)mc/cursor-with-id252,9586
(defvar mc--stored-state-for-undo nilmc--stored-state-for-undo258,9833
(defun activate-cursor-for-undo (id)activate-cursor-for-undo261,9948
(defun deactivate-cursor-after-undo (id)deactivate-cursor-after-undo269,10337
(defun mc/prompt-for-inclusion-in-whitelist (original-command)mc/prompt-for-inclusion-in-whitelist276,10633
(defun mc/num-cursors ()mc/num-cursors285,11026
(defvar mc--this-command nilmc--this-command290,11200
(defun mc/make-a-note-of-the-command-being-run ()mc/make-a-note-of-the-command-being-run294,11328
(defun mc/execute-this-command-for-all-cursors ()mc/execute-this-command-for-all-cursors306,11980
(defadvice execute-kbd-macro (around skip-fake-cursors activate)execute-kbd-macro317,12530
(defun mc/execute-this-command-for-all-cursors-1 ()mc/execute-this-command-for-all-cursors-1321,12659
(defun mc/remove-fake-cursors ()mc/remove-fake-cursors369,15259
(defun mc/keyboard-quit ()mc/keyboard-quit376,15490
(defvar mc/keymap nilmc/keymap383,15700
(defun mc--all-equal (entries)mc--all-equal393,16045
(defun mc--kill-ring-entries ()mc--kill-ring-entries402,16301
(defun mc--maybe-set-killed-rectangle ()mc--maybe-set-killed-rectangle410,16604
(defvar mc/unsupported-minor-modes '(auto-complete-mode)mc/unsupported-minor-modes417,16890
(defvar mc/temporarily-disabled-minor-modes nilmc/temporarily-disabled-minor-modes421,17084
(defun mc/temporarily-disable-minor-mode (mode)mc/temporarily-disable-minor-mode425,17250
(defun mc/temporarily-disable-unsupported-minor-modes ()mc/temporarily-disable-unsupported-minor-modes431,17494
(defun mc/enable-minor-mode (mode)mc/enable-minor-mode434,17624
(defun mc/enable-temporarily-disabled-minor-modes ()mc/enable-temporarily-disabled-minor-modes437,17680
(defcustom mc/mode-linemc/mode-line441,17851
(define-minor-mode multiple-cursors-modemultiple-cursors-mode448,18145
(defun mc/maybe-multiple-cursors-mode ()mc/maybe-multiple-cursors-mode467,19014
(defmacro unsupported-cmd (cmd msg)unsupported-cmd473,19233
(defadvice current-kill (before interprogram-paste-for-all-cursors activate)current-kill488,19938
(defvar mc/list-file "~/.emacs.d/.mc-lists.el"mc/list-file512,21208
(defun mc/dump-list (list-symbol)mc/dump-list516,21367
(defun mc/save-lists ()mc/save-lists530,21901
(defvar mc/cmds-to-run-once nilmc/cmds-to-run-once543,22390
(defvar mc--default-cmds-to-run-once nilmc--default-cmds-to-run-once546,22480
(defvar mc--default-cmds-to-run-for-all nilmc--default-cmds-to-run-for-all611,26120
(defvar mc/cmds-to-run-for-all nilmc/cmds-to-run-for-all687,30262

/home/malk/.emacs.d/elpa/multiple-cursors-20130123.1205/mc-mark-more.el,2681
(defun mc/cursor-end (cursor)mc/cursor-end33,1030
(defun mc/cursor-beg (cursor)mc/cursor-beg39,1213
(defun mc/furthest-region-end ()mc/furthest-region-end45,1396
(defun mc/first-region-start ()mc/first-region-start51,1555
(defun mc/furthest-cursor-before-point ()mc/furthest-cursor-before-point57,1713
(defun mc/furthest-cursor-after-point ()mc/furthest-cursor-after-point66,1968
(defun mc/region-strings ()mc/region-strings75,2222
(defvar mc/enclose-search-term nilmc/enclose-search-term83,2532
(defun mc/mark-more-like-this (skip-last direction)mc/mark-more-like-this92,2778
(defun mc/mark-next-like-this (arg)mc/mark-next-like-this123,4198
(defun mc/mark-next-word-like-this (arg)mc/mark-next-word-like-this136,4685
(defun mc/mark-next-symbol-like-this (arg)mc/mark-next-symbol-like-this142,4838
(defun mc/mark-previous-like-this (arg)mc/mark-previous-like-this148,4995
(defun mc/mark-previous-word-like-this (arg)mc/mark-previous-word-like-this161,5493
(defun mc/mark-previous-symbol-like-this (arg)mc/mark-previous-symbol-like-this167,5654
(defun mc/mark-lines (num-lines direction)mc/mark-lines172,5804
(defun mc/mark-next-lines (arg)mc/mark-next-lines182,6187
(defun mc/mark-previous-lines (arg)mc/mark-previous-lines188,6323
(defun mc/unmark-next-like-this (arg)mc/unmark-next-like-this194,6464
(defun mc/unmark-previous-like-this (arg)mc/unmark-previous-like-this200,6640
(defun mc/mark-all-like-this ()mc/mark-all-like-this206,6824
(defun mc/mark-all-words-like-this ()mc/mark-all-words-like-this229,7641
(defun mc/mark-all-symbols-like-this ()mc/mark-all-symbols-like-this235,7782
(defun mc/mark-all-in-region (beg end)mc/mark-all-in-region241,7927
(defun mc/mark-more-like-this-extended ()mc/mark-more-like-this-extended260,8598
(defvar mc--restrict-mark-all-to-symbols nil)mc--restrict-mark-all-to-symbols306,10323
(defun mc/mark-all-like-this-dwim (arg)mc/mark-all-like-this-dwim309,10385
(defun mc--no-region-and-in-sgmlish-mode ()mc--no-region-and-in-sgmlish-mode336,11448
(defun mc--in-defun ()mc--in-defun340,11558
(defun mc/mark-all-like-this-in-defun ()mc/mark-all-like-this-in-defun344,11634
(defun mc/mark-all-words-like-this-in-defun ()mc/mark-all-words-like-this-in-defun355,11890
(defun mc/mark-all-symbols-like-this-in-defun ()mc/mark-all-symbols-like-this-in-defun366,12170
(defun mc--mark-symbol-at-point ()mc--mark-symbol-at-point376,12443
(defun mc--get-nice-sgml-context ()mc--get-nice-sgml-context384,12663
(defun mc--on-tag-name-p ()mc--on-tag-name-p392,12853
(defun mc/mark-sgml-tag-pair ()mc/mark-sgml-tag-pair402,13189
(defun mc--inside-tag-p ()mc--inside-tag-p424,14003

/home/malk/.emacs.d/elpa/multiple-cursors-20130123.1205/mc-edit-lines.el,182
(defun mc/edit-lines ()mc/edit-lines33,1013
(defun mc/edit-ends-of-lines ()mc/edit-ends-of-lines56,1869
(defun mc/edit-beginnings-of-lines ()mc/edit-beginnings-of-lines64,2090

/home/malk/.emacs.d/elpa/multiple-cursors-20130123.1205/mc-insert-numbers.el,207
(defun mc/insert-numbers (arg)mc/insert-numbers33,995
(defvar mc--insert-numbers-number 0)mc--insert-numbers-number39,1204
(defun mc--insert-number-and-increase ()mc--insert-number-and-increase41,1242

/home/malk/.emacs.d/elpa/multiple-cursors-20130123.1205/mc-cycle-cursors.el,813
(defun mc/next-fake-cursor-after-point ()mc/next-fake-cursor-after-point33,1045
(defun mc/prev-fake-cursor-before-point ()mc/prev-fake-cursor-before-point45,1395
(defcustom mc/cycle-looping-behaviour 'continuemc/cycle-looping-behaviour57,1746
(defun mc/handle-loop-condition (error-message)mc/handle-loop-condition65,2155
(defun mc/first-fake-cursor-after (point)mc/first-fake-cursor-after72,2354
(defun mc/last-fake-cursor-before (point)mc/last-fake-cursor-before81,2820
(defun* mc/cycle (next-cursor fallback-cursor loop-message)mc/cycle90,3290
(defun mc/cycle-forward ()mc/cycle-forward99,3605
(defun mc/cycle-backward ()mc/cycle-backward105,3799
(define-key mc/keymap (kbd "C-v") 'mc/cycle-forward)mc/keymap111,3993
(define-key mc/keymap (kbd "M-v") 'mc/cycle-backward)mc/keymap112,4046

/home/malk/.emacs.d/elpa/projectile-20130115.1907/projectile.el,5981
(defgroup projectile nilprojectile49,1585
(defcustom projectile-enable-caching tprojectile-enable-caching54,1691
(defcustom projectile-require-project-root tprojectile-require-project-root59,1804
(defcustom projectile-completion-system 'idoprojectile-completion-system65,2013
(defcustom projectile-ack-function 'ack-and-a-halfprojectile-ack-function71,2175
(defcustom projectile-keymap-prefix (kbd "C-c p")projectile-keymap-prefix77,2331
(defcustom projectile-cache-fileprojectile-cache-file82,2448
(defcustom projectile-tags-command "ctags -Re %s"projectile-tags-command88,2622
(defvar projectile-project-root-filesprojectile-project-root-files94,2791
(defvar projectile-globally-ignored-filesprojectile-globally-ignored-files99,3006
(defvar projectile-globally-ignored-directoriesprojectile-globally-ignored-directories103,3114
(defvar projectile-project-compilation-commandsprojectile-project-compilation-commands107,3273
(defvar projectile-project-test-commandsprojectile-project-test-commands121,3759
(defvar projectile-projects-cache (make-hash-table :test 'equal)projectile-projects-cache135,4269
(defun projectile-invalidate-cache ()projectile-invalidate-cache138,4415
(defun projectile-reindex-current-project ()projectile-reindex-current-project147,4803
(defun projectile-cache-project (project files)projectile-cache-project156,5104
(defun projectile-project-root ()projectile-project-root163,5362
(defun projectile-project-name ()projectile-project-name174,5786
(defun projectile-project-files (directory)projectile-project-files178,5922
(defun projectile-index-directory (directory patterns)projectile-index-directory193,6634
(defun projectile-project-buffers ()projectile-project-buffers225,8324
(defun projectile-project-buffer-names ()projectile-project-buffer-names232,8636
(defun projectile-prepend-project-name (string)projectile-prepend-project-name236,8771
(defun projectile-switch-to-buffer ()projectile-switch-to-buffer240,8925
(defun projectile-multi-occur ()projectile-multi-occur248,9129
(defun projectile-hashify-files (files-list)projectile-hashify-files254,9321
(defun projectile-uniquify-file (filename)projectile-uniquify-file275,10239
(defun projectile-ignored-directory-p (directory)projectile-ignored-directory-p280,10459
(defun projectile-ignored-file-p (file)projectile-ignored-file-p284,10607
(defun projectile-ignored-rel-p (directory file patterns)projectile-ignored-rel-p288,10729
(defun projectile-ignored-files ()projectile-ignored-files297,11143
(defun projectile-ignored-directories ()projectile-ignored-directories305,11339
(defun projectile-project-ignored-files ()projectile-project-ignored-files315,11600
(defun projectile-project-ignored-directories ()projectile-project-ignored-directories319,11746
(defun projectile-abs-patterns ()projectile-abs-patterns323,11904
(defun projectile-rel-patterns ()projectile-rel-patterns331,12202
(defun projectile-project-ignored ()projectile-project-ignored337,12398
(defun projectile-ignore-file ()projectile-ignore-file347,12730
(defun projectile-parse-ignore-file ()projectile-parse-ignore-file351,12885
(defun projectile-expand-root (name)projectile-expand-root360,13288
(defun projectile-completing-read (prompt choices)projectile-completing-read364,13412
(defun projectile-current-project-files ()projectile-current-project-files371,13713
(defun projectile-hash-keys (hash)projectile-hash-keys375,13865
(defun projectile-find-file ()projectile-find-file381,14034
(defun projectile-find-test-file ()projectile-find-test-file390,14428
(defvar projectile-test-files-suffices '("_test" "_spec" "Test" "-test")projectile-test-files-suffices399,14852
(defun projectile-test-files (files)projectile-test-files402,14967
(defun projectile-test-file-p (file)projectile-test-file-p406,15080
(defvar projectile-rails-rspec '("Gemfile" "app" "lib" "db" "config" "spec"))projectile-rails-rspec412,15286
(defvar projectile-rails-test '("Gemfile" "app" "lib" "db" "config" "test"))projectile-rails-test413,15364
(defvar projectile-maven '("pom.xml"))projectile-maven414,15441
(defvar projectile-lein '("project.clj"))projectile-lein415,15480
(defun projectile-project-type ()projectile-project-type417,15523
(defun projectile-verify-files (files)projectile-verify-files427,15944
(defun projectile-toggle-between-implemenation-and-test ()projectile-toggle-between-implemenation-and-test431,16105
(defun projectile-compute-test-file-name (file)projectile-compute-test-file-name446,16727
(defun projectile-compute-file-name (test-file)projectile-compute-file-name454,17099
(defun projectile-grep ()projectile-grep462,17478
(defun projectile-ack ()projectile-ack476,18372
(defun projectile-regenerate-tags ()projectile-regenerate-tags487,18727
(defun projectile-replace ()projectile-replace497,19054
(defun projectile-kill-buffers ()projectile-kill-buffers504,19364
(defun projectile-dired ()projectile-dired516,19740
(defun projectile-recentf ()projectile-recentf521,19865
(defun projectile-serialize-cache ()projectile-serialize-cache536,20501
(defun projectile-load-cache ()projectile-load-cache545,20827
(defun projectile-run-project-command (checks)projectile-run-project-command552,21094
(defun projectile-compile-project ()projectile-compile-project562,21459
(defun projectile-test-project ()projectile-test-project567,21626
(defun projectile-get-project-compile-command (dir checks)projectile-get-project-compile-command572,21776
(defvar projectile-mode-mapprojectile-mode-map579,22026
(defun projectile-add-menu ()projectile-add-menu602,23217
(defun projectile-remove-menu ()projectile-remove-menu626,24495
(define-minor-mode projectile-modeprojectile-mode633,24668
(define-globalized-minor-mode projectile-global-modeprojectile-global-mode649,25042
(defun projectile-on ()projectile-on653,25131
(defun projectile-off ()projectile-off657,25213

/home/malk/.emacs.d/elpa/projectile-20130115.1907/projectile-pkg.el,164
(define-package "projectile" "20130115.1907" "Manage and navigate projects in Emacs easily [source: github]" (quote ((s "1.0.0") (dash "1.0.0"))))"projectile"1,0

/home/malk/.emacs.d/elpa/projectile-20130115.1907/projectile-autoloads.el,68
(defvar projectile-global-mode nil "\projectile-global-mode17,391

/home/malk/.emacs.d/elpa/smart-forward-20121020.1601/smart-forward-pkg.el,143
(define-package "smart-forward" "20121020.1601" "Semantic navigatioin [source: github]" (quote ((expand-region "0.8.0"))))"smart-forward"1,0

/home/malk/.emacs.d/elpa/smart-forward-20121020.1601/smart-forward.el,415
(defun smart--name-contains-inside-p (f)smart--name-contains-inside-p62,1932
(defun smart--er-try-list-without-inside ()smart--er-try-list-without-inside65,2033
(defun smart--only-letters-in-region ()smart--only-letters-in-region68,2143
(defun smart-forward ()smart-forward75,2486
(defun smart-backward ()smart-backward93,3038
(defun smart-down ()smart-down111,3590
(defun smart-up ()smart-up132,4329

/home/malk/.emacs.d/elpa/smart-forward-20121020.1601/smart-forward-autoloads.el,0

/home/malk/.emacs.d/elpa/ace-jump-mode-20121104.1157/ace-jump-mode-autoloads.el,0

/home/malk/.emacs.d/elpa/ace-jump-mode-20121104.1157/ace-jump-mode-pkg.el,145
(define-package "ace-jump-mode" "20121104.1157" "a quick cursor location minor mode for emacs [source: github]" (quote nil))"ace-jump-mode"1,0

/home/malk/.emacs.d/elpa/ace-jump-mode-20121104.1157/ace-jump-mode.el,4311
(defstruct aj-position offset visual-area)aj-position107,3330
(defmacro aj-position-buffer (aj-pos)aj-position-buffer109,3374
(defmacro aj-position-window (aj-pos)aj-position-window113,3521
(defmacro aj-position-frame (aj-pos)aj-position-frame117,3668
(defmacro aj-position-recover-buffer (aj-pos)aj-position-recover-buffer121,3812
(defstruct aj-visual-area buffer window frame recover-buffer)aj-visual-area133,4168
(defstruct aj-queue head tail)aj-queue139,4313
(defun aj-queue-push (item q)aj-queue-push141,4345
(defun aj-queue-pop (q)aj-queue-pop154,4678
(defvar ace-jump-word-mode-use-query-char tace-jump-word-mode-use-query-char179,5299
(defvar ace-jump-mode-case-fold case-fold-searchace-jump-mode-case-fold182,5420
(defvar ace-jump-mode-mark-ring nilace-jump-mode-mark-ring187,5584
(defvar ace-jump-mode-mark-ring-max 100ace-jump-mode-mark-ring-max190,5684
(defvar ace-jump-mode-gray-background tace-jump-mode-gray-background194,5775
(defvar ace-jump-mode-scope 'globalace-jump-mode-scope200,6008
(defvar ace-jump-mode-detect-punc tace-jump-mode-detect-punc209,6416
(defvar ace-jump-mode-submode-listace-jump-mode-submode-list217,6741
(defvar ace-jump-mode-move-keysace-jump-mode-move-keys243,7441
(defvar ace-jump-mode nilace-jump-mode256,7948
(defvar ace-jump-background-overlay-list nilace-jump-background-overlay-list258,7999
(defvar ace-jump-search-tree nilace-jump-search-tree260,8101
(defvar ace-jump-query-char nilace-jump-query-char263,8243
(defvar ace-jump-current-mode nilace-jump-current-mode265,8328
(defvar ace-jump-recover-visual-area-list nilace-jump-recover-visual-area-list269,8444
(defvar ace-jump-sync-emacs-mark-ring nilace-jump-sync-emacs-mark-ring277,8824
(defgroup ace-jump nilace-jump288,9298
(defface ace-jump-face-backgroundace-jump-face-background293,9384
(defface ace-jump-face-foregroundace-jump-face-foreground299,9514
(defvar ace-jump-mode-before-jump-hook nilace-jump-mode-before-jump-hook308,9786
(defvar ace-jump-mode-end-hook nilace-jump-mode-end-hook311,9905
(defvar ace-jump-allow-invisible nilace-jump-allow-invisible314,10004
(defun ace-jump-char-category ( query-char )ace-jump-char-category320,10281
(defun ace-jump-search-candidate (re-query-string visual-area-list)ace-jump-search-candidate355,11296
(defun ace-jump-tree-breadth-first-construct (total-leaf-node max-child-node)ace-jump-tree-breadth-first-construct386,13128
(defun ace-jump-tree-preorder-traverse (tree &optional leaf-func branch-func)ace-jump-tree-preorder-traverse426,14938
(defun ace-jump-populate-overlay-to-search-tree (tree candidate-list)ace-jump-populate-overlay-to-search-tree450,15746
(defun ace-jump-delete-overlay-in-search-tree (tree)ace-jump-delete-overlay-in-search-tree480,17647
(defun ace-jump-buffer-substring (pos)ace-jump-buffer-substring487,17977
(defun ace-jump-update-overlay-in-search-tree (tree keys)ace-jump-update-overlay-in-search-tree494,18238
(defun ace-jump-list-visual-area()ace-jump-list-visual-area534,20133
(defun ace-jump-mode-make-indirect-buffer (visual-area-list)ace-jump-mode-make-indirect-buffer557,21150
(defun ace-jump-do( re-query-string )ace-jump-do598,23111
(defun ace-jump-jump-to (position)ace-jump-jump-to676,26685
(defun ace-jump-push-mark ()ace-jump-push-mark702,27696
(defun ace-jump-mode-pop-mark ()ace-jump-mode-pop-mark719,28604
(defun ace-jump-quick-exchange ()ace-jump-quick-exchange787,32611
(defun ace-jump-char-mode (query-char)ace-jump-char-mode814,33438
(defun ace-jump-word-mode (head-char)ace-jump-word-mode828,33856
(defun ace-jump-line-mode ()ace-jump-line-mode860,35017
(defun ace-jump-mode(&optional prefix)ace-jump-mode868,35214
(defun ace-jump-move ()ace-jump-move897,36182
(defun ace-jump-done()ace-jump-done940,37977
(defun ace-jump-move-to-end-if ( l pred )ace-jump-move-to-end-if985,39577
(defun ace-jump-move-first-to-end-if (l pred)ace-jump-move-first-to-end-if1000,40145
(defadvice pop-mark (before ace-jump-pop-mark-advice)pop-mark1012,40520
(defadvice pop-global-mark (before ace-jump-pop-global-mark-advice)pop-global-mark1025,41153
(defun ace-jump-mode-enable-mark-sync ()ace-jump-mode-enable-mark-sync1043,42008
(defun ace-jump-mode-disable-mark-sync ()ace-jump-mode-disable-mark-sync1059,42714

/home/malk/.emacs.d/elpa/org-bullets-20130128.110/org-bullets.el,852
(defgroup org-bullets nilorg-bullets32,1124
(defcustom org-bullets-bullet-listorg-bullets-bullet-list38,1378
(defvar org-bullet-overlays nil)org-bullet-overlays53,1762
(defvar org-bullets-changes nil)org-bullets-changes56,1846
(defun org-bullets-match-length ()org-bullets-match-length59,1930
(defcustom org-bullets-face-name nilorg-bullets-face-name62,2007
(defun org-bullets-make-star (bullet-string counter)org-bullets-make-star69,2261
(defun org-bullets-clear ()org-bullets-clear100,3426
(defun* org-bullets-redraw (&optional (beginning (point-min)) (end (point-max)))org-bullets-redraw104,3534
(defun org-bullets-notify-change (&rest args)org-bullets-notify-change129,4549
(defun* org-bullets-post-command-hook (&rest ignore)org-bullets-post-command-hook132,4631
(define-minor-mode org-bullets-modeorg-bullets-mode150,5150

/home/malk/.emacs.d/elpa/org-bullets-20130128.110/org-bullets-pkg.el,140
(define-package "org-bullets" "20130128.110" "Show bullets in org-mode as UTF-8 characters [source: github]" (quote nil))"org-bullets"1,0

/home/malk/.emacs.d/elpa/org-bullets-20130128.110/org-bullets-autoloads.el,0

/home/malk/.emacs.d/elpa/org-20130128/ob-sql.el,478
(defvar org-babel-default-header-args:sql '())org-babel-default-header-args:sql53,1814
(defvar org-babel-header-args:sqlorg-babel-header-args:sql55,1862
(defun org-babel-expand-body:sql (body params)org-babel-expand-body:sql59,1943
(defun org-babel-execute:sql (body params)org-babel-execute:sql64,2131
(defun org-babel-sql-expand-vars (body vars)org-babel-sql-expand-vars139,5224
(defun org-babel-prep-session:sql (session params)org-babel-prep-session:sql162,5799

/home/malk/.emacs.d/elpa/org-20130128/org-wl.el,1410
(defgroup org-wl nilorg-wl36,1324
(defcustom org-wl-link-to-refile-destination torg-wl-link-to-refile-destination41,1431
(defcustom org-wl-link-remove-filter nilorg-wl-link-remove-filter46,1594
(defcustom org-wl-shimbun-prefer-web-links nilorg-wl-shimbun-prefer-web-links52,1746
(defcustom org-wl-nntp-prefer-web-links nilorg-wl-nntp-prefer-web-links58,1901
(defcustom org-wl-disable-folder-check torg-wl-disable-folder-check66,2132
(defcustom org-wl-namazu-default-index nilorg-wl-namazu-default-index72,2280
(defvar wl-init)wl-init103,3752
(defvar wl-summary-buffer-elmo-folder)wl-summary-buffer-elmo-folder104,3769
(defvar wl-summary-buffer-folder-name)wl-summary-buffer-folder-name105,3808
(defvar wl-folder-group-regexp)wl-folder-group-regexp106,3847
(defvar wl-auto-check-folder-name)wl-auto-check-folder-name107,3879
(defvar elmo-nntp-default-server)elmo-nntp-default-server108,3914
(defconst org-wl-folder-typesorg-wl-folder-types110,3949
(defun org-wl-folder-type (folder)org-wl-folder-type122,4368
(defun org-wl-message-field (field entity)org-wl-message-field142,4976
(defun org-wl-store-link ()org-wl-store-link149,5256
(defun org-wl-store-link-folder ()org-wl-store-link-folder160,5543
(defun org-wl-store-link-message ()org-wl-store-link-message173,5960
(defun org-wl-open-nntp (path)org-wl-open-nntp256,9274
(defun org-wl-open (path)org-wl-open271,9768

/home/malk/.emacs.d/elpa/org-20130128/org-loaddefs.el,292
(defalias 'org-publish-project 'org-publish)org-publish-project1877,70387
(defvar org-odt-data-dir "/usr/share/emacs/etc/org" "\org-odt-data-dir2692,102824
(defalias 'org-ido-switchb 'org-switchb)org-ido-switchb2900,110329
(defalias 'org-iswitchb 'org-switchb)org-iswitchb2902,110371

/home/malk/.emacs.d/elpa/org-20130128/org-xoxo.el,245
(defvar org-export-xoxo-final-hook nilorg-export-xoxo-final-hook32,1059
(defun org-export-as-xoxo-insert-into (buffer &rest output)org-export-as-xoxo-insert-into35,1151
(defun org-export-as-xoxo (&optional buffer)org-export-as-xoxo41,1348

/home/malk/.emacs.d/elpa/org-20130128/org-datetree.el,756
(defvar org-datetree-base-level 1org-datetree-base-level35,1224
(defcustom org-datetree-add-timestamp nilorg-datetree-add-timestamp41,1515
(defun org-datetree-find-date-create (date &optional keep-restriction)org-datetree-find-date-create51,1847
(defun org-datetree-find-year-create (year)org-datetree-find-year-create74,2745
(defun org-datetree-find-month-create (year month)org-datetree-find-month-create92,3313
(defun org-datetree-find-day-create (year month day)org-datetree-find-day-create111,3935
(defun org-datetree-insert-line (year &optional month day)org-datetree-insert-line130,4576
(defun org-datetree-file-entry-under (txt date)org-datetree-file-entry-under154,5397
(defun org-datetree-cleanup ()org-datetree-cleanup162,5700

/home/malk/.emacs.d/elpa/org-20130128/ob-scheme.el,664
(defvar org-babel-default-header-args:scheme '()org-babel-default-header-args:scheme48,1473
(defvar org-babel-scheme-eoe "org-babel-scheme-eoe"org-babel-scheme-eoe51,1577
(defcustom org-babel-scheme-cmd "guile"org-babel-scheme-cmd54,1685
(defun org-babel-expand-body:scheme (body params)org-babel-expand-body:scheme60,1833
(defvar scheme-program-name)scheme-program-name71,2253
(defun org-babel-execute:scheme (body params)org-babel-execute:scheme72,2282
(defun org-babel-prep-session:scheme (session params)org-babel-prep-session:scheme102,3530
(defun org-babel-scheme-initiate-session (&optional session)org-babel-scheme-initiate-session119,4164

/home/malk/.emacs.d/elpa/org-20130128/ob-io.el,752
(defvar org-babel-tangle-lang-exts) ;; Autoloadedorg-babel-tangle-lang-exts41,1418
(defvar org-babel-default-header-args:io '())org-babel-default-header-args:io43,1525
(defvar org-babel-io-command "io"org-babel-io-command44,1571
(defun org-babel-execute:io (body params)org-babel-execute:io47,1661
(defun org-babel-io-table-or-string (results)org-babel-io-table-or-string69,2580
(defvar org-babel-io-wrapper-methodorg-babel-io-wrapper-method76,2834
(defun org-babel-io-evaluate (session body &optional result-type result-params)org-babel-io-evaluate83,2900
(defun org-babel-prep-session:io (session params)org-babel-prep-session:io108,4023
(defun org-babel-io-initiate-session (&optional session)org-babel-io-initiate-session112,4202

/home/malk/.emacs.d/elpa/org-20130128/ob-eval.el,506
(defvar org-babel-error-buffer-name "*Org-Babel Error Output*")org-babel-error-buffer-name32,1073
(defun org-babel-eval-error-notify (exit-code stderr)org-babel-eval-error-notify35,1213
(defun org-babel-eval (cmd body)org-babel-eval44,1597
(defun org-babel-eval-read-file (file)org-babel-eval-read-file62,2232
(defun org-babel-shell-command-on-region (start end commandorg-babel-shell-command-on-region67,2389
(defun org-babel-eval-wipe-error-buffer ()org-babel-eval-wipe-error-buffer266,10446

/home/malk/.emacs.d/elpa/org-20130128/ob-R.el,2406
(defconst org-babel-header-args:Rorg-babel-header-args:R44,1538
(defvar org-babel-default-header-args:R '())org-babel-default-header-args:R71,2247
(defcustom org-babel-R-command "R --slave --no-save"org-babel-R-command73,2293
(defvar ess-local-process-name) ; dynamically scopedess-local-process-name79,2451
(defun org-babel-edit-prep:R (info)org-babel-edit-prep:R80,2504
(defun org-babel-expand-body:R (body params &optional graphics-file)org-babel-expand-body:R85,2733
(defun org-babel-execute:R (body params)org-babel-execute:R102,3262
(defun org-babel-prep-session:R (session params)org-babel-prep-session:R125,4204
(defun org-babel-load-session:R (session body params)org-babel-load-session:R135,4670
(defun org-babel-variable-assignments:R (params)org-babel-variable-assignments:R146,5025
(defun org-babel-R-quote-tsv-field (s)org-babel-R-quote-tsv-field164,5679
(defun org-babel-R-assign-elisp (name value colnames-p rownames-p)org-babel-R-assign-elisp170,5870
(defvar ess-ask-for-ess-directory) ; dynamically scopedess-ask-for-ess-directory204,7333
(defun org-babel-R-initiate-session (session params)org-babel-R-initiate-session205,7389
(defun org-babel-R-associate-session (session)org-babel-R-associate-session224,7988
(defun org-babel-R-graphical-output-file (params)org-babel-R-graphical-output-file232,8271
(defun org-babel-R-construct-graphics-device-call (out-file params)org-babel-R-construct-graphics-device-call237,8477
(defvar org-babel-R-eoe-indicator "'org_babel_R_eoe'")org-babel-R-eoe-indicator273,9729
(defvar org-babel-R-eoe-output "[1] \"org_babel_R_eoe\"")org-babel-R-eoe-output274,9784
(defvar org-babel-R-write-object-command "{function(object,transfer.file){object;invisible(if(inherits(try({tfile<-tempfile();write.table(object,file=tfile,sep=\"\\t\",na=\"nil\",row.names=%s,col.names=%s,quote=FALSE);file.rename(tfile,transfer.file)},silent=TRUE),\"try-error\")){if(!file.exists(transfer.file))file.create(transfer.file)})}}(object=%s,transfer.file=\"%s\")")org-babel-R-write-object-command276,9843
(defun org-babel-R-evaluateorg-babel-R-evaluate278,10221
(defun org-babel-R-evaluate-external-processorg-babel-R-evaluate-external-process287,10582
(defun org-babel-R-evaluate-sessionorg-babel-R-evaluate-session314,11637
(defun org-babel-R-process-value-result (result column-names-p)org-babel-R-process-value-result364,13369

/home/malk/.emacs.d/elpa/org-20130128/org-w3m.el,584
(defun org-w3m-copy-for-org-mode ()org-w3m-copy-for-org-mode46,1608
(defun org-w3m-get-anchor-start ()org-w3m-get-anchor-start100,4418
(defun org-w3m-get-anchor-end ()org-w3m-get-anchor-end106,4676
(defun org-w3m-get-next-link-start ()org-w3m-get-next-link-start112,4902
(defun org-w3m-get-prev-link-start ()org-w3m-get-prev-link-start123,5340
(defun org-w3m-no-next-link-p ()org-w3m-no-next-link-p134,5794
(defun org-w3m-no-prev-link-p ()org-w3m-no-prev-link-p140,6008
(defvar w3m-mode-map)w3m-mode-map147,6266
(defvar w3m-minor-mode-map)w3m-minor-mode-map148,6288

/home/malk/.emacs.d/elpa/org-20130128/org-irc.el,1004
(defvar org-irc-client 'ercorg-irc-client65,2490
(defvar org-irc-link-to-logs nilorg-irc-link-to-logs67,2549
(defvar erc-default-port)   ; dynamically scoped from erc.elerc-default-port70,2662
(defvar erc-session-port)   ; dynamically scoped form erc-backend.elerc-session-port71,2723
(defvar erc-session-server) ; dynamically scoped form erc-backend.elerc-session-server72,2792
(defun org-irc-visit (link)org-irc-visit80,3031
(defun org-irc-parse-link (link)org-irc-parse-link89,3304
(defun org-irc-store-link ()org-irc-store-link102,3800
(defun org-irc-elipsify-description (string &optional after)org-irc-elipsify-description108,3976
(defun org-irc-erc-get-line-from-log (erc-line)org-irc-erc-get-line-from-log125,4589
(defun org-irc-erc-store-link ()org-irc-erc-store-link147,5456
(defun org-irc-get-erc-link ()org-irc-get-erc-link182,6717
(defun org-irc-get-current-erc-port ()org-irc-get-current-erc-port197,7294
(defun org-irc-visit-erc (link)org-irc-visit-erc209,7613

/home/malk/.emacs.d/elpa/org-20130128/org-colview.el,6745
(defvar org-columns-overlays nilorg-columns-overlays43,1438
(defvar org-columns-current-fmt nilorg-columns-current-fmt46,1520
(defvar org-columns-current-fmt-compiled nilorg-columns-current-fmt-compiled49,1673
(defvar org-columns-current-widths nilorg-columns-current-widths53,1888
(defvar org-columns-current-maxwidths nilorg-columns-current-maxwidths56,2043
(defvar org-columns-begin-marker (make-marker)org-columns-begin-marker59,2216
(defvar org-columns-top-level-marker (make-marker)org-columns-top-level-marker61,2340
(defvar org-columns-map (make-sparse-keymap)org-columns-map64,2457
(defun org-columns-content ()org-columns-content67,2544
(defun org-columns-new-overlay (beg end &optional string face)org-columns-new-overlay149,6009
(defun org-columns-display-here (&optional props dateline)org-columns-display-here158,6375
(defun org-columns-add-ellipses (string width)org-columns-add-ellipses260,10458
(defvar org-columns-full-header-line-format nilorg-columns-full-header-line-format269,10809
(defvar org-previous-header-line-format nilorg-previous-header-line-format271,10933
(defvar org-columns-inhibit-recalculation nilorg-columns-inhibit-recalculation273,11039
(defvar org-columns-flyspell-was-active nilorg-columns-flyspell-was-active275,11145
(defvar header-line-format)header-line-format280,11356
(defvar org-columns-previous-hscroll 0)org-columns-previous-hscroll281,11384
(defun org-columns-display-here-title ()org-columns-display-here-title283,11425
(defun org-columns-hscoll-title ()org-columns-hscoll-title310,12582
(defvar org-colview-initial-truncate-line-value nilorg-colview-initial-truncate-line-value321,13083
(defun org-columns-remove-overlays ()org-columns-remove-overlays324,13196
(defun org-columns-cleanup-item (item fmt cphr)org-columns-cleanup-item345,14183
(defun org-columns-compact-links (s)org-columns-compact-links368,15226
(defun org-columns-show-value ()org-columns-show-value376,15474
(defvar org-agenda-columns-active) ;; defined in org-agenda.elorg-agenda-columns-active382,15674
(defun org-columns-quit ()org-columns-quit384,15738
(defun org-columns-check-computed ()org-columns-check-computed396,16177
(defun org-columns-todo (&optional arg)org-columns-todo404,16539
(defun org-columns-set-tags-or-toggle (&optional arg)org-columns-set-tags-or-toggle409,16681
(defun org-columns-edit-value (&optional key)org-columns-edit-value417,16992
(defun org-edit-headline () ; FIXME: this is not columns specific.  Make interactive?????  Use from agenda????org-edit-headline506,20248
(defun org-columns-edit-allowed ()org-columns-edit-allowed525,20975
(defun org-columns-eval (form)org-columns-eval546,21739
(defun org-columns-previous-allowed-value ()org-columns-previous-allowed-value556,22063
(defun org-columns-next-allowed-value (&optional previous nth)org-columns-next-allowed-value561,22221
(defun org-colview-construct-allowed-dates (s)org-colview-construct-allowed-dates634,25079
(defun org-verify-version (task)org-verify-version655,26118
(defun org-columns-open-link (&optional arg)org-columns-open-link662,26307
(defun org-columns-get-format-and-top-level ()org-columns-get-format-and-top-level667,26481
(defun org-columns-get-format (&optional fmt-string)org-columns-get-format672,26612
(defun org-columns-goto-top-level ()org-columns-goto-top-level682,27008
(defun org-columns (&optional columns-fmt-string)org-columns690,27359
(defvar org-columns-compile-maporg-columns-compile-map743,29356
(defun org-columns-new (&optional prop title width op fmt fun &rest rest)org-columns-new780,30760
(defun org-columns-delete ()org-columns-delete813,32030
(defun org-columns-edit-attributes ()org-columns-edit-attributes828,32599
(defun org-columns-widen (arg)org-columns-widen835,32818
(defun org-columns-narrow (arg)org-columns-narrow847,33219
(defun org-columns-move-right ()org-columns-move-right852,33351
(defun org-columns-move-left ()org-columns-move-left867,33844
(defun org-columns-store-format ()org-columns-store-format877,34126
(defvar org-agenda-overriding-columns-format nilorg-agenda-overriding-columns-format902,35214
(defun org-columns-get-autowidth-alist (s cache)org-columns-get-autowidth-alist906,35384
(defun org-columns-compute-all ()org-columns-compute-all921,35858
(defun org-columns-update (property)org-columns-update933,36270
(defvar org-inlinetask-min-levelorg-inlinetask-min-level950,36871
(defun org-columns-compute (property)org-columns-compute952,36967
(defun org-columns-redo ()org-columns-redo1024,39769
(defun org-columns-not-in-agenda ()org-columns-not-in-agenda1042,40329
(defun org-string-to-number (s)org-string-to-number1046,40472
(defun org-columns-number-to-string (n fmt &optional printf)org-columns-number-to-string1055,40763
(defun org-nofm-to-completion (n m &optional percent)org-nofm-to-completion1077,41622
(defun org-columns-string-to-number (s fmt)org-columns-string-to-number1083,41791
(defun org-columns-uncompile-format (cfmt)org-columns-uncompile-format1116,43324
(defun org-columns-compile-format (fmt)org-columns-compile-format1139,44136
(defvar org-heading-regexp) ; defined in org.elorg-heading-regexp1181,45801
(defvar org-heading-keyword-regexp-format) ; defined in org.elorg-heading-keyword-regexp-format1182,45849
(defun org-columns-capture-view (&optional maxlevel skip-empty-rows)org-columns-capture-view1183,45912
(defun org-dblock-write:columnview (params)org-dblock-write:columnview1227,47617
(defun org-listtable-to-string (tbl)org-listtable-to-string1326,51384
(defun org-insert-columns-dblock ()org-insert-columns-dblock1340,51816
(defvar org-agenda-view-columns-initially nilorg-agenda-view-columns-initially1356,52401
(defvar org-agenda-columns-show-summaries) ; defined in org-agenda.elorg-agenda-columns-show-summaries1359,52525
(defvar org-agenda-columns-compute-summary-properties); defined in org-agenda.elorg-agenda-columns-compute-summary-properties1360,52595
(defvar org-agenda-columns-add-appointments-to-effort-sum); as wellorg-agenda-columns-add-appointments-to-effort-sum1361,52676
(defun org-agenda-columns ()org-agenda-columns1364,52760
(defun org-agenda-colview-summarize (cache)org-agenda-colview-summarize1426,55338
(defun org-agenda-colview-compute (fmt)org-agenda-colview-compute1501,57825
(defun org-format-time-period (interval)org-format-time-period1529,58778
(defun org-estimate-mean-and-var (v)org-estimate-mean-and-var1540,59221
(defun org-estimate-combine (&rest el)org-estimate-combine1548,59509
(defun org-estimate-print (e &optional fmt)org-estimate-print1562,60000
(defun org-string-to-estimate (s)org-string-to-estimate1568,60266

/home/malk/.emacs.d/elpa/org-20130128/ob-lob.el,792
(defvar org-babel-library-of-babel nilorg-babel-library-of-babel33,1068
(defcustom org-babel-lob-files '()org-babel-lob-files38,1237
(defvar org-babel-default-lob-header-args '((:exports . "results"))org-babel-default-lob-header-args45,1453
(defun org-babel-lob-ingest (&optional file)org-babel-lob-ingest48,1592
(defconst org-babel-block-lob-one-liner-regexporg-babel-block-lob-one-liner-regexp66,2273
(defconst org-babel-inline-lob-one-liner-regexporg-babel-inline-lob-one-liner-regexp72,2554
(defconst org-babel-lob-one-liner-regexporg-babel-lob-one-liner-regexp78,2802
(defun org-babel-lob-execute-maybe ()org-babel-lob-execute-maybe86,3074
(defun org-babel-lob-get-info ()org-babel-lob-get-info97,3495
(defun org-babel-lob-execute (info)org-babel-lob-execute119,4251

/home/malk/.emacs.d/elpa/org-20130128/org-id.el,2628
(defgroup org-id nilorg-id81,3055
(defcustom org-id-link-to-org-use-id nilorg-id-link-to-org-use-id88,3262
(defcustom org-id-uuid-program "uuidgen"org-id-uuid-program127,4850
(defcustom org-id-method 'uuidorg-id-method132,4951
(defcustom org-id-prefix nilorg-id-prefix152,5734
(defcustom org-id-include-domain nilorg-id-include-domain163,6073
(defcustom org-id-track-globally torg-id-track-globally175,6582
(defcustom org-id-locations-file (convert-standard-filenameorg-id-locations-file188,7107
(defvar org-id-locations nilorg-id-locations195,7368
(defvar org-id-files nilorg-id-files198,7442
(defcustom org-id-extra-files 'org-agenda-text-search-extra-filesorg-id-extra-files201,7505
(defcustom org-id-search-archives torg-id-search-archives216,8122
(defun org-id-get-create (&optional force)org-id-get-create227,8497
(defun org-id-copy ()org-id-copy236,8809
(defun org-id-get (&optional pom create prefix)org-id-get243,8989
(defun org-id-get-with-outline-path-completion (&optional targets)org-id-get-with-outline-path-completion261,9658
(defun org-id-get-with-outline-drilling (&optional targets)org-id-get-with-outline-drilling277,10401
(defun org-id-goto (id)org-id-goto287,10877
(defun org-id-find (id &optional markerp)org-id-find300,11271
(defun org-id-new (&optional prefix)org-id-new323,12018
(defun org-id-uuid ()org-id-uuid355,13143
(defun org-id-reverse-string (s)org-id-reverse-string379,13707
(defun org-id-int-to-b36-one-digit (i)org-id-int-to-b36-one-digit382,13805
(defun org-id-b36-to-int-one-digit (i)org-id-b36-to-int-one-digit389,14016
(defun org-id-int-to-b36 (i &optional length)org-id-int-to-b36398,14355
(defun org-id-b36-to-int (s)org-id-b36-to-int410,14754
(defun org-id-time-to-b36 (&optional time)org-id-time-to-b36417,14951
(defun org-id-decode (id)org-id-decode426,15297
(defun org-id-update-id-locations (&optional files silent)org-id-update-id-locations443,15982
(defun org-id-locations-save ()org-id-locations-save526,18987
(defun org-id-locations-load ()org-id-locations-load535,19326
(defun org-id-add-location (id file)org-id-add-location551,19902
(defun org-id-hash-to-alist (hash)org-id-hash-to-alist562,20374
(defun org-id-alist-to-hash (list)org-id-alist-to-hash573,20647
(defun org-id-paste-tracker (txt &optional buffer-or-file)org-id-paste-tracker586,20963
(defun org-id-find-id-file (id)org-id-find-id-file605,21682
(defun org-id-find-id-in-file (id file &optional markerp)org-id-find-id-in-file615,22065
(defun org-id-store-link ()org-id-store-link638,22870
(defun org-id-open (id)org-id-open654,23413

/home/malk/.emacs.d/elpa/org-20130128/org-pkg.el,32
(define-package "org""org"1,0

/home/malk/.emacs.d/elpa/org-20130128/org-footnote.el,3415
(defvar org-outline-regexp-bol)		; defined in org.elorg-outline-regexp-bol64,2691
(defvar org-odd-levels-only)		; defined in org.elorg-odd-levels-only65,2744
(defvar org-bracket-link-regexp)	; defined in org.elorg-bracket-link-regexp66,2794
(defvar message-cite-prefix-regexp)	; defined in message.elmessage-cite-prefix-regexp67,2847
(defvar message-signature-separator)	; defined in message.elmessage-signature-separator68,2907
(defconst org-footnote-reorg-footnote-re70,2969
(defconst org-footnote-definition-reorg-footnote-definition-re85,3470
(defconst org-footnote-forbidden-blocksorg-footnote-forbidden-blocks89,3623
(defgroup org-footnote nilorg-footnote93,3797
(defcustom org-footnote-section "Footnotes"org-footnote-section98,3889
(defcustom org-footnote-tag-for-non-org-mode-files "Footnotes:"org-footnote-tag-for-non-org-mode-files113,4640
(defcustom org-footnote-define-inline nilorg-footnote-define-inline127,5297
(defcustom org-footnote-auto-label torg-footnote-auto-label135,5641
(defcustom org-footnote-auto-adjust nilorg-footnote-auto-adjust154,6445
(defcustom org-footnote-fill-after-inline-note-extraction nilorg-footnote-fill-after-inline-note-extraction171,7049
(defun org-footnote-in-valid-context-p ()org-footnote-in-valid-context-p179,7395
(defun org-footnote-at-reference-p ()org-footnote-at-reference-p201,8193
(defun org-footnote-at-definition-p ()org-footnote-at-definition-p246,10147
(defun org-footnote-get-next-reference (&optional label backward limit)org-footnote-get-next-reference286,11631
(defun org-footnote-next-reference-or-definition (limit)org-footnote-next-reference-or-definition306,12416
(defun org-footnote-get-definition (label)org-footnote-get-definition334,13381
(defun org-footnote-goto-definition (label)org-footnote-goto-definition352,14010
(defun org-footnote-goto-previous-reference (label)org-footnote-goto-previous-reference368,14638
(defun org-footnote-normalize-label (label)org-footnote-normalize-label386,15306
(defun org-footnote-all-labels (&optional with-defs)org-footnote-all-labels395,15564
(defun org-footnote-unique-label (&optional current)org-footnote-unique-label428,16717
(defun org-footnote-new ()org-footnote-new443,17190
(defvar org-blank-before-new-entry) ; silence byte-compilerorg-blank-before-new-entry485,18672
(defun org-footnote-create-definition (label)org-footnote-create-definition486,18732
(defun org-footnote-action (&optional special)org-footnote-action562,21808
(defvar org-footnote-insert-pos-for-preprocessor 'point-maxorg-footnote-insert-pos-for-preprocessor605,23340
(defvar org-export-footnotes-seen) ; silence byte-compilerorg-export-footnotes-seen608,23436
(defvar org-export-footnotes-data) ; silence byte-compilerorg-export-footnotes-data609,23495
(defun org-footnote-normalize (&optional sort-only export-props)org-footnote-normalize612,23570
(defun org-footnote-goto-local-insertion-point ()org-footnote-goto-local-insertion-point842,32504
(defun org-footnote-delete-references (label)org-footnote-delete-references854,32962
(defun org-footnote-delete-definitions (label)org-footnote-delete-definitions866,33323
(defun org-footnote-delete (&optional label)org-footnote-delete884,33944
(defun org-footnote-renumber-fn:N ()org-footnote-renumber-fn:N917,35219
(defun org-footnote-auto-adjust-maybe ()org-footnote-auto-adjust-maybe936,35959

/home/malk/.emacs.d/elpa/org-20130128/org-odt.el,16785
(defgroup org-export-odt nilorg-export-odt31,1013
(defvar org-lparse-dyn-first-heading-pos) ; let bound during org-do-lparseorg-lparse-dyn-first-heading-pos37,1162
(defun org-odt-insert-toc ()org-odt-insert-toc38,1237
(defun org-odt-end-export ()org-odt-end-export49,1528
(defvar org-odt-suppress-xref nil)org-odt-suppress-xref79,2488
(defconst org-export-odt-special-string-regexpsorg-export-odt-special-string-regexps80,2523
(defconst org-odt-lib-dir (file-name-directory load-file-name)org-odt-lib-dir87,2798
(defvar org-odt-data-dir nilorg-odt-data-dir92,2975
(defconst org-odt-schema-dir-listorg-odt-schema-dir-list97,3125
(defcustom org-export-odt-schema-dirorg-export-odt-schema-dir110,3659
(defconst org-odt-styles-dir-listorg-odt-styles-dir-list179,6064
(defconst org-odt-styles-dirorg-odt-styles-dir195,6742
(defvar org-odt-file-extensionsorg-odt-file-extensions230,8024
(defun org-odt-unload-function ()org-odt-unload-function257,8948
(defcustom org-export-odt-content-template-file nilorg-export-odt-content-template-file263,9141
(defcustom org-export-odt-styles-file nilorg-export-odt-styles-file274,9470
(defconst org-export-odt-tmpdir-prefix "%s-")org-export-odt-tmpdir-prefix322,11145
(defconst org-export-odt-bookmark-prefix "OrgXref.")org-export-odt-bookmark-prefix323,11191
(defvar org-odt-zip-dir nilorg-odt-zip-dir324,11244
(defvar org-export-odt-embed-images torg-export-odt-embed-images327,11334
(defvar org-export-odt-inline-images 'maybe)org-export-odt-inline-images330,11441
(defcustom org-export-odt-inline-image-extensionsorg-export-odt-inline-image-extensions331,11486
(defcustom org-export-odt-pixels-per-inch display-pixels-per-inchorg-export-odt-pixels-per-inch338,11716
(defcustom org-export-odt-create-custom-styles-for-srcblocks torg-export-odt-create-custom-styles-for-srcblocks346,12007
(defvar org-export-odt-default-org-styles-alistorg-export-odt-default-org-styles-alist365,12759
(defvar org-export-odt-org-styles-alist org-export-odt-default-org-styles-alist)org-export-odt-org-styles-alist396,13754
(defun org-odt-get-style-name-for-entity (category &optional entity)org-odt-get-style-name-for-entity397,13835
(defcustom org-export-odt-preferred-output-format nilorg-export-odt-preferred-output-format407,14230
(defmacro org-odt-cleanup-xml-buffers (&rest body)org-odt-cleanup-xml-buffers431,15199
(defun org-export-as-odt-and-open (arg)org-export-as-odt-and-open459,16066
(defun org-export-as-odt-batch ()org-export-as-odt-batch470,16530
(defun org-export-as-odt (arg &optional hidden ext-plistorg-export-as-odt481,16918
(defvar org-odt-entity-control-callbacks-alistorg-odt-entity-control-callbacks-alist502,18032
(defvar org-odt-entity-format-callbacks-alistorg-odt-entity-format-callbacks-alist531,19043
(defun org-odt-begin-office-body ()org-odt-begin-office-body563,20251
(defvar org-lparse-toc)org-lparse-toc575,20674
(defun org-odt-format-toc ()org-odt-format-toc576,20698
(defun org-odt-format-preamble (opt-plist)org-odt-format-preamble579,20795
(defun org-odt-begin-document-body (opt-plist)org-odt-begin-document-body632,22462
(defvar org-lparse-body-only)		; let bound during org-do-lparseorg-lparse-body-only637,22638
(defvar org-lparse-to-buffer)		; let bound during org-do-lparseorg-lparse-to-buffer638,22702
(defun org-odt-end-document-body (opt-plist)org-odt-end-document-body639,22766
(defun org-odt-begin-document-content (opt-plist)org-odt-begin-document-content644,22935
(defun org-odt-end-document-content ()org-odt-end-document-content647,22998
(defun org-odt-begin-outline (level1 snumber title tagsorg-odt-begin-outline650,23094
(defun org-odt-end-outline ()org-odt-end-outline657,23316
(defun org-odt-begin-outline-text (level1 snumber class)org-odt-begin-outline-text660,23359
(defun org-odt-end-outline-text ()org-odt-end-outline-text663,23429
(defun org-odt-begin-section (style &optional name)org-odt-begin-section666,23477
(defun org-odt-end-section ()org-odt-end-section672,23726
(defun org-odt-begin-paragraph (&optional style)org-odt-begin-paragraph675,23802
(defun org-odt-end-paragraph ()org-odt-end-paragraph679,23947
(defun org-odt-get-extra-attrs-for-paragraph-style (style)org-odt-get-extra-attrs-for-paragraph-style682,24019
(defun org-odt-format-stylized-paragraph (style text)org-odt-format-stylized-paragraph693,24384
(defvar org-lparse-opt-plist)		    ; bound during org-do-lparseorg-lparse-opt-plist698,24557
(defun org-odt-format-author (&optional author)org-odt-format-author699,24621
(defun org-odt-format-date (&optional org-ts fmt)org-odt-format-date703,24816
(defun org-odt-begin-annotation (&optional author date)org-odt-begin-annotation717,25278
(defun org-odt-end-annotation ()org-odt-end-annotation727,25636
(defun org-odt-begin-environment (style env-options-plist)org-odt-begin-environment730,25721
(defun org-odt-end-environment (style env-options-plist)org-odt-end-environment744,26182
(defvar org-lparse-list-stack) ; dynamically bound in org-do-lparseorg-lparse-list-stack758,26580
(defvar org-odt-list-stack-stashed)org-odt-list-stack-stashed759,26648
(defun org-odt-begin-list (ltype)org-odt-begin-list760,26684
(defun org-odt-end-list (ltype)org-odt-end-list777,27373
(defun org-odt-begin-list-item (ltype &optional arg headline)org-odt-begin-list-item784,27594
(defun org-odt-end-list-item (ltype)org-odt-end-list-item815,28800
(defun org-odt-discontinue-list ()org-odt-discontinue-list831,29348
(defun org-odt-continue-list ()org-odt-continue-list838,29607
(defvar org-lparse-table-begin-marker)org-lparse-table-begin-marker846,29942
(defvar org-lparse-table-ncols)org-lparse-table-ncols847,29981
(defvar org-lparse-table-rowgrp-open)org-lparse-table-rowgrp-open848,30013
(defvar org-lparse-table-rownum)org-lparse-table-rownum849,30051
(defvar org-lparse-table-cur-rowgrp-is-hdr)org-lparse-table-cur-rowgrp-is-hdr850,30084
(defvar org-lparse-table-is-styled)org-lparse-table-is-styled851,30128
(defvar org-lparse-table-rowgrp-info)org-lparse-table-rowgrp-info852,30164
(defvar org-lparse-table-colalign-vector)org-lparse-table-colalign-vector853,30202
(defvar org-odt-table-style nilorg-odt-table-style855,30245
(defvar org-odt-table-style-spec nilorg-odt-table-style-spec859,30385
(defcustom org-export-odt-table-stylesorg-export-odt-table-styles862,30494
(defvar org-odt-table-style-formatorg-odt-table-style-format952,34235
(defvar org-odt-automatic-styles '()org-odt-automatic-styles960,34520
(defvar org-odt-object-counters nilorg-odt-object-counters977,35117
(defun org-odt-write-automatic-styles ()org-odt-write-automatic-styles982,35292
(defun org-odt-add-automatic-style (object-type &optional object-props)org-odt-add-automatic-style996,35870
(defvar org-odt-table-indentedp nil)org-odt-table-indentedp1021,36967
(defun org-odt-begin-table (caption label attributes short-caption)org-odt-begin-table1022,37004
(defvar org-lparse-table-colalign-info)org-lparse-table-colalign-info1049,38314
(defun org-odt-end-table ()org-odt-end-table1050,38354
(defun org-odt-begin-table-rowgroup (&optional is-header-row)org-odt-begin-table-rowgroup1084,39710
(defun org-odt-end-table-rowgroup ()org-odt-end-table-rowgroup1093,40055
(defun org-odt-format-table-row (row)org-odt-format-table-row1100,40302
(defun org-odt-get-table-cell-styles (r c &optional style-spec)org-odt-get-table-cell-styles1104,40419
(defun org-odt-get-paragraph-style-cookie-for-table-cell (r c)org-odt-get-paragraph-style-cookie-for-table-cell1177,43401
(defun org-odt-get-style-name-cookie-for-table-cell (r c)org-odt-get-style-name-cookie-for-table-cell1188,43774
(defun org-odt-format-table-cell (data r c horiz-span)org-odt-format-table-cell1192,43927
(defun org-odt-begin-footnote-definition (n)org-odt-begin-footnote-definition1213,44710
(defun org-odt-end-footnote-definition (n)org-odt-end-footnote-definition1216,44798
(defun org-odt-begin-toc (lang-specific-heading max-level)org-odt-begin-toc1219,44872
(defun org-odt-end-toc ()org-odt-end-toc1257,46476
(defun org-odt-format-toc-entry (snumber todo headline tags href)org-odt-format-toc-entry1263,46572
(defun org-odt-format-toc-item (toc-entry level org-last-level)org-odt-format-toc-item1278,47032
(defvar org-lparse-link-description-is-image nil)org-lparse-link-description-is-image1285,47362
(defun org-odt-format-link (desc href &optional attr)org-odt-format-link1286,47412
(defun org-odt-format-spaces (n)org-odt-format-spaces1309,48324
(defun org-odt-format-tabs (&optional n)org-odt-format-tabs1316,48485
(defun org-odt-format-line-break ()org-odt-format-line-break1321,48589
(defun org-odt-format-horizontal-line ()org-odt-format-horizontal-line1324,48675
(defun org-odt-encode-plain-text (line &optional no-whitespace-filling)org-odt-encode-plain-text1327,48776
(defun org-odt-format-line (line)org-odt-format-line1332,48971
(defun org-odt-format-comment (fmt &rest args)org-odt-format-comment1339,49197
(defun org-odt-format-org-entity (wd)org-odt-format-org-entity1343,49331
(defun org-odt-fill-tabs-and-spaces (line)org-odt-fill-tabs-and-spaces1346,49414
(defcustom org-export-odt-fontify-srcblocks torg-export-odt-fontify-srcblocks1353,49640
(defun org-odt-format-source-line-with-line-number-and-labelorg-odt-format-source-line-with-line-number-and-label1362,50000
(defun org-odt-format-source-code-or-example-plainorg-odt-format-source-code-or-example-plain1375,50576
(defvar org-src-block-paragraph-formatorg-src-block-paragraph-format1392,51171
(defvar hfy-optimisations)hfy-optimisations1404,51846
(defun org-odt-hfy-face-to-css (fn)org-odt-hfy-face-to-css1408,51992
(defun org-odt-insert-custom-styles-for-srcblocks (styles)org-odt-insert-custom-styles-for-srcblocks1443,53296
(defun org-odt-format-source-code-or-example-coloredorg-odt-format-source-code-or-example-colored1455,53788
(defun org-odt-format-source-code-or-example (lines lang caption textareaporg-odt-format-source-code-or-example1498,55433
(defun org-odt-remap-stylenames (style-name)org-odt-remap-stylenames1524,56536
(defun org-odt-format-fontify (text style &optional id)org-odt-format-fontify1535,56882
(defun org-odt-relocate-relative-path (path dir)org-odt-relocate-relative-path1554,57527
(defun org-odt-format-inline-image (thefile)org-odt-format-inline-image1559,57708
(defvar org-odt-entity-labels-alist nilorg-odt-entity-labels-alist1571,58205
(defun org-export-odt-format-formula (src href)org-export-odt-format-formula1585,58849
(defvar org-odt-embedded-formulas-count 0)org-odt-embedded-formulas-count1623,60364
(defun org-odt-copy-formula-file (path)org-odt-copy-formula-file1624,60407
(defun org-odt-format-inline-formula (thefile)org-odt-format-inline-formula1650,61313
(defun org-odt-is-formula-link-p (file)org-odt-is-formula-link-p1661,61790
(defun org-odt-format-org-link (opt-plist type-1 path fragment desc attrorg-odt-format-org-link1669,61994
(defun org-odt-format-heading (text level &optional id)org-odt-format-heading1768,65640
(defun org-odt-format-headline (title extra-targets tagsorg-odt-format-headline1774,65904
(defun org-odt-format-anchor (text name &optional class)org-odt-format-anchor1787,66329
(defun org-odt-format-bookmark (text id)org-odt-format-bookmark1790,66424
(defun org-odt-format-target (text id)org-odt-format-target1795,66558
(defun org-odt-format-footnote (n def)org-odt-format-footnote1804,66895
(defun org-odt-format-footnote-reference (n def refcnt)org-odt-format-footnote-reference1820,67346
(defun org-odt-format-footnote-ref (n)org-odt-format-footnote-ref1825,67498
(defun org-odt-get-image-name (file-name)org-odt-get-image-name1836,67919
(defun org-export-odt-format-image (src href)org-export-odt-format-image1842,68103
(defun org-odt-format-object-description (title description)org-odt-format-object-description1892,70092
(defun org-odt-format-frame (text width height style &optionalorg-odt-format-frame1900,70417
(defun org-odt-format-textbox (text width height style &optionalorg-odt-format-textbox1915,70990
(defun org-odt-format-inlinetask (heading contentorg-odt-format-inlinetask1925,71365
(defvar org-odt-entity-frame-stylesorg-odt-entity-frame-styles1936,71764
(defun org-odt-merge-frame-params(default-frame-params user-frame-params)org-odt-merge-frame-params1958,72851
(defun* org-odt-format-entity (entity href width heightorg-odt-format-entity1966,73231
(defvar org-odt-embedded-images-count 0)org-odt-embedded-images-count2000,74469
(defun org-odt-copy-image-file (path)org-odt-copy-image-file2001,74510
(defvar org-export-odt-image-size-probe-methodorg-export-odt-image-size-probe-method2023,75300
(defvar org-export-odt-default-image-sizes-alistorg-export-odt-default-image-sizes-alist2028,75501
(defvar org-export-odt-max-image-size '(17.0 . 20.0)org-export-odt-max-image-size2037,75830
(defun org-odt-do-image-size (probe-method file &optional dpi anchor-type)org-odt-do-image-size2040,75932
(defun org-odt-image-size-from-file (file &optional user-widthorg-odt-image-size-from-file2073,77154
(defvar org-odt-entity-counts-plist nilorg-odt-entity-counts-plist2106,78534
(defvar org-odt-label-stylesorg-odt-label-styles2110,78708
(defcustom org-export-odt-category-stringsorg-export-odt-category-strings2135,79810
(defvar org-odt-category-map-alistorg-odt-category-map-alist2166,81036
(defun org-odt-add-label-definition (label default-category)org-odt-add-label-definition2192,82200
(defun org-odt-format-label-definition (caption label category counterorg-odt-format-label-definition2221,83549
(defun org-odt-format-label-reference (label category counterorg-odt-format-label-reference2232,84011
(defun org-odt-fixup-label-references ()org-odt-fixup-label-references2245,84488
(defun org-odt-format-entity-caption (label caption category)org-odt-format-entity-caption2258,84980
(defun org-odt-format-tags (tag text &rest args)org-odt-format-tags2263,85182
(defvar org-odt-manifest-file-entries nil)org-odt-manifest-file-entries2268,85400
(defun org-odt-init-outfile (filename)org-odt-init-outfile2269,85443
(defcustom org-export-odt-prettify-xml nilorg-export-odt-prettify-xml2291,86186
(defvar hfy-user-sheet-assoc)		; bound during org-do-lparsehfy-user-sheet-assoc2301,86548
(defun org-odt-save-as-outfile (target opt-plist)org-odt-save-as-outfile2302,86608
(defconst org-odt-manifest-file-entry-tagorg-odt-manifest-file-entry-tag2367,88658
(defun org-odt-create-manifest-file-entry (&rest args)org-odt-create-manifest-file-entry2371,88785
(defun org-odt-write-manifest-file ()org-odt-write-manifest-file2374,88886
(defun org-odt-update-meta-file (opt-plist)org-odt-update-meta-file2395,89682
(defun org-odt-update-styles-file (opt-plist)org-odt-update-styles-file2434,91408
(defun org-odt-write-mimetype-file (format)org-odt-write-mimetype-file2466,92824
(defun org-odt-finalize-outfile ()org-odt-finalize-outfile2476,93184
(defun org-odt-delete-empty-paragraphs ()org-odt-delete-empty-paragraphs2479,93257
(defcustom org-export-odt-convert-processesorg-export-odt-convert-processes2486,93481
(defcustom org-export-odt-convert-process "LibreOffice"org-export-odt-convert-process2518,94565
(defcustom org-export-odt-convert-capabilitiesorg-export-odt-convert-capabilities2533,95119
(defun org-export-odt-convert (&optional in-file out-fmt prefix-arg)org-export-odt-convert2606,97867
(defun org-odt-get (what &optional opt-plist)org-odt-get2617,98422
(defvar org-lparse-latex-fragment-fallback) ; set by org-do-lparseorg-lparse-latex-fragment-fallback2648,99732
(defun org-export-odt-do-preprocess-latex-fragments ()org-export-odt-do-preprocess-latex-fragments2649,99799
(defadvice org-format-latex-as-mathmlorg-format-latex-as-mathml2679,101023
(defun org-export-odt-preprocess-latex-fragments ()org-export-odt-preprocess-latex-fragments2689,101410
(defun org-export-odt-preprocess-label-references ()org-export-odt-preprocess-label-references2693,101564
(defun org-export-odt-preprocess (parameters)org-export-odt-preprocess2723,102977
(defun org-odt-zip-extract-one (archive member &optional target)org-odt-zip-extract-one2727,103137
(defun org-odt-zip-extract (archive members &optional target)org-odt-zip-extract2742,103631
(defun org-odt-copy-styles-file (&optional styles-file)org-odt-copy-styles-file2748,103836
(defun org-odt-configure-outline-numbering (level)org-odt-configure-outline-numbering2782,105131
(defun org-export-as-odf (latex-frag &optional odf-file)org-export-as-odf2796,105667
(defun org-export-as-odf-and-open ()org-export-as-odf-and-open2845,107592

/home/malk/.emacs.d/elpa/org-20130128/org-bbdb.el,1419
(defgroup org-bbdb-anniversaries nilorg-bbdb-anniversaries129,4933
(defcustom org-bbdb-default-anniversary-format "birthday"org-bbdb-default-anniversary-format133,5061
(defcustom org-bbdb-anniversary-format-alistorg-bbdb-anniversary-format-alist139,5219
(defcustom org-bbdb-anniversary-field 'anniversaryorg-bbdb-anniversary-field168,6434
(defcustom org-bbdb-extract-date-fun 'org-bbdb-anniv-extract-dateorg-bbdb-extract-date-fun185,7008
(defun org-bbdb-store-link ()org-bbdb-store-link201,7510
(defun org-bbdb-export (path desc format)org-bbdb-export215,8072
(defun org-bbdb-open (name)org-bbdb-open228,8591
(defun org-bbdb-open-old (name)org-bbdb-open-old237,8843
(defun org-bbdb-open-new (name)org-bbdb-open-new257,9653
(defun org-bbdb-anniv-extract-date (time-str)org-bbdb-anniv-extract-date277,10501
(defun org-bbdb-anniv-split (str)org-bbdb-anniv-split290,10985
(defvar org-bbdb-anniv-hash nilorg-bbdb-anniv-hash298,11275
(defvar org-bbdb-updated-p torg-bbdb-updated-p302,11403
(defun org-bbdb-make-anniv-hash ()org-bbdb-make-anniv-hash305,11509
(defun org-bbdb-updated (rec)org-bbdb-updated333,12707
(defun org-bbdb-anniversaries ()org-bbdb-anniversaries341,12947
(defun org-bbdb-complete-link ()org-bbdb-complete-link395,14911
(defun org-bbdb-anniv-export-ical ()org-bbdb-anniv-export-ical401,15097
(defun org-bbdb-format-vevent (key recs)org-bbdb-format-vevent413,15542

/home/malk/.emacs.d/elpa/org-20130128/org-vm.el,433
(defvar vm-message-pointer)vm-message-pointer54,2353
(defvar vm-folder-directory)vm-folder-directory55,2381
(defun org-vm-store-link ()org-vm-store-link63,2597
(defun org-vm-open (path)org-vm-open107,4519
(defun org-vm-follow-link (&optional folder article readonly)org-vm-follow-link117,4908
(defun org-vm-imap-open (path)org-vm-imap-open141,5842
(defun org-vm-select-message (message-id)org-vm-select-message160,6741

/home/malk/.emacs.d/elpa/org-20130128/ob-keys.el,270
(defvar org-babel-key-prefix "\C-c\C-v"org-babel-key-prefix34,1173
(defvar org-babel-map (make-sparse-keymap)org-babel-map40,1429
(defun org-babel-describe-bindings ()org-babel-describe-bindings44,1537
(defvar org-babel-key-bindingsorg-babel-key-bindings49,1696

/home/malk/.emacs.d/elpa/org-20130128/ob-table.el,200
(defun org-babel-table-truncate-at-newline (string)org-babel-table-truncate-at-newline55,1613
(defmacro sbe (source-block &rest variables)sbe63,1989
(def-edebug-spec sbe (form form))sbe132,4381

/home/malk/.emacs.d/elpa/org-20130128/org.el,100481
(defvar org-inhibit-highlight-removal nil) ; dynamically scoped paramorg-inhibit-highlight-removal66,2868
(defvar org-table-formula-constants-local nilorg-table-formula-constants-local67,2938
(defvar org-outline-regexp "\\*+ "org-outline-regexp90,3658
(defvar org-outline-regexp-bol "^\\*+ "org-outline-regexp-bol93,3730
(defvar org-heading-regexp "^\\(\\*+\\)\\(?: +\\(.*?\\)\\)?[ \t]*$"org-heading-regexp98,3917
(defvar org-babel-load-languages)org-babel-load-languages137,6087
(defun org-babel-do-load-languages (sym value)org-babel-do-load-languages140,6137
(defcustom org-babel-load-languages '((emacs-lisp . t))org-babel-load-languages155,6623
(defcustom org-clone-delete-id nilorg-clone-delete-id214,8653
(defun org-version (&optional here full message)org-version228,8993
(defconst org-version (org-version))org-version258,10151
(defgroup org nilorg264,10244
(defcustom org-mode-hook nilorg-mode-hook270,10365
(defcustom org-load-hook nilorg-load-hook275,10486
(defcustom org-log-buffer-setup-hook nilorg-log-buffer-setup-hook280,10596
(defvar org-modules)  ; defined beloworg-modules286,10742
(defvar org-modules-loaded nilorg-modules-loaded287,10780
(defun org-load-modules-maybe (&optional force)org-load-modules-maybe290,10855
(defun org-set-modules (var value)org-set-modules299,11186
(defcustom org-modules '(org-bbdb org-bibtex org-docview org-gnus org-info org-jsinfo org-irc org-mew org-mhe org-rmail org-vm org-w3m org-wl)org-modules309,11503
(defcustom org-support-shift-select nilorg-support-shift-select387,17334
(defcustom org-loop-over-headlines-in-active-region nilorg-loop-over-headlines-in-active-region431,19475
(defgroup org-startup nilorg-startup457,20569
(defcustom org-startup-folded torg-startup-folded462,20676
(defcustom org-startup-truncated torg-startup-truncated478,21293
(defcustom org-startup-indented nilorg-startup-indented485,21558
(defcustom org-use-sub-superscripts torg-use-sub-superscripts497,21936
(defcustom org-startup-with-beamer-mode nilorg-startup-with-beamer-mode532,23363
(defcustom org-startup-align-all-tables nilorg-startup-align-all-tables542,23653
(defcustom org-startup-with-inline-images nilorg-startup-with-inline-images553,24099
(defcustom org-insert-mode-line-in-empty-file nilorg-insert-mode-line-in-empty-file563,24435
(defcustom org-replace-disputed-keys nilorg-replace-disputed-keys573,24905
(defcustom org-use-extra-keys nilorg-use-extra-keys589,25633
(defcustom org-disputed-keysorg-disputed-keys605,26249
(defun org-key (key)org-key622,26937
(defun org-find-if (predicate seq)org-find-if636,27472
(defun org-defkey (keymap key def)org-defkey643,27620
(defcustom org-ellipsis nilorg-ellipsis647,27762
(defvar org-display-table nilorg-display-table659,28293
(defgroup org-keywords nilorg-keywords662,28396
(defcustom org-deadline-string "DEADLINE:"org-deadline-string667,28487
(defcustom org-scheduled-string "SCHEDULED:"org-scheduled-string676,28831
(defcustom org-closed-string "CLOSED:"org-closed-string685,29183
(defcustom org-clock-string "CLOCK:"org-clock-string690,29338
(defconst org-planning-or-clock-line-re (concat "^[ \t]*\\("org-planning-or-clock-line-re695,29489
(defcustom org-comment-string "COMMENT"org-comment-string702,29725
(defcustom org-quote-string "QUOTE"org-quote-string710,30003
(defconst org-repeat-reorg-repeat-re719,30392
(defgroup org-structure nilorg-structure724,30625
(defgroup org-reveal-location nilorg-reveal-location729,30756
(defconst org-context-choiceorg-context-choice734,30906
(defcustom org-show-hierarchy-above '((default . t))org-show-hierarchy-above753,31375
(defcustom org-show-following-heading '((default . nil))org-show-following-heading773,32454
(defcustom org-show-siblings '((default . nil) (isearch t))org-show-siblings786,33125
(defcustom org-show-entry-below '((default . nil))org-show-entry-below802,34008
(defcustom org-indirect-buffer-display 'other-windoworg-indirect-buffer-display814,34545
(defcustom org-use-speed-commands nilorg-use-speed-commands833,35443
(defcustom org-speed-commands-user nilorg-speed-commands-user843,35797
(defgroup org-cycle nilorg-cycle865,36760
(defcustom org-cycle-skip-children-state-if-no-children torg-cycle-skip-children-state-if-no-children870,36884
(defcustom org-cycle-max-level nilorg-cycle-max-level875,37051
(defcustom org-drawers '("PROPERTIES" "CLOCK" "LOGBOOK" "RESULTS")org-drawers890,37709
(defcustom org-hide-block-startup nilorg-hide-block-startup907,38253
(defcustom org-cycle-global-at-bob nilorg-cycle-global-at-bob917,38504
(defcustom org-cycle-level-after-item/entry-creation torg-cycle-level-after-item/entry-creation928,39096
(defcustom org-cycle-emulate-tab torg-cycle-emulate-tab943,39815
(defcustom org-cycle-separator-lines 2org-cycle-separator-lines960,40527
(defcustom org-pre-cycle-hook nilorg-pre-cycle-hook978,41355
(defcustom org-cycle-hook '(org-cycle-hide-archived-subtreesorg-cycle-hook988,41826
(defgroup org-edit-structure nilorg-edit-structure1001,42457
(defcustom org-odd-levels-only nilorg-odd-levels-only1006,42598
(defcustom org-adapt-indentation torg-adapt-indentation1022,43194
(defcustom org-special-ctrl-a/e nilorg-special-ctrl-a/e1046,44261
(defcustom org-special-ctrl-k nilorg-special-ctrl-k1086,45971
(defcustom org-ctrl-k-protect-subtree nilorg-ctrl-k-protect-subtree1098,46492
(defcustom org-catch-invisible-edits nilorg-catch-invisible-edits1111,47107
(defcustom org-yank-folded-subtrees torg-yank-folded-subtrees1134,48274
(defcustom org-yank-adjusted-subtrees nilorg-yank-adjusted-subtrees1143,48698
(defcustom org-M-RET-may-split-line '((default . t))org-M-RET-may-split-line1150,48948
(defcustom org-insert-heading-respect-content nilorg-insert-heading-respect-content1177,49726
(defcustom org-blank-before-new-entry '((heading . auto)org-blank-before-new-entry1186,50109
(defcustom org-insert-heading-hook nilorg-insert-heading-hook1208,51017
(defcustom org-enable-fixed-width-editor torg-enable-fixed-width-editor1213,51151
(defcustom org-goto-auto-isearch torg-goto-auto-isearch1221,51455
(defgroup org-sparse-trees nilorg-sparse-trees1234,51909
(defcustom org-highlight-sparse-tree-matches torg-highlight-sparse-tree-matches1239,52041
(defcustom org-remove-highlights-with-change torg-remove-highlights-with-change1246,52301
(defcustom org-occur-hook '(org-first-headline-recenter)org-occur-hook1257,52717
(defgroup org-imenu-and-speedbar nilorg-imenu-and-speedbar1264,52973
(defcustom org-imenu-depth 2org-imenu-depth1269,53123
(defgroup org-table nilorg-table1275,53305
(defcustom org-enable-table-editor 'optimizedorg-enable-table-editor1280,53407
(defcustom org-self-insert-cluster-for-undo (or (featurep 'xemacs)org-self-insert-cluster-for-undo1311,54890
(defcustom org-table-tab-recognizes-table.el torg-table-tab-recognizes-table.el1320,55286
(defgroup org-link nilorg-link1327,55548
(defvar org-link-abbrev-alist-local nilorg-link-abbrev-alist-local1332,55647
(defcustom org-link-abbrev-alist nilorg-link-abbrev-alist1337,55861
(defcustom org-descriptive-links torg-descriptive-links1368,57084
(defcustom org-link-file-path-type 'adaptiveorg-link-file-path-type1380,57542
(defcustom org-activate-links '(bracket angle plain radio tag date footnote)org-activate-links1397,58169
(defcustom org-make-link-description-function nilorg-make-link-description-function1423,59416
(defgroup org-link-store nilorg-link-store1432,59798
(defcustom org-url-hexify-p torg-url-hexify-p1437,59922
(defcustom org-email-link-description-format "Email %c: %.30s"org-email-link-description-format1443,60065
(defcustom org-from-is-user-regexporg-from-is-user-regexp1464,60868
(defcustom org-context-in-file-links torg-context-in-file-links1476,61430
(defcustom org-keep-stored-link-after-insertion nilorg-keep-stored-link-after-insertion1489,62069
(defgroup org-link-follow nilorg-link-follow1502,62659
(defcustom org-link-translation-function nilorg-link-translation-function1507,62787
(defcustom org-follow-link-hook nilorg-follow-link-hook1521,63474
(defcustom org-tab-follows-link nilorg-tab-follows-link1526,63605
(defcustom org-return-follows-link nilorg-return-follows-link1534,63867
(defcustom org-mouse-1-follows-linkorg-mouse-1-follows-link1539,64004
(defcustom org-mark-ring-length 4org-mark-ring-length1547,64326
(defcustom org-link-search-must-match-exact-headline 'query-to-createorg-link-search-must-match-exact-headline1553,64528
(defcustom org-link-frame-setuporg-link-frame-setup1565,64994
(defcustom org-display-internal-link-with-indirect-buffer nilorg-display-internal-link-with-indirect-buffer1615,66411
(defcustom org-open-non-existing-files nilorg-open-non-existing-files1627,67002
(defcustom org-open-directory-means-index-dot-org nilorg-open-directory-means-index-dot-org1636,67373
(defcustom org-link-mailto-program '(browse-url "mailto:%a?subject=%s")org-link-mailto-program1643,67643
(defcustom org-confirm-shell-link-function 'yes-or-no-porg-confirm-shell-link-function1656,68355
(defcustom org-confirm-shell-link-not-regexp ""org-confirm-shell-link-not-regexp1676,69191
(defcustom org-confirm-elisp-link-function 'yes-or-no-porg-confirm-elisp-link-function1682,69352
(defcustom org-confirm-elisp-link-not-regexp ""org-confirm-elisp-link-not-regexp1702,70213
(defconst org-file-apps-defaults-gnuorg-file-apps-defaults-gnu1708,70374
(defconst org-file-apps-defaults-macosxorg-file-apps-defaults-macosx1715,70558
(defconst org-file-apps-defaults-windowsntorg-file-apps-defaults-windowsnt1728,70976
(defcustom org-file-appsorg-file-apps1745,71412
(defcustom org-doi-server-url "http://dx.doi.org/"org-doi-server-url1841,76155
(defgroup org-refile nilorg-refile1847,76299
(defcustom org-directory "~/org"org-directory1852,76413
(defcustom org-default-notes-file (convert-standard-filename "~/.notes")org-default-notes-file1869,77075
(defcustom org-goto-interface 'outlineorg-goto-interface1880,77448
(defcustom org-goto-max-level 5org-goto-max-level1894,78123
(defcustom org-reverse-note-order nilorg-reverse-note-order1899,78267
(defcustom org-log-refile nilorg-log-refile1913,78775
(defcustom org-refile-targets nilorg-refile-targets1941,79588
(defcustom org-refile-target-verify-function nilorg-refile-target-verify-function1988,81912
(defcustom org-refile-use-cache nilorg-refile-use-cache2002,82571
(defcustom org-refile-use-outline-path nilorg-refile-use-outline-path2014,83109
(defcustom org-outline-path-complete-in-steps torg-outline-path-complete-in-steps2030,83722
(defcustom org-refile-allow-creating-parent-nodes nilorg-refile-allow-creating-parent-nodes2042,84331
(defcustom org-refile-active-region-within-subtree nilorg-refile-active-region-within-subtree2059,85047
(defgroup org-todo nilorg-todo2070,85453
(defgroup org-progress nilorg-progress2075,85557
(defvar org-todo-interpretation-widgetsorg-todo-interpretation-widgets2080,85680
(defcustom org-todo-keywords '((sequence "TODO" "DONE"))org-todo-keywords2086,85959
(defvar org-todo-keywords-1 nilorg-todo-keywords-12150,88784
(defvar org-todo-keywords-for-agenda nil)org-todo-keywords-for-agenda2153,88918
(defvar org-done-keywords-for-agenda nil)org-done-keywords-for-agenda2154,88960
(defvar org-drawers-for-agenda nil)org-drawers-for-agenda2155,89002
(defvar org-todo-keyword-alist-for-agenda nil)org-todo-keyword-alist-for-agenda2156,89038
(defvar org-tag-alist-for-agenda nil)org-tag-alist-for-agenda2157,89085
(defvar org-agenda-contributing-files nil)org-agenda-contributing-files2158,89123
(defvar org-not-done-keywords nil)org-not-done-keywords2159,89166
(defvar org-done-keywords nil)org-done-keywords2161,89253
(defvar org-todo-heads nil)org-todo-heads2163,89332
(defvar org-todo-sets nil)org-todo-sets2165,89405
(defvar org-todo-log-states nil)org-todo-log-states2167,89476
(defvar org-todo-kwd-alist nil)org-todo-kwd-alist2169,89559
(defvar org-todo-key-alist nil)org-todo-key-alist2171,89640
(defvar org-todo-key-trigger nil)org-todo-key-trigger2173,89721
(defcustom org-todo-interpretation 'sequenceorg-todo-interpretation2176,89807
(defcustom org-use-fast-todo-selection torg-use-fast-todo-selection2187,90204
(defcustom org-provide-todo-statistics torg-provide-todo-statistics2211,91124
(defcustom org-hierarchical-todo-statistics torg-hierarchical-todo-statistics2228,91822
(defcustom org-after-todo-state-change-hook nilorg-after-todo-state-change-hook2237,92211
(defvar org-blocker-hook nilorg-blocker-hook2244,92460
(defvar org-trigger-hook nilorg-trigger-hook2254,92810
(defcustom org-enforce-todo-dependencies nilorg-enforce-todo-dependencies2274,93412
(defcustom org-enforce-todo-checkbox-dependencies nilorg-enforce-todo-checkbox-dependencies2290,94046
(defcustom org-treat-insert-todo-heading-as-state-change nilorg-treat-insert-todo-heading-as-state-change2308,94807
(defcustom org-treat-S-cursor-todo-selection-as-state-change torg-treat-S-cursor-todo-selection-as-state-change2316,95170
(defcustom org-todo-state-tags-triggers nilorg-todo-state-tags-triggers2324,95501
(defcustom org-log-done nilorg-log-done2345,96219
(defcustom org-log-reschedule nilorg-log-reschedule2375,97126
(defcustom org-log-redeadline nilorg-log-redeadline2396,97755
(defcustom org-log-note-clock-out nilorg-log-note-clock-out2420,98499
(defcustom org-log-done-with-time torg-log-done-with-time2431,98834
(defcustom org-log-note-headingsorg-log-note-headings2437,99022
(defcustom org-log-into-drawer nilorg-log-into-drawer2480,101060
(defun org-log-into-drawer ()org-log-into-drawer2506,101978
(defcustom org-log-state-notes-insert-after-drawers nilorg-log-state-notes-insert-after-drawers2517,102375
(defcustom org-log-states-order-reversed torg-log-states-order-reversed2530,102838
(defcustom org-todo-repeat-to-state nilorg-todo-repeat-to-state2537,103082
(defcustom org-log-repeat 'timeorg-log-repeat2547,103521
(defgroup org-priorities nilorg-priorities2575,104570
(defcustom org-enable-priority-commands torg-enable-priority-commands2580,104672
(defcustom org-highest-priority ?Aorg-highest-priority2587,104896
(defcustom org-lowest-priority ?Corg-lowest-priority2593,105108
(defcustom org-default-priority ?Borg-default-priority2599,105318
(defcustom org-priority-start-cycle-with-default torg-priority-start-cycle-with-default2612,105999
(defcustom org-get-priority-function nilorg-get-priority-function2620,106330
(defgroup org-time nilorg-time2631,106804
(defcustom org-insert-labeled-timestamps-at-point nilorg-insert-labeled-timestamps-at-point2636,106923
(defconst org-time-stamp-formats '("<%Y-%m-%d %a>" . "<%Y-%m-%d %a %H:%M>")org-time-stamp-formats2644,107299
(defcustom org-time-stamp-rounding-minutes '(0 5)org-time-stamp-rounding-minutes2648,107493
(defcustom org-display-custom-times nilorg-display-custom-times2677,108729
(defcustom org-time-stamp-custom-formatsorg-time-stamp-custom-formats2687,109111
(defun org-time-stamp-format (&optional long inactive)org-time-stamp-format2697,109595
(defcustom org-time-clocksum-format "%d:%02d"org-time-clocksum-format2705,109847
(defcustom org-time-clocksum-use-fractional nilorg-time-clocksum-use-fractional2711,110046
(defcustom org-time-clocksum-fractional-format "%.2f"org-time-clocksum-fractional-format2717,110229
(defcustom org-deadline-warning-days 14org-deadline-warning-days2723,110421
(defcustom org-read-date-prefer-future torg-read-date-prefer-future2734,110878
(defcustom org-agenda-jump-prefer-future 'org-read-date-prefer-futureorg-agenda-jump-prefer-future2763,111966
(defcustom org-read-date-force-compatible-dates torg-read-date-force-compatible-dates2777,112512
(defcustom org-read-date-display-live torg-read-date-display-live2808,113930
(defcustom org-read-date-popup-calendar torg-read-date-popup-calendar2814,114133
(defcustom org-read-date-minibuffer-setup-hook nilorg-read-date-minibuffer-setup-hook2825,114588
(defcustom org-extend-today-until 0org-extend-today-until2832,114817
(defcustom org-use-effective-time nilorg-use-effective-time2847,115558
(defcustom org-edit-timestamp-down-means-later nilorg-edit-timestamp-down-means-later2856,115895
(defcustom org-calendar-follow-timestamp-change torg-calendar-follow-timestamp-change2862,116079
(defgroup org-tags nilorg-tags2869,116335
(defcustom org-tag-alist nilorg-tag-alist2874,116433
(defcustom org-tag-persistent-alist nilorg-tag-persistent-alist2895,117187
(defcustom org-complete-tags-always-offer-all-agenda-tags nilorg-complete-tags-always-offer-all-agenda-tags2915,118027
(defvar org-file-tags nilorg-file-tags2930,118600
(defcustom org-use-fast-tag-selection 'autoorg-use-fast-tag-selection2936,118835
(defcustom org-fast-tag-selection-single-key nilorg-fast-tag-selection-single-key2951,119497
(defvar org-fast-tag-selection-include-todo nilorg-fast-tag-selection-include-todo2963,119982
(defcustom org-tags-column (if (featurep 'xemacs) -76 -77)org-tags-column2967,120169
(defcustom org-auto-align-tags torg-auto-align-tags2977,120606
(defcustom org-use-tag-inheritance torg-use-tag-inheritance2985,120939
(defcustom org-tags-exclude-from-inheritance nilorg-tags-exclude-from-inheritance3005,121926
(defun org-tag-inherit-p (tag)org-tag-inherit-p3013,122259
(defcustom org-tags-match-list-sublevels torg-tags-match-list-sublevels3025,122710
(defcustom org-tags-sort-function nilorg-tags-sort-function3047,123695
(defvar org-tags-history nilorg-tags-history3056,123999
(defvar org-last-tags-completion-table nilorg-last-tags-completion-table3058,124071
(defvar org-after-tags-change-hook nilorg-after-tags-change-hook3060,124160
(defgroup org-properties nilorg-properties3063,124261
(defcustom org-property-format "%-10s %s"org-property-format3068,124377
(defcustom org-properties-postprocess-alist nilorg-properties-postprocess-alist3076,124707
(defcustom org-use-property-inheritance nilorg-use-property-inheritance3100,125682
(defun org-property-inherit-p (property)org-property-inherit-p3130,126990
(defcustom org-columns-default-format "%25ITEM %TODO %3PRIORITY %TAGS"org-columns-default-format3141,127445
(defcustom org-columns-ellipses ".."org-columns-ellipses3149,127720
(defcustom org-columns-modify-value-for-display-function nilorg-columns-modify-value-for-display-function3159,128230
(defcustom org-effort-property "Effort"org-effort-property3172,128732
(defconst org-global-properties-fixedorg-global-properties-fixed3179,128997
(defcustom org-global-properties nilorg-global-properties3192,129572
(defvar org-file-properties nilorg-file-properties3209,130111
(defgroup org-agenda nilorg-agenda3215,130344
(defvar org-category nilorg-category3220,130454
(defcustom org-agenda-files nilorg-agenda-files3235,130910
(defcustom org-agenda-file-regexp "\\`[^.].*\\.org\\'"org-agenda-file-regexp3253,131736
(defcustom org-agenda-text-search-extra-files nilorg-agenda-text-search-extra-files3261,132073
(defcustom org-agenda-skip-unavailable-files nilorg-agenda-skip-unavailable-files3281,133011
(defcustom org-calendar-to-agenda-key [?c]org-calendar-to-agenda-key3287,133238
(defcustom org-calendar-insert-diary-entry-key [?i]org-calendar-insert-diary-entry-key3295,133581
(defcustom org-agenda-diary-file 'diary-fileorg-agenda-diary-file3306,134112
(defgroup org-latex nilorg-latex3327,134940
(defcustom org-format-latex-optionsorg-format-latex-options3332,135051
(defcustom org-format-latex-signal-error torg-format-latex-signal-error3356,136373
(defcustom org-latex-to-mathml-jar-file nilorg-latex-to-mathml-jar-file3363,136587
(defcustom org-latex-to-mathml-convert-command nilorg-latex-to-mathml-convert-command3375,136970
(defcustom org-latex-create-formula-image-program 'dvipngorg-latex-create-formula-image-program3393,137624
(defcustom org-latex-preview-ltxpng-directory "ltxpng/"org-latex-preview-ltxpng-directory3407,138186
(defun org-format-latex-mathml-available-p ()org-format-latex-mathml-available-p3415,138495
(defcustom org-format-latex-header "\\documentclass{article}org-format-latex-header3428,138998
(defvar org-format-latex-header-extra nil)org-format-latex-header-extra3457,140127
(defun org-set-packages-alist (var val)org-set-packages-alist3459,140171
(defun org-get-packages-alist (var)org-get-packages-alist3467,140413
(defcustom org-export-latex-default-packages-alistorg-export-latex-default-packages-alist3479,140845
(defcustom org-export-latex-packages-alist nilorg-export-latex-packages-alist3529,142687
(defgroup org-appearance nilorg-appearance3552,143575
(defcustom org-level-color-stars-only nilorg-level-color-stars-only3557,143682
(defcustom org-hide-leading-stars nilorg-hide-leading-stars3565,143975
(defcustom org-hidden-keywords nilorg-hidden-keywords3581,144562
(defcustom org-custom-properties nilorg-custom-properties3592,145003
(defcustom org-fontify-done-headline nilorg-fontify-done-headline3601,145338
(defcustom org-fontify-emphasized-text torg-fontify-emphasized-text3609,145681
(defcustom org-fontify-whole-heading-line nilorg-fontify-whole-heading-line3615,145899
(defcustom org-highlight-latex-fragments-and-specials nilorg-highlight-latex-fragments-and-specials3622,146118
(defcustom org-hide-emphasis-markers nilorg-hide-emphasis-markers3627,146290
(defcustom org-pretty-entities nilorg-pretty-entities3632,146446
(defcustom org-pretty-entities-include-sub-superscripts torg-pretty-entities-include-sub-superscripts3639,146644
(defvar org-emph-re nilorg-emph-re3645,146843
(defvar org-verbatim-re nilorg-verbatim-re3655,147413
(defvar org-emphasis-regexp-components) ; defined just beloworg-emphasis-regexp-components3657,147493
(defvar org-emphasis-alist) ; defined just beloworg-emphasis-alist3658,147554
(defun org-set-emph-re (var val)org-set-emph-re3659,147603
(defcustom org-emphasis-regexp-componentsorg-emphasis-regexp-components3714,149378
(defcustom org-emphasis-alistorg-emphasis-alist3741,150725
(defvar org-protecting-blocksorg-protecting-blocks3770,151908
(defgroup org-completion nilorg-completion3777,152158
(defcustom org-completion-use-ido nilorg-completion-use-ido3782,152255
(defcustom org-completion-use-iswitchb nilorg-completion-use-iswitchb3791,152613
(defcustom org-completion-fallback-command 'hippie-expandorg-completion-fallback-command3800,153025
(defvar outline-mode-menu-heading)outline-mode-menu-heading3810,153350
(defvar outline-mode-menu-show)outline-mode-menu-show3811,153385
(defvar outline-mode-menu-hide)outline-mode-menu-hide3812,153417
(defvar zmacs-regions) ; XEmacs regionszmacs-regions3813,153449
(defvar mark-active)mark-active3816,153504
(defvar calc-embedded-close-formula)calc-embedded-close-formula3824,153886
(defvar calc-embedded-open-formula)calc-embedded-open-formula3825,153923
(defvar font-lock-unfontify-region-function)font-lock-unfontify-region-function3829,154153
(defvar iswitchb-temp-buflist)iswitchb-temp-buflist3832,154326
(defvar org-agenda-tags-todo-honor-ignore-options)org-agenda-tags-todo-honor-ignore-options3834,154434
(defvar remember-data-file)remember-data-file3858,155844
(defvar texmathp-why)texmathp-why3859,155872
(defvar w3m-current-url)w3m-current-url3863,156049
(defvar w3m-current-title)w3m-current-title3864,156074
(defvar org-latex-regexps)org-latex-regexps3866,156102
(defconst org-table-any-line-regexp "^[ \t]*\\(|\\|\\+-[-+]\\)"org-table-any-line-regexp3873,156315
(defconst org-table-line-regexp "^[ \t]*|"org-table-line-regexp3875,156424
(defconst org-table-dataline-regexp "^[ \t]*|[^-]"org-table-dataline-regexp3877,156503
(defconst org-table-hline-regexp "^[ \t]*|-"org-table-hline-regexp3879,156590
(defconst org-table1-hline-regexp "^[ \t]*\\+-[-+]"org-table1-hline-regexp3881,156672
(defconst org-table-any-border-regexp "^[ \t]*[^|+ \t]"org-table-any-border-regexp3883,156762
(defun turn-on-orgtbl ()turn-on-orgtbl3894,157125
(defun org-at-table-p (&optional table-type)org-at-table-p3899,157236
(defsubst org-table-p () (org-at-table-p))org-table-p3908,157572
(defun org-at-table.el-p ()org-at-table.el-p3910,157616
(defun org-table-recognize-table.el ()org-table-recognize-table.el3916,157831
(defun org-at-table-hline-p ()org-at-table-hline-p3942,158597
(defvar org-table-clean-did-remove-column nil)org-table-clean-did-remove-column3950,158809
(defun org-table-map-tables (function &optional quietly)org-table-map-tables3952,158857
(defvar org-clock-start-time)org-clock-start-time3987,160275
(defvar org-clock-marker (make-marker)org-clock-marker3988,160305
(defvar org-clock-hd-marker (make-marker)org-clock-hd-marker3990,160385
(defvar org-clock-heading ""org-clock-heading3992,160495
(defun org-clock-is-active ()org-clock-is-active3994,160569
(defun org-check-running-clock ()org-check-running-clock4004,160878
(defun org-clocktable-try-shift (dir n)org-clocktable-try-shift4014,161293
(defun org-clock-persistence-insinuate ()org-clock-persistence-insinuate4020,161523
(defvar org-indent-mode nilorg-indent-mode4027,161782
(defgroup org-archive nilorg-archive4034,162015
(defcustom org-archive-location "%s_archive::"org-archive-location4039,162134
(defcustom org-archive-tag "ARCHIVE"org-archive-tag4098,164550
(defcustom org-agenda-skip-archived-trees torg-agenda-skip-archived-trees4108,164911
(defcustom org-columns-skip-archived-trees torg-columns-skip-archived-trees4117,165309
(defcustom org-cycle-open-archived-trees nilorg-cycle-open-archived-trees4123,165487
(defcustom org-sparse-tree-open-archived-trees nilorg-sparse-tree-open-archived-trees4132,165854
(defcustom org-sparse-tree-default-date-type 'scheduled-or-deadlineorg-sparse-tree-default-date-type4140,166142
(defun org-cycle-hide-archived-subtrees (state)org-cycle-hide-archived-subtrees4159,166929
(defun org-force-cycle-archived ()org-force-cycle-archived4173,167597
(defun org-hide-archived-subtrees (beg end)org-hide-archived-subtrees4180,167805
(defun org-flag-subtree (flag)org-flag-subtree4192,168249
(defalias 'org-advertized-archive-subtree 'org-archive-subtree)org-advertized-archive-subtree4200,168444
(defvar org-id-track-globally)org-id-track-globally4223,169214
(defvar org-drawer-regexp "^[ \t]*:PROPERTIES:[ \t]*$"org-drawer-regexp4232,169452
(defvar org-todo-regexp nilorg-todo-regexp4235,169598
(defvar org-not-done-regexp nilorg-not-done-regexp4238,169717
(defvar org-not-done-heading-regexp nilorg-not-done-heading-regexp4241,169864
(defvar org-todo-line-regexp nilorg-todo-line-regexp4244,170001
(defvar org-complex-heading-regexp nilorg-complex-heading-regexp4247,170154
(defvar org-complex-heading-regexp-format nilorg-complex-heading-regexp-format4255,170421
(defvar org-todo-line-tags-regexp nilorg-todo-line-tags-regexp4261,170752
(defvar org-ds-keyword-length 12org-ds-keyword-length4265,170963
(defvar org-deadline-regexp nilorg-deadline-regexp4268,171108
(defvar org-deadline-time-regexp nilorg-deadline-time-regexp4271,171225
(defvar org-deadline-line-regexp nilorg-deadline-line-regexp4274,171379
(defvar org-scheduled-regexp nilorg-scheduled-regexp4277,171531
(defvar org-scheduled-time-regexp nilorg-scheduled-time-regexp4280,171651
(defvar org-closed-time-regexp nilorg-closed-time-regexp4283,171808
(defvar org-keyword-time-regexp nilorg-keyword-time-regexp4287,171957
(defvar org-keyword-time-not-clock-regexp nilorg-keyword-time-not-clock-regexp4290,172113
(defvar org-maybe-keyword-time-regexp nilorg-maybe-keyword-time-regexp4293,172289
(defvar org-all-time-keywords nilorg-all-time-keywords4296,172449
(defconst org-plain-time-of-day-regexporg-plain-time-of-day-regexp4300,172564
(defconst org-plain-time-extension-regexporg-plain-time-extension-regexp4315,173098
(defconst org-stamp-time-of-day-regexporg-stamp-time-of-day-regexp4327,173548
(defconst org-startup-optionsorg-startup-options4340,174097
(defun org-update-property-plist (key val props)org-update-property-plist4398,176709
(defconst org-block-regexporg-block-regexp4408,177169
(defconst org-heading-keyword-regexp-formatorg-heading-keyword-regexp-format4411,177330
(defconst org-heading-keyword-maybe-regexp-formatorg-heading-keyword-maybe-regexp-format4417,177682
(defun org-set-regexps-and-options ()org-set-regexps-and-options4424,178032
(defun org-file-contents (file &optional noerror)org-file-contents4722,189767
(defun org-extract-log-state-settings (x)org-extract-log-state-settings4736,190147
(defun org-remove-keyword-keys (list)org-remove-keyword-keys4750,190753
(defun org-assign-fast-keys (alist)org-assign-fast-keys4758,190975
(defvar org-window-configuration nilorg-window-configuration4780,191651
(defvar org-selected-window nilorg-selected-window4782,191749
(defvar org-finish-function nilorg-finish-function4784,191842
(defvar org-last-state)org-last-state4792,192182
(defvar org-entities)     ;; defined in org-entities.elorg-entities4796,192334
(defvar org-struct-menu)org-struct-menu4797,192390
(defvar org-org-menu)org-org-menu4798,192415
(defvar org-tbl-menu)org-tbl-menu4799,192437
(defvar org-table-may-need-update torg-table-may-need-update4805,192566
(defun org-before-change-function (beg end)org-before-change-function4809,192745
(defvar org-mode-map)org-mode-map4812,192889
(defvar org-inhibit-startup nil)        ; Dynamically-scoped param.org-inhibit-startup4813,192911
(defvar org-inhibit-startup-visibility-stuff nil) ; Dynamically-scoped param.org-inhibit-startup-visibility-stuff4814,192979
(defvar org-agenda-keep-modes nil)      ; Dynamically-scoped param.org-agenda-keep-modes4815,193057
(defvar org-inhibit-logging nil)        ; Dynamically-scoped param.org-inhibit-logging4816,193125
(defvar org-inhibit-blocking nil)       ; Dynamically-scoped param.org-inhibit-blocking4817,193193
(defvar org-table-buffer-is-an nil)org-table-buffer-is-an4818,193261
(defvar bidi-paragraph-direction)bidi-paragraph-direction4820,193298
(defvar buffer-face-mode-face)buffer-face-mode-face4821,193332
(define-derived-mode org-mode outline-mode "Org"org-mode4853,194222
(defun org-find-invisible-foreground ()org-find-invisible-foreground5014,200893
(defun org-current-time ()org-current-time5028,201377
(defun org-today ()org-today5038,201752
(defvar org-mouse-map (make-sparse-keymap))org-mouse-map5046,201981
(defconst org-non-link-chars "]\t\n\r<>")org-non-link-chars5057,202391
(defvar org-link-types '("http" "https" "ftp" "mailto" "file" "news"org-link-types5058,202433
(defvar org-link-types-re nilorg-link-types-re5060,202540
(defvar org-link-re-with-space nilorg-link-re-with-space5062,202632
(defvar org-link-re-with-space2 nilorg-link-re-with-space25064,202737
(defvar org-link-re-with-space3 nilorg-link-re-with-space35066,202843
(defvar org-angle-link-re nilorg-angle-link-re5068,202953
(defvar org-plain-link-re nilorg-plain-link-re5070,203044
(defvar org-bracket-link-regexp nilorg-bracket-link-regexp5072,203115
(defvar org-bracket-link-analytic-regexp nilorg-bracket-link-analytic-regexp5074,203191
(defvar org-bracket-link-analytic-regexp++ nilorg-bracket-link-analytic-regexp++5082,203379
(defvar org-any-link-re nilorg-any-link-re5084,203507
(defcustom org-match-sexp-depth 3org-match-sexp-depth5087,203579
(defun org-create-multibrace-regexp (left right n)org-create-multibrace-regexp5093,203812
(defvar org-match-substring-regexporg-match-substring-regexp5111,204615
(defvar org-match-substring-with-braces-regexporg-match-substring-with-braces-regexp5121,204995
(defun org-make-link-regexps ()org-make-link-regexps5128,205248
(defconst org-ts-regexp "<\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^\r\n>]*?\\)>"org-ts-regexp5187,207058
(defconst org-ts-regexp-both "[[<]\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^]\r\n>]*?\\)[]>]"org-ts-regexp-both5189,207197
(defconst org-ts-regexp0org-ts-regexp05191,207348
(defconst org-ts-regexp1 "\\(\\([0-9]\\{4\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\) *\\([^]+0-9>\r\n -]*\\)\\( \\([0-9]\\{1,2\\}\\):\\([0-9]\\{2\\}\\)\\)?\\)"org-ts-regexp15196,207699
(defconst org-ts-regexp2 (concat "<" org-ts-regexp1 "[^>\n]\\{0,16\\}>")org-ts-regexp25198,207920
(defconst org-ts-regexp3 (concat "[[<]" org-ts-regexp1 "[^]>\n]\\{0,16\\}[]>]")org-ts-regexp35200,208052
(defconst org-tr-regexp (concat org-ts-regexp "--?-?" org-ts-regexp)org-tr-regexp5202,208203
(defconst org-tr-regexp-bothorg-tr-regexp-both5204,208325
(defconst org-tsr-regexp (concat org-ts-regexp "\\(--?-?"org-tsr-regexp5207,208464
(defconst org-tsr-regexp-both (concat org-ts-regexp-both "\\(--?-?"org-tsr-regexp-both5210,208616
(defvar org-emph-face nil)org-emph-face5215,208839
(defun org-do-emphasis-faces (limit)org-do-emphasis-faces5217,208867
(defun org-emphasize (&optional char)org-emphasize5242,209800
(defconst org-nonsticky-propsorg-nonsticky-props5295,211897
(defsubst org-rear-nonsticky-at (pos)org-rear-nonsticky-at5298,212022
(defun org-activate-plain-links (limit)org-activate-plain-links5301,212142
(defun org-activate-code (limit)org-activate-code5319,212794
(defcustom org-src-fontify-natively nilorg-src-fontify-natively5327,213087
(defcustom org-allow-promoting-top-level-subtree nilorg-allow-promoting-top-level-subtree5334,213256
(defun org-fontify-meta-lines-and-blocks (limit)org-fontify-meta-lines-and-blocks5342,213494
(defun org-fontify-meta-lines-and-blocks-1 (limit)org-fontify-meta-lines-and-blocks-15347,213671
(defun org-activate-angle-links (limit)org-activate-angle-links5448,218050
(defun org-activate-footnote-links (limit)org-activate-footnote-links5460,218485
(defun org-activate-bracket-links (limit)org-activate-bracket-links5477,219059
(defun org-activate-dates (limit)org-activate-dates5513,220720
(defvar org-target-link-regexp nilorg-target-link-regexp5528,221299
(defvar org-target-regexp "<<\\([^<>\n\r]+\\)>>"org-target-regexp5531,221449
(defvar org-radio-target-regexp "<<<\\([^<>\n\r]+\\)>>>"org-radio-target-regexp5533,221546
(defvar org-any-target-regexp "<<<?\\([^<>\n\r]+\\)>>>?" ; FIXME, not exact, would match <<<aaa>>  as a radio target.org-any-target-regexp5535,221652
(defun org-activate-target-links (limit)org-activate-target-links5538,221816
(defun org-update-radio-target-regexp ()org-update-radio-target-regexp5553,222384
(defun org-hide-wide-columns (limit)org-hide-wide-columns5561,222680
(defvar org-latex-and-specials-regexp nilorg-latex-and-specials-regexp5571,223000
(defvar org-match-substring-regexp)org-match-substring-regexp5573,223105
(defvar org-match-substring-with-braces-regexp)org-match-substring-with-braces-regexp5574,223141
(defconst org-export-html-special-string-regexpsorg-export-html-special-string-regexps5577,223268
(defun org-compute-latex-and-specials-regexp ()org-compute-latex-and-specials-regexp5585,223504
(defun org-do-latex-and-special-faces (limit)org-do-latex-and-special-faces5642,225509
(defun org-restart-font-lock ()org-restart-font-lock5663,226278
(defun org-all-targets (&optional radio)org-all-targets5669,226470
(defun org-make-target-link-regexp (targets)org-make-target-link-regexp5680,226858
(defun org-activate-tags (limit)org-activate-tags5697,227265
(defun org-outline-level ()org-outline-level5707,227640
(defvar org-font-lock-keywords nil)org-font-lock-keywords5717,228095
(defconst org-property-re (org-re "^[ \t]*\\(:\\([-[:alnum:]_]+\\+?\\):\\)[ \t]*\\([^ \t\r\n].*\\)")org-property-re5719,228132
(defvar org-font-lock-hook nilorg-font-lock-hook5722,228284
(defvar org-font-lock-set-keywords-hook nilorg-font-lock-set-keywords-hook5725,228373
(defun org-font-lock-hook (limit)org-font-lock-hook5731,228705
(defun org-set-font-lock-defaults ()org-set-font-lock-defaults5735,228833
(defun org-toggle-pretty-entities ()org-toggle-pretty-entities5839,232829
(defvar org-custom-properties-overlays nilorg-custom-properties-overlays5851,233266
(defun org-toggle-custom-properties-visibility ()org-toggle-custom-properties-visibility5855,233421
(defun org-fontify-entities (limit)org-fontify-entities5875,234175
(defun org-fontify-like-in-org-mode (s &optional odd-levels)org-fontify-like-in-org-mode5899,234858
(defvar org-m nil)org-m5908,235113
(defvar org-l nil)org-l5909,235132
(defvar org-f nil)org-f5910,235151
(defun org-get-level-face (n)org-get-level-face5911,235170
(defun org-get-todo-face (kwd)org-get-todo-face5924,235699
(defun org-face-from-face-or-color (context inherit face-or-color)org-face-from-face-or-color5933,236055
(defun org-font-lock-add-tag-faces (limit)org-font-lock-add-tag-faces5942,236404
(defun org-font-lock-add-priority-faces (limit)org-font-lock-add-priority-faces5951,236755
(defun org-get-tag-face (kwd)org-get-tag-face5964,237245
(defun org-unfontify-region (beg end &optional maybe_loudly)org-unfontify-region5972,237535
(defconst org-script-display  '(((raise -0.3) (height 0.7))org-script-display5986,238128
(defun org-remove-font-lock-display-properties (beg end)org-remove-font-lock-display-properties5992,238324
(defun org-raise-scripts (limit)org-raise-scripts6004,238812
(defvar org-cycle-global-status nil)org-cycle-global-status6048,240509
(defvar org-cycle-subtree-status nil)org-cycle-subtree-status6050,240600
(defvar org-inlinetask-min-level)org-inlinetask-min-level6053,240694
(defun org-cycle (&optional arg)org-cycle6056,240744
(defun org-cycle-internal-global ()org-cycle-internal-global6221,246910
(defun org-cycle-internal-local ()org-cycle-internal-local6254,248231
(defun org-global-cycle (&optional arg)org-global-cycle6361,252584
(defun org-set-startup-visibility ()org-set-startup-visibility6379,253230
(defun org-set-visibility-according-to-property (&optional no-cleanup)org-set-visibility-according-to-property6394,253815
(defun org-overview ()org-overview6429,254908
(defun org-content (&optional arg)org-content6444,255494
(defun org-optimize-window-after-visibility-change (state)org-optimize-window-after-visibility-change6464,256102
(defun org-remove-empty-overlays-at (pos)org-remove-empty-overlays-at6475,256589
(defun org-clean-visibility-after-subtree-move ()org-clean-visibility-after-subtree-move6485,256914
(defun org-cycle-show-empty-lines (state)org-cycle-show-empty-lines6516,257902
(defun org-show-empty-lines-in-parent ()org-show-empty-lines-in-parent6564,259682
(defun org-files-list ()org-files-list6570,259929
(defsubst org-entry-beginning-position ()org-entry-beginning-position6583,260429
(defsubst org-entry-end-position ()org-entry-end-position6587,260584
(defun org-cycle-hide-drawers (state)org-cycle-hide-drawers6591,260722
(defun org-flag-drawer (flag)org-flag-drawer6606,261292
(defun org-subtree-end-visible-p ()org-subtree-end-visible-p6619,261742
(defun org-first-headline-recenter (&optional N)org-first-headline-recenter6624,261906
(defun org-outline-overlay-data (&optional use-markers)org-outline-overlay-data6634,262301
(defun org-set-outline-overlay-data (data)org-set-outline-overlay-data6656,263062
(defvar org-hide-block-overlays nilorg-hide-block-overlays6670,263400
(defun org-block-map (function &optional start end)org-block-map6674,263520
(defun org-hide-block-toggle-all ()org-hide-block-toggle-all6687,264027
(defun org-hide-block-all ()org-hide-block-all6691,264170
(defun org-show-block-all ()org-show-block-all6697,264331
(defun org-hide-block-toggle-maybe ()org-hide-block-toggle-maybe6703,264509
(defun org-hide-block-toggle (&optional force)org-hide-block-toggle6714,264864
(defvar org-goto-window-configuration nil)org-goto-window-configuration6760,266826
(defvar org-goto-marker nil)org-goto-marker6761,266869
(defvar org-goto-map)org-goto-map6762,266898
(defun org-goto-map ()org-goto-map6763,266920
(defconst org-goto-helporg-goto-help6800,268512
(defvar org-goto-start-pos) ; dynamically scoped parameterorg-goto-start-pos6805,268740
(defun org-goto (&optional alternative-interface)org-goto6808,268853
(defvar org-goto-selected-point nil) ; dynamically scoped parameterorg-goto-selected-point6853,270649
(defvar org-goto-exit-command nil) ; dynamically scoped parameterorg-goto-exit-command6854,270717
(defvar org-goto-local-auto-isearch-map) ; defined beloworg-goto-local-auto-isearch-map6855,270783
(defun org-get-location (buf help)org-get-location6857,270841
(defvar org-goto-local-auto-isearch-map (make-sparse-keymap))org-goto-local-auto-isearch-map6902,272584
(define-key org-goto-local-auto-isearch-map "\C-i" 'isearch-other-control-char)org-goto-local-auto-isearch-map6904,272715
(define-key org-goto-local-auto-isearch-map "\C-m" 'isearch-other-control-char)org-goto-local-auto-isearch-map6905,272795
(defun org-goto-local-search-headings (string bound noerror)org-goto-local-search-headings6907,272876
(defun org-goto-local-auto-isearch ()org-goto-local-auto-isearch6918,273331
(defun org-goto-ret (&optional arg)org-goto-ret6927,273624
(defun org-goto-left ()org-goto-left6934,273826
(defun org-goto-right ()org-goto-right6945,274108
(defun org-goto-quit ()org-goto-quit6955,274369
(defvar org-indirect-dedicated-frame nilorg-indirect-dedicated-frame6964,274591
(defvar org-last-indirect-buffer nil)org-last-indirect-buffer6966,274693
(defun org-tree-to-indirect-buffer (&optional arg)org-tree-to-indirect-buffer6968,274732
(defun org-get-indirect-buffer (&optional buffer)org-get-indirect-buffer7035,277459
(defun org-set-frame-title (title)org-set-frame-title7045,277852
(defun org-previous-line-empty-p ()org-previous-line-empty-p7055,278153
(defun org-insert-heading (&optional force-heading invisible-ok)org-insert-heading7062,278311
(defun org-get-heading (&optional no-tags no-todo)org-get-heading7182,282580
(defun org-heading-components ()org-heading-components7203,283240
(defun org-get-entry ()org-get-entry7222,284033
(defun org-insert-heading-after-current ()org-insert-heading-after-current7228,284224
(defun org-insert-heading-respect-content ()org-insert-heading-respect-content7236,284452
(defun org-insert-todo-heading-respect-content (&optional force-state)org-insert-todo-heading-respect-content7241,284591
(defun org-insert-todo-heading (arg &optional force-heading)org-insert-todo-heading7246,284777
(defun org-insert-subheading (arg)org-insert-subheading7277,285900
(defun org-insert-todo-subheading (arg)org-insert-todo-subheading7286,286169
(defvar org-after-demote-entry-hook nilorg-after-demote-entry-hook7297,286506
(defvar org-after-promote-entry-hook nilorg-after-promote-entry-hook7302,286716
(defun org-promote-subtree ()org-promote-subtree7307,286929
(defun org-demote-subtree ()org-demote-subtree7315,287145
(defun org-do-promote ()org-do-promote7324,287378
(defun org-do-demote ()org-do-demote7335,287727
(defun org-fix-position-after-promote ()org-fix-position-after-promote7346,288072
(defun org-current-level ()org-current-level7357,288470
(defun org-get-previous-line-level ()org-get-previous-line-level7365,288772
(defun org-reduced-level (l)org-reduced-level7378,289268
(defun org-level-increment ()org-level-increment7386,289488
(defun org-get-valid-level (level &optional change)org-get-valid-level7392,289704
(defvar org-called-with-limited-levels nil) ;; Dynamically bound inorg-called-with-limited-levels7410,290565
(defun org-promote ()org-promote7412,290663
(defun org-demote ()org-demote7434,291604
(defun org-cycle-level ()org-cycle-level7450,292290
(defun org-map-tree (fun)org-map-tree7486,293840
(defun org-map-region (fun beg end)org-map-region7498,294163
(defvar org-property-end-re) ; silence byte-compilerorg-property-end-re7513,294581
(defun org-fixup-indentation (diff)org-fixup-indentation7514,294634
(defun org-convert-to-odd-levels ()org-convert-to-odd-levels7535,295417
(defun org-convert-to-oddeven-levels ()org-convert-to-oddeven-levels7551,296001
(defun org-tr-level (n)org-tr-level7575,296981
(defun org-move-subtree-up (&optional arg)org-move-subtree-up7581,297136
(defun org-move-subtree-down (&optional arg)org-move-subtree-down7586,297328
(defvar org-subtree-clip ""org-subtree-clip7664,300006
(defvar org-subtree-clip-folded nilorg-subtree-clip-folded7669,300228
(defun org-cut-subtree (&optional n)org-cut-subtree7673,300356
(defun org-copy-subtree (&optional n cut force-store-markers)org-copy-subtree7680,300611
(defun org-paste-subtree (&optional level tree for-yank)org-paste-subtree7714,302023
(defun org-kill-is-subtree-p (&optional txt)org-kill-is-subtree-p7823,306109
(defvar org-markers-to-move nilorg-markers-to-move7848,307119
(defun org-save-markers-in-region (beg end)org-save-markers-in-region7853,307310
(defun org-check-and-save-marker (marker beg end)org-check-and-save-marker7867,307955
(defun org-reinstall-markers-in-region (beg)org-reinstall-markers-in-region7875,308299
(defun org-narrow-to-subtree ()org-narrow-to-subtree7882,308530
(defun org-narrow-to-block ()org-narrow-to-block7894,308881
(defvar org-property-start-re)  ;; defined beloworg-property-start-re7907,309231
(defun org-clone-subtree-with-time-shift (n &optional shift)org-clone-subtree-with-time-shift7908,309280
(defun org-sort (with-case)org-sort7997,312838
(defun org-sort-remove-invisible (s)org-sort-remove-invisible8007,313225
(defvar org-priority-regexp) ; defined later in the fileorg-priority-regexp8015,313484
(defvar org-after-sorting-entries-or-items-hook nilorg-after-sorting-entries-or-items-hook8017,313542
(defun org-sort-entriesorg-sort-entries8023,313863
(defun org-do-sort (table what &optional with-case sorting-type)org-do-sort8228,321391
(defvar orgstruct-mode-map (make-sparse-keymap)orgstruct-mode-map8293,324150
(defvar org-local-vars nilorg-local-vars8296,324243
(define-minor-mode orgstruct-modeorgstruct-mode8300,324345
(defun turn-on-orgstruct ()turn-on-orgstruct8327,325238
(defvar org-fb-vars nil)org-fb-vars8331,325335
(defun orgstruct++-mode (&optional arg)orgstruct++-mode8333,325402
(defvar orgstruct-is-++ nilorgstruct-is-++8360,326439
(defun turn-on-orgstruct++ ()turn-on-orgstruct++8365,326591
(defun orgstruct-error ()orgstruct-error8369,326694
(defun orgstruct-setup ()orgstruct-setup8374,326866
(defun orgstruct-make-binding (fun n &rest keys)orgstruct-make-binding8446,329475
(defun org-contextualize-keys (alist contexts)org-contextualize-keys8474,330489
(defun org-contextualize-validate-key (key contexts)org-contextualize-validate-key8522,331925
(defun org-context-p (&rest contexts)org-context-p8545,332697
(defun org-get-local-variables ()org-get-local-variables8560,333244
(defun org-clone-local-variables (from-buffer &optional regexp)org-clone-local-variables8581,333871
(defun org-run-like-in-org-mode (cmd)org-run-like-in-org-mode8594,334286
(defun org-get-category (&optional pos force-refresh)org-get-category8607,334755
(defun org-refresh-category-properties ()org-refresh-category-properties8616,335105
(defun org-refresh-properties (dprop tprop)org-refresh-properties8648,336179
(defun org-link-expand-abbrev (link)org-link-expand-abbrev8671,336799
(defvar org-insert-link-history nilorg-insert-link-history8694,337605
(defvar org-stored-links nilorg-stored-links8697,337709
(defvar org-store-link-plist nilorg-store-link-plist8700,337793
(defvar org-link-protocols nilorg-link-protocols8703,337908
(defvar org-store-link-functions nilorg-store-link-functions8706,338005
(defun org-add-link-type (type &optional follow export)org-add-link-type8726,338962
(defvar org-agenda-buffer-name) ; Defined in org-agenda.elorg-agenda-buffer-name8758,340461
(defvar org-id-link-to-org-use-id) ; Defined in org-id.elorg-id-link-to-org-use-id8759,340520
(defun org-store-link (arg)org-store-link8762,340594
(defun org-store-link-props (&rest plist)org-store-link-props8953,347484
(defun org-add-link-props (&rest plist)org-add-link-props8974,348334
(defun org-email-link-description (&optional fmt)org-email-link-description8982,348595
(defun org-make-org-heading-search-string (&optional string heading)org-make-org-heading-search-string9008,349713
(defun org-make-link-string (link &optional description)org-make-link-string9035,350838
(defconst org-link-escape-charsorg-link-escape-chars9066,352101
(defconst org-link-escape-chars-browserorg-link-escape-chars-browser9071,352271
(defun org-link-escape (text &optional table merge)org-link-escape9076,352454
(defun org-link-unescape (str)org-link-unescape9102,353408
(defun org-link-unescape-compound (hex)org-link-unescape-compound9113,353898
(defun org-link-unescape-single-byte-sequence (hex)org-link-unescape-single-byte-sequence9147,355000
(defun org-xor (a b)org-xor9153,355232
(defun org-fixup-message-id-for-http (s)org-fixup-message-id-for-http9157,355292
(defun org-link-prettify (link)org-link-prettify9173,355779
(defun org-insert-link-global ()org-insert-link-global9182,356122
(defun org-insert-all-links (&optional keep)org-insert-all-links9189,356360
(defun org-link-fontify-links-to-this-file ()org-link-fontify-links-to-this-file9198,356675
(defvar org-link-links-in-this-file nil)org-link-links-in-this-file9220,357437
(defun org-insert-link (&optional complete-file link-location default-description)org-insert-link9221,357478
(defun org-link-try-special-completion (type)org-link-try-special-completion9412,365282
(defun org-file-complete-link (&optional arg)org-file-complete-link9419,365569
(defun org-completing-read (&rest args)org-completing-read9440,366360
(defun org-completing-read-no-i (&rest args)org-completing-read-no-i9450,366860
(defun org-iswitchb-completing-read (prompt choices &rest args)org-iswitchb-completing-read9454,367006
(defun org-icompleting-read (&rest args)org-icompleting-read9464,367394
(defun org-extract-attributes (s)org-extract-attributes9487,368191
(defun org-extract-attributes-from-string (tag)org-extract-attributes-from-string9500,368715
(defun org-attributes-to-string (plist)org-attributes-to-string9508,369028
(defvar org-link-search-failed nil)org-link-search-failed9519,369335
(defvar org-open-link-functions nilorg-open-link-functions9521,369372
(defun org-next-link ()org-next-link9538,370192
(defun org-previous-link ()org-previous-link9558,370852
(defun org-translate-link (s)org-translate-link9578,371516
(defun org-translate-link-from-planner (type path)org-translate-link-from-planner9589,371900
(defun org-find-file-at-mouse (ev)org-find-file-at-mouse9611,372844
(defun org-open-at-mouse (ev)org-open-at-mouse9617,372992
(defvar org-window-config-before-follow-link nilorg-window-config-before-follow-link9626,373283
(defvar org-open-link-marker (make-marker)org-open-link-marker9630,373441
(defun org-open-at-point-global ()org-open-at-point-global9634,373575
(defun org-open-link-from-string (s &optional arg reference-buffer)org-open-link-from-string9642,373811
(defvar org-open-at-point-functions nilorg-open-at-point-functions9657,374346
(defvar clean-buffer-list-kill-buffer-names) ; Defined in midnight.elclean-buffer-list-kill-buffer-names9664,374597
(defun org-open-at-point (&optional arg reference-buffer)org-open-at-point9665,374667
(defun org-offer-links-in-entry (buffer marker &optional nth zero)org-offer-links-in-entry9893,382943
(defun org-open-file-with-system (path)org-open-file-with-system9959,385480
(defun org-open-file-with-emacs (path)org-open-file-with-emacs9962,385610
(defun org-remove-file-link-modifiers ()org-remove-file-link-modifiers9965,385712
(defvar org-create-file-search-functions nilorg-create-file-search-functions9977,386131
(defvar org-execute-file-search-functions nilorg-execute-file-search-functions9999,387225
(defvar org-link-search-inhibit-query nil) ;; dynamically scopedorg-link-search-inhibit-query10021,388284
(defun org-link-search (s &optional type avoid-pos stealth)org-link-search10022,388349
(defun org-search-not-self (group &rest args)org-search-not-self10178,394029
(defun org-get-buffer-for-internal-link (buffer)org-get-buffer-for-internal-link10197,394814
(defun org-do-occur (regexp &optional cleanup)org-do-occur10213,395464
(defvar org-mark-ring nilorg-mark-ring10234,396224
(defvar org-mark-ring-last-goto nilorg-mark-ring-last-goto10236,396305
(defun org-mark-ring-push (&optional pos buffer)org-mark-ring-push10245,396664
(defun org-mark-ring-goto (&optional n)org-mark-ring-goto10257,397121
(defun org-remove-angle-brackets (s)org-remove-angle-brackets10275,397877
(defun org-add-angle-brackets (s)org-add-angle-brackets10279,398045
(defun org-remove-double-quotes (s)org-remove-double-quotes10283,398213
(defun org-follow-timestamp-link ()org-follow-timestamp-link10290,398413
(defvar org-wait nil)org-wait10317,399498
(defun org-open-file (path &optional in-emacs line search)org-open-file10318,399520
(defun org-file-apps-entry-match-against-dlink-p (entry)org-file-apps-entry-match-against-dlink-p10455,404831
(defun org-default-apps ()org-default-apps10474,405497
(defun org-apps-regexp-alist (list &optional add-auto-mode)org-apps-regexp-alist10483,405767
(defvar ange-ftp-name-format) ; to silence the XEmacs compiler.ange-ftp-name-format10502,406433
(defun org-file-remote-p (file)org-file-remote-p10503,406497
(defun org-get-org-file ()org-get-org-file10520,407034
(defun org-notes-order-reversed-p ()org-notes-order-reversed-p10527,407307
(defvar org-refile-target-table nilorg-refile-target-table10541,407743
(defvar org-agenda-new-buffers nilorg-agenda-new-buffers10544,407838
(defvar org-refile-cache nilorg-refile-cache10547,407918
(defvar org-refile-markers nilorg-refile-markers10550,407979
(defun org-refile-marker (pos)org-refile-marker10553,408067
(defun org-refile-cache-clear ()org-refile-cache-clear10562,408302
(defun org-refile-cache-check-set (set)org-refile-cache-check-set10569,408560
(defun org-refile-cache-put (set &rest identifiers)org-refile-cache-put10580,408940
(defun org-refile-cache-get (&rest identifiers)org-refile-cache-get10588,409234
(defun org-refile-get-targets (&optional default-buffer excluded-entries)org-refile-get-targets10598,409609
(defun org-protect-slash (s)org-protect-slash10699,413381
(defvar org-olpa (make-vector 20 nil))org-olpa10704,413487
(defun org-get-outline-path (&optional fastp level heading)org-get-outline-path10706,413527
(defun org-format-outline-path (path &optional width prefix)org-format-outline-path10730,414329
(defun org-display-outline-path (&optional file current)org-display-outline-path10768,415646
(defvar org-refile-history nilorg-refile-history10785,416264
(defvar org-after-refile-insert-hook nilorg-after-refile-insert-hook10788,416334
(defvar org-capture-last-stored-marker)org-capture-last-stored-marker10793,416537
(defun org-refile (&optional goto default-buffer rfloc)org-refile10794,416577
(defun org-refile-goto-last-stored ()org-refile-goto-last-stored10948,422126
(defun org-refile-get-location (&optional prompt default-buffer new-nodesorg-refile-get-location10954,422336
(defun org-refile-check-position (refile-pointer)org-refile-check-position11033,425404
(defun org-refile-new-child (parent-target child)org-refile-new-child11055,426186
(defun org-olpath-completing-read (prompt collection &rest args)org-olpath-completing-read11081,427023
(defun org-find-dblock (name)org-find-dblock11114,427946
(defconst org-dblock-start-reorg-dblock-start-re11126,428365
(defconst org-dblock-end-re "^[ \t]*#\\+\\(?:END\\|end\\)\\([: \t\r\n]\\|$\\)"org-dblock-end-re11130,428537
(defun org-create-dblock (plist)org-create-dblock11133,428658
(defun org-prepare-dblock ()org-prepare-dblock11149,429246
(defun org-map-dblocks (&optional command)org-map-dblocks11174,430181
(defun org-dblock-update (&optional arg)org-dblock-update11189,430780
(defun org-update-dblock ()org-update-dblock11200,431118
(defun org-beginning-of-dblock ()org-beginning-of-dblock11229,432109
(defun org-update-all-dblocks ()org-update-all-dblocks11243,432545
(defconst org-additional-option-like-keywordsorg-additional-option-like-keywords11253,432773
(defconst org-options-keywordsorg-options-keywords11277,433525
(defconst org-additional-option-like-keywords-for-flyspellorg-additional-option-like-keywords-for-flyspell11286,433903
(defcustom org-structure-template-alistorg-structure-template-alist11297,434216
(defun org-try-structure-completion ()org-try-structure-completion11340,435940
(defun org-complete-expand-structure-template (start cell)org-complete-expand-structure-template11353,436446
(defun org-toggle-comment ()org-toggle-comment11381,437334
(defvar org-last-todo-state-is-todo nilorg-last-todo-state-is-todo11398,437828
(defvar org-setting-tags nil) ; dynamically skippedorg-setting-tags11403,438022
(defvar org-todo-setup-filter-hook nilorg-todo-setup-filter-hook11405,438075
(defvar org-todo-get-default-hook nilorg-todo-get-default-hook11410,438268
(defvar org-agenda-headline-snapshot-before-repeat)org-agenda-headline-snapshot-before-repeat11415,438481
(defun org-current-effective-time ()org-current-effective-time11417,438534
(defun org-todo-yesterday (&optional arg)org-todo-yesterday11428,438880
(defun org-todo (&optional arg)org-todo11438,439225
(defun org-block-todo-from-children-or-siblings-or-parent (change-plist)org-block-todo-from-children-or-siblings-or-parent11670,448700
(defcustom org-track-ordered-property-with-tag nilorg-track-ordered-property-with-tag11735,451495
(defun org-toggle-ordered-property ()org-toggle-ordered-property11754,452338
(defvar org-blocked-by-checkboxes) ; dynamically scopedorg-blocked-by-checkboxes11772,453040
(defun org-block-todo-from-checkboxes (change-plist)org-block-todo-from-checkboxes11773,453096
(defun org-entry-blocked-p ()org-entry-blocked-p11807,454391
(defun org-update-statistics-cookies (all)org-update-statistics-cookies11820,454749
(defvar org-entry-property-inherited-from) ;; defined beloworg-entry-property-inherited-from11859,456077
(defun org-update-parent-todo-statistics ()org-update-parent-todo-statistics11860,456137
(defvar org-after-todo-statistics-hook nilorg-after-todo-statistics-hook11938,459342
(defvar org-todo-statistics-hook nilorg-todo-statistics-hook11954,460075
(defun org-todo-trigger-tag-changes (state)org-todo-trigger-tag-changes11959,460314
(defun org-local-logging (value)org-local-logging11974,460983
(defun org-get-todo-sequence-head (kwd)org-get-todo-sequence-head11991,461580
(defun org-fast-todo-selection ()org-fast-todo-selection12007,462150
(defun org-entry-is-todo-p ()org-entry-is-todo-p12074,464198
(defun org-entry-is-done-p ()org-entry-is-done-p12077,464284
(defun org-get-todo-state ()org-get-todo-state12080,464366
(defun org-at-date-range-p (&optional inactive-ok)org-at-date-range-p12087,464523
(defun org-get-repeat (&optional tagline)org-get-repeat12105,465070
(defvar org-last-changed-timestamp)org-last-changed-timestamp12116,465435
(defvar org-last-inserted-timestamp)org-last-inserted-timestamp12117,465471
(defvar org-log-post-message)org-log-post-message12118,465508
(defvar org-log-note-purpose)org-log-note-purpose12119,465538
(defvar org-log-note-how)org-log-note-how12120,465568
(defvar org-log-note-extra)org-log-note-extra12121,465594
(defun org-auto-repeat-maybe (done-word)org-auto-repeat-maybe12122,465622
(defun org-show-todo-tree (arg)org-show-todo-tree12205,469433
(defun org-deadline (&optional remove time)org-deadline12229,470440
(defun org-schedule (&optional remove time)org-schedule12277,472449
(defun org-get-scheduled-time (pom &optional inherit)org-get-scheduled-time12325,474463
(defun org-get-deadline-time (pom &optional inherit)org-get-deadline-time12333,474787
(defun org-remove-timestamp-with-keyword (keyword)org-remove-timestamp-with-keyword12341,475103
(defun org-add-planning-info (what &optional time &rest remove)org-add-planning-info12359,475772
(defvar org-log-note-marker (make-marker))org-log-note-marker12467,479827
(defvar org-log-note-purpose nil)org-log-note-purpose12468,479870
(defvar org-log-note-state nil)org-log-note-state12469,479904
(defvar org-log-note-previous-state nil)org-log-note-previous-state12470,479936
(defvar org-log-note-how nil)org-log-note-how12471,479977
(defvar org-log-note-extra nil)org-log-note-extra12472,480007
(defvar org-log-note-window-configuration nil)org-log-note-window-configuration12473,480039
(defvar org-log-note-return-to (make-marker))org-log-note-return-to12474,480086
(defvar org-log-note-effective-time nilorg-log-note-effective-time12475,480132
(defvar org-log-post-message nilorg-log-post-message12480,480297
(defun org-add-note ()org-add-note12484,480423
(defvar org-property-end-re)org-property-end-re12490,480610
(defun org-add-log-setup (&optional purpose state prev-stateorg-add-log-setup12491,480639
(defun org-skip-over-state-notes ()org-skip-over-state-notes12550,482922
(defun org-add-log-note (&optional purpose)org-add-log-note12560,483356
(defvar org-note-abort nil) ; dynamically scopedorg-note-abort12599,485029
(defun org-store-log-note ()org-store-log-note12600,485078
(defun org-remove-empty-drawer-at (drawer pos)org-remove-empty-drawer-at12679,487979
(defvar org-ts-type nil)org-ts-type12691,488370
(defun org-sparse-tree (&optional arg type)org-sparse-tree12692,488395
(defvar org-occur-highlights nilorg-occur-highlights12749,491018
(defvar org-occur-parameters nilorg-occur-parameters12752,491148
(defun org-occur (regexp &optional keep-previous callback)org-occur12764,491754
(defun org-occur-next-match (&optional n reset)org-occur-next-match12804,493446
(defun org-show-context (&optional key)org-show-context12830,494303
(defvar org-reveal-start-hook nilorg-reveal-start-hook12862,495623
(defun org-reveal (&optional siblings)org-reveal12865,495701
(defun org-highlight-new-match (beg end)org-highlight-new-match12889,496674
(defun org-remove-occur-highlights (&optional beg end noremove)org-remove-occur-highlights12896,496955
(defvar org-priority-regexp ".*?\\(\\[#\\([A-Z0-9]\\)\\] ?\\)"org-priority-regexp12911,497497
(defvar org-remove-priority-next-time nil)org-remove-priority-next-time12914,497618
(defun org-priority-up ()org-priority-up12916,497662
(defun org-priority-down ()org-priority-down12921,497774
(defun org-priority (&optional action show)org-priority12926,497890
(defun org-show-priority ()org-show-priority13010,500944
(defun org-get-priority (s)org-get-priority13024,501467
(defvar org-agenda-archives-mode)org-agenda-archives-mode13036,501844
(defvar org-map-continue-from nilorg-map-continue-from13037,501878
(defvar org-scanner-tags nilorg-scanner-tags13041,502039
(defvar org-trust-scanner-tags nilorg-trust-scanner-tags13043,502129
(defun org-scan-tags (action matcher todo-only &optional start-level)org-scan-tags13054,502709
(defun org-remove-uninherited-tags (tags)org-remove-uninherited-tags13205,508363
(defun org-match-sparse-tree (&optional todo-only match)org-match-sparse-tree13226,509030
(defalias 'org-tags-sparse-tree 'org-match-sparse-tree)org-tags-sparse-tree13236,509476
(defvar org-cached-props nil)org-cached-props13238,509533
(defun org-cached-entry-get (pom property)org-cached-entry-get13239,509563
(defun org-global-tags-completion-table (&optional files)org-global-tags-completion-table13252,510148
(defun org-make-tags-matcher (match)org-make-tags-matcher13271,510741
(defun org-op-to-function (op &optional stringp)org-op-to-function13415,516303
(defun org<> (a b) (not (= a b)))org<>13427,516849
(defun org-string<= (a b) (or (string= a b) (string< a b)))org-string<=13428,516883
(defun org-string>= (a b) (not (string< a b)))org-string>=13429,516943
(defun org-string>  (a b) (and (not (string= a b)) (not (string< a b))))org-string>13430,516990
(defun org-string<> (a b) (not (string= a b)))org-string<>13431,517063
(defun org-time=  (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (=     a b)))org-time=13432,517110
(defun org-time<  (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (<     a b)))org-time<13433,517204
(defun org-time<= (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (<=    a b)))org-time<=13434,517298
(defun org-time>  (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (>     a b)))org-time>13435,517392
(defun org-time>= (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (>=    a b)))org-time>=13436,517486
(defun org-time<> (a b) (setq a (org-2ft a) b (org-2ft b)) (and (> a 0) (> b 0) (org<> a b)))org-time<>13437,517580
(defun org-2ft (s)org-2ft13438,517674
(defun org-time-today ()org-time-today13450,518040
(defun org-matcher-time (s)org-matcher-time13457,518292
(defun org-match-any-p (re list)org-match-any-p13473,518877
(defvar org-add-colon-after-tag-completion nil)  ;; dynamically scoped paramorg-add-colon-after-tag-completion13478,519030
(defvar org-tags-overlay (make-overlay 1 1))org-tags-overlay13479,519107
(defun org-get-local-tags-at (&optional pos)org-get-local-tags-at13482,519191
(defun org-get-local-tags ()org-get-local-tags13486,519325
(defun org-get-tags-at (&optional pos local)org-get-tags-at13490,519443
(defun org-add-prop-inherited (s)org-add-prop-inherited13537,520921
(defun org-toggle-tag (tag &optional onoff)org-toggle-tag13541,521015
(defun org-align-tags-here (to-col)org-align-tags-here13573,522041
(defun org-set-tags-command (&optional arg just-align)org-set-tags-command13596,522837
(defun org-set-tags-to (data)org-set-tags-to13605,523160
(defun org-align-all-tags ()org-align-all-tags13636,524143
(defvar org-indent-indentation-per-level)org-indent-indentation-per-level13646,524393
(defun org-set-tags (&optional arg just-align)org-set-tags13647,524435
(defun org-change-tag-in-region (beg end tag off)org-change-tag-in-region13750,528265
(defun org-tags-completion-function (string predicate &optional flag)org-tags-completion-function13789,529698
(defun org-fast-tag-insert (kwd tags face &optional end)org-fast-tag-insert13816,530513
(defun org-fast-tag-show-exit (flag)org-fast-tag-show-exit13822,530772
(defun org-set-current-tags-overlay (current prefix)org-set-current-tags-overlay13832,531108
(defvar org-last-tag-selection-key nil)org-last-tag-selection-key13840,531484
(defun org-fast-tag-selection (current inherited table &optional todo-table)org-fast-tag-selection13841,531524
(defun org-get-tags-string ()org-get-tags-string14033,538183
(defun org-get-tags ()org-get-tags14043,538490
(defun org-get-buffer-tags ()org-get-buffer-tags14047,538622
(defun org-map-entries (func &optional match scope &rest skip)org-map-entries14062,539142
(defconst org-special-propertiesorg-special-properties14198,544668
(defconst org-default-propertiesorg-default-properties14206,544991
(defconst org-property-start-re "^[ \t]*:PROPERTIES:[ \t]*$"org-property-start-re14217,545556
(defconst org-property-end-re "^[ \t]*:END:[ \t]*$"org-property-end-re14220,545688
(defconst org-clock-drawer-start-re "^[ \t]*:CLOCK:[ \t]*$"org-clock-drawer-start-re14223,545810
(defconst org-clock-drawer-end-re "^[ \t]*:END:[ \t]*$"org-clock-drawer-end-re14226,545941
(defconst org-property-drawer-reorg-property-drawer-re14229,546068
(defconst org-clock-drawer-reorg-clock-drawer-re14234,546230
(defsubst org-re-property (property)org-re-property14239,546390
(defsubst org-re-property-keyword (property)org-re-property-keyword14244,546583
(defun org-property-action ()org-property-action14249,546786
(defun org-inc-effort ()org-inc-effort14267,547364
(defun org-set-effort (&optional value increment)org-set-effort14272,547501
(defun org-at-property-p ()org-at-property-p14320,549210
(defun org-get-property-block (&optional beg end force)org-get-property-block14331,549635
(defun org-entry-properties (&optional pom which specific)org-entry-properties14363,550805
(defun org-entry-get (pom property &optional inherit literal-nil)org-entry-get14475,555652
(defun org-property-or-variable-value (var &optional inherit)org-property-or-variable-value14518,557582
(defun org-entry-delete (pom property)org-entry-delete14526,557945
(defun org-entry-add-to-multivalued-property (pom property value)org-entry-add-to-multivalued-property14544,558569
(defun org-entry-remove-from-multivalued-property (pom property value)org-entry-remove-from-multivalued-property14554,559010
(defun org-entry-member-in-multivalued-property (pom property value)org-entry-member-in-multivalued-property14564,559457
(defun org-entry-get-multivalued-property (pom property)org-entry-get-multivalued-property14571,559780
(defun org-entry-put-multivalued-property (pom property &rest values)org-entry-put-multivalued-property14577,560043
(defun org-entry-protect-space (s)org-entry-protect-space14586,560472
(defun org-entry-restore-space (s)org-entry-restore-space14594,560702
(defvar org-entry-property-inherited-from (make-marker)org-entry-property-inherited-from14602,560932
(defun org-entry-get-with-inheritance (property &optional literal-nil)org-entry-get-with-inheritance14610,561329
(defvar org-property-changed-functions nilorg-property-changed-functions14636,562434
(defun org-entry-put (pom property value)org-entry-put14641,562629
(defun org-buffer-property-keys (&optional include-specials include-defaults include-columns)org-buffer-property-keys14696,564752
(defun org-property-values (key)org-property-values14745,566462
(defun org-insert-property-drawer ()org-insert-property-drawer14757,566818
(defun org-insert-drawer (&optional arg drawer)org-insert-drawer14796,568090
(defvar org-property-set-functions-alist nilorg-property-set-functions-alist14861,570406
(defun org-set-property-function (property)org-set-property-function14870,570643
(defun org-read-property-value (property)org-read-property-value14876,570903
(defvar org-last-set-property nil)org-last-set-property14897,571652
(defun org-read-property-name ()org-read-property-name14898,571687
(defun org-set-property (property value)org-set-property14924,572451
(defun org-delete-property (property)org-delete-property14941,573306
(defun org-delete-property-globally (property)org-delete-property-globally14953,573688
(defvar org-columns-current-fmt-compiled) ; defined in org-colview.elorg-columns-current-fmt-compiled14973,574289
(defun org-compute-property-at-point ()org-compute-property-at-point14975,574360
(defvar org-property-allowed-value-functions nilorg-property-allowed-value-functions14988,574897
(defun org-property-get-allowed-values (pom property &optional table)org-property-get-allowed-values14997,575359
(defun org-property-previous-allowed-value (&optional previous)org-property-previous-allowed-value15029,576548
(defun org-property-next-allowed-value (&optional previous)org-property-next-allowed-value15034,576724
(defun org-find-olp (path &optional this-buffer)org-find-olp15065,577921
(defun org-find-exact-headline-in-buffer (heading &optional buffer pos-only)org-find-exact-headline-in-buffer15110,579562
(defun org-find-exact-heading-in-directory (heading &optional dir)org-find-exact-heading-in-directory15130,580296
(defun org-find-entry-with-id (ident)org-find-entry-with-id15146,581027
(defvar org-last-changed-timestamp nil)org-last-changed-timestamp15170,581838
(defvar org-last-inserted-timestamp nilorg-last-inserted-timestamp15171,581878
(defvar org-time-was-given) ; dynamically scoped parameterorg-time-was-given15173,581982
(defvar org-end-time-was-given) ; dynamically scoped parameterorg-end-time-was-given15174,582041
(defvar org-ts-what) ; dynamically scoped parameterorg-ts-what15175,582104
(defun org-time-stamp (arg &optional inactive)org-time-stamp15177,582157
(defun org-get-compact-tod (s)org-get-compact-tod15247,585165
(defun org-time-stamp-inactive (&optional arg)org-time-stamp-inactive15263,585813
(defvar org-date-ovl (make-overlay 1 1))org-date-ovl15272,586230
(defvar org-ans1) ; dynamically scoped parameterorg-ans115276,586358
(defvar org-ans2) ; dynamically scoped parameterorg-ans215277,586407
(defvar org-plain-time-of-day-regexp) ; defined beloworg-plain-time-of-day-regexp15279,586457
(defvar org-overriding-default-time nil) ; dynamically scopedorg-overriding-default-time15281,586512
(defvar org-read-date-overlay nil)org-read-date-overlay15282,586574
(defvar org-dcst nil) ; dynamically scopedorg-dcst15283,586609
(defvar org-read-date-history nil)org-read-date-history15284,586652
(defvar org-read-date-final-answer nil)org-read-date-final-answer15285,586687
(defvar org-read-date-analyze-futurep nil)org-read-date-analyze-futurep15286,586727
(defvar org-read-date-analyze-forced-year nil)org-read-date-analyze-forced-year15287,586770
(defvar org-read-date-inactive)org-read-date-inactive15288,586817
(defun org-read-date (&optional org-with-time to-time from-string promptorg-read-date15290,586850
(defvar org-def)org-def15485,595341
(defvar org-defdecode)org-defdecode15486,595358
(defvar org-with-time)org-with-time15487,595381
(defun org-read-date-display ()org-read-date-display15488,595404
(defun org-read-date-analyze (ans org-def org-defdecode)org-read-date-analyze15525,596872
(defvar parse-time-weekdays)parse-time-weekdays15717,605011
(defun org-read-date-get-relative (s today default)org-read-date-get-relative15718,605040
(defun org-order-calendar-date-args (arg1 arg2 arg3)org-order-calendar-date-args15753,606490
(defun org-eval-in-calendar (form &optional keepdate)org-eval-in-calendar15771,607254
(defun org-calendar-select ()org-calendar-select15787,607994
(defun org-insert-time-stamp (time &optional with-hm inactive pre post extra)org-insert-time-stamp15797,608449
(defun org-toggle-time-stamp-overlays ()org-toggle-time-stamp-overlays15823,609635
(defun org-display-custom-time (beg end)org-display-custom-time15844,610489
(defun org-translate-time (string)org-translate-time15871,611565
(defun org-fix-decoded-time (time)org-fix-decoded-time15898,612511
(defun org-days-to-time (timestamp-string)org-days-to-time15904,612714
(defun org-deadline-close (timestamp-string &optional ndays)org-deadline-close15909,612915
(defun org-get-wdays (ts)org-get-wdays15915,613189
(defun org-calendar-select-mouse (ev)org-calendar-select-mouse15930,613737
(defun org-check-deadlines (ndays)org-check-deadlines15941,614227
(defsubst org-re-timestamp (type)org-re-timestamp15962,615083
(defun org-check-before-date (date)org-check-before-date15982,616027
(defun org-check-after-date (date)org-check-after-date15994,616453
(defun org-check-dates-range (start-date end-date)org-check-dates-range16007,616891
(defun org-evaluate-time-range (&optional to-buffer)org-evaluate-time-range16026,617596
(defun org-make-tdiff-string (y d h m)org-make-tdiff-string16090,619890
(defun org-time-string-to-time (s &optional buffer pos)org-time-string-to-time16103,620382
(defun org-time-string-to-seconds (s)org-time-string-to-seconds16113,620739
(defun org-time-string-to-absolute (s &optional daynr prefer show-all buffer pos)org-time-string-to-absolute16117,620881
(defun org-days-to-iso-week (days)org-days-to-iso-week16141,621858
(defun org-small-year-to-year (year)org-small-year-to-year16146,621990
(defun org-time-from-absolute (d)org-time-from-absolute16157,622333
(defun org-calendar-holiday ()org-calendar-holiday16163,622604
(defun org-diary-sexp-entry (sexp entry date)org-diary-sexp-entry16171,622883
(defun org-diary-to-ical-string (frombuf)org-diary-to-ical-string16193,623690
(defun org-closest-date (start current change prefer show-all)org-closest-date16217,624535
(defun org-date-to-gregorian (date)org-date-to-gregorian16298,627656
(defun org-parse-time-string (s &optional nodefault)org-parse-time-string16308,628056
(defun org-timestamp-up (&optional arg)org-timestamp-up16325,628801
(defun org-timestamp-down (&optional arg)org-timestamp-down16333,629125
(defun org-timestamp-up-day (&optional arg)org-timestamp-up-day16341,629455
(defun org-timestamp-down-day (&optional arg)org-timestamp-down-day16350,629766
(defun org-at-timestamp-p (&optional inactive-ok)org-at-timestamp-p16359,630085
(defun org-toggle-timestamp-type ()org-toggle-timestamp-type16391,631223
(defvar org-clock-history)                     ; defined in org-clock.elorg-clock-history16405,631742
(defvar org-clock-adjust-closest nil)          ; defined in org-clock.elorg-clock-adjust-closest16406,631815
(defun org-timestamp-change (n &optional what updown)org-timestamp-change16407,631888
(defun org-modify-ts-extra (s pos n dm)org-modify-ts-extra16538,637675
(defun org-recenter-calendar (date)org-recenter-calendar16575,639206
(defun org-goto-calendar (&optional arg)org-goto-calendar16584,639524
(defun org-get-date-from-calendar ()org-get-date-from-calendar16605,640267
(defun org-date-from-calendar ()org-date-from-calendar16611,640462
(defun org-minutes-to-hh:mm-string (m)org-minutes-to-hh:mm-string16621,640883
(defun org-hh:mm-string-to-minutes (s)org-hh:mm-string-to-minutes16627,641060
(defcustom org-effort-durationsorg-effort-durations16642,641623
(defcustom org-agenda-inhibit-startup torg-agenda-inhibit-startup16663,642268
(defun org-duration-string-to-minutes (s &optional output-to-string)org-duration-string-to-minutes16672,642591
(defun org-save-all-org-buffers ()org-save-all-org-buffers16694,643381
(defun org-revert-all-org-buffers ()org-revert-all-org-buffers16702,643701
(defun org-switchb (&optional arg)org-switchb16733,644752
(defalias 'org-ido-switchb 'org-switchb)org-ido-switchb16755,645722
(defalias 'org-iswitchb 'org-switchb)org-iswitchb16757,645778
(defun org-buffer-list (&optional predicate exclude-tmp)org-buffer-list16759,645817
(defun org-agenda-files (&optional unrestricted archives)org-agenda-files16797,647051
(defun org-agenda-file-p (&optional file)org-agenda-file-p16828,648181
(defun org-edit-agenda-file-list ()org-edit-agenda-file-list16835,648412
(defun org-store-new-agenda-file-list (list)org-store-new-agenda-file-list16858,649337
(defun org-read-agenda-file-list (&optional pair-with-expansion)org-read-agenda-file-list16878,650000
(defun org-cycle-agenda-files ()org-cycle-agenda-files16898,650735
(defun org-agenda-file-to-front (&optional to-end)org-agenda-file-to-front16917,651446
(defun org-remove-file (&optional file)org-remove-file16942,652469
(defun org-file-menu-entry (file)org-file-menu-entry16965,653341
(defun org-check-agenda-file (file)org-check-agenda-file16968,653418
(defun org-get-agenda-file-buffer (file)org-get-agenda-file-buffer16980,653816
(defun org-release-buffers (blist)org-release-buffers16991,654221
(defun org-agenda-prepare-buffers (files)org-agenda-prepare-buffers17004,654708
(defvar org-cdlatex-mode-map (make-sparse-keymap)org-cdlatex-mode-map17060,656856
(defvar org-cdlatex-texmathp-advice-is-done nilorg-cdlatex-texmathp-advice-is-done17069,657275
(define-minor-mode org-cdlatex-modeorg-cdlatex-mode17072,657397
(defun turn-on-org-cdlatex ()turn-on-org-cdlatex17104,658603
(defun org-inside-LaTeX-fragment-p ()org-inside-LaTeX-fragment-p17108,658706
(defun org-inside-latex-macro-p ()org-inside-latex-macro-p17152,660667
(defun org-try-cdlatex-tab ()org-try-cdlatex-tab17158,660869
(defun org-cdlatex-underscore-caret (&optional arg)org-cdlatex-underscore-caret17177,661663
(defun org-cdlatex-math-modify (&optional arg)org-cdlatex-math-modify17186,662040
(defvar org-latex-fragment-image-overlays nilorg-latex-fragment-image-overlays17195,662404
(defun org-remove-latex-fragment-image-overlays ()org-remove-latex-fragment-image-overlays17199,662577
(defun org-preview-latex-fragment (&optional subtree)org-preview-latex-fragment17204,662806
(defvar org-latex-regexpsorg-latex-regexps17249,664638
(defvar org-export-have-math nil) ;; dynamic scopingorg-export-have-math17260,665379
(defun org-format-latex (prefix &optional dir overlays msg atorg-format-latex17261,665432
(defun org-create-math-formula (latex-frag &optional mathml-file)org-create-math-formula17396,670533
(defun org-format-latex-as-mathml (latex-frag latex-frag-typeorg-format-latex-as-mathml17453,672916
(defun org-create-formula-image-with-dvipng (string tofile options buffer)org-create-formula-image-with-dvipng17486,674203
(defvar org-latex-to-pdf-process) ;; Defined in org-latex.elorg-latex-to-pdf-process17553,676648
(defun org-create-formula-image-with-imagemagick (string tofile options buffer)org-create-formula-image-with-imagemagick17554,676709
(defun org-splice-latex-header (tpl def-pkg pkg snippets-p &optional extra)org-splice-latex-header17659,680430
(defun org-latex-packages-to-string (pkg &optional snippets-p newline)org-latex-packages-to-string17702,682244
(defun org-dvipng-color (attr)org-dvipng-color17718,682770
(defun org-latex-color (attr)org-latex-color17729,683158
(defun org-latex-color-format (color-name)org-latex-color-format17740,683544
(defun org-normalize-color (value)org-normalize-color17746,683724
(defvar org-inline-image-overlays nil)org-inline-image-overlays17753,683880
(defun org-toggle-inline-images (&optional include-linked)org-toggle-inline-images17756,683976
(defun org-redisplay-inline-images ()org-redisplay-inline-images17770,684481
(defun org-display-inline-images (&optional include-linked refresh beg end)org-display-inline-images17778,684713
(defun org-display-inline-remove-overlay (ov after beg end &optional len)org-display-inline-remove-overlay17822,686572
(defun org-remove-inline-images ()org-remove-inline-images17829,686858
(define-key org-mode-map [remap outline-mark-subtree] 'org-mark-subtree)org-mode-map17839,687141
(define-key org-mode-map [remap show-subtree] 'org-show-subtree)org-mode-map17840,687214
(define-key org-mode-map [remap outline-forward-same-level]org-mode-map17841,687279
(define-key org-mode-map [remap outline-backward-same-level]org-mode-map17843,687374
(define-key org-mode-map [remap show-branches]org-mode-map17845,687471
(define-key org-mode-map [remap outline-promote] 'org-promote-subtree)org-mode-map17847,687553
(define-key org-mode-map [remap outline-demote] 'org-demote-subtree)org-mode-map17848,687624
(define-key org-mode-map [remap outline-insert-heading] 'org-ctrl-c-ret)org-mode-map17849,687693
(define-key org-mode-map [backtab] 'org-shifttab)org-mode-map17891,690138
(define-key org-mode-map org-babel-key-prefix org-babel-map)org-mode-map17919,691463
(define-key org-mode-map "\C-c\C-x\C-c" 'org-columns)org-mode-map18086,700998
(define-key org-mode-map "\C-c\C-x!" 'org-reload)org-mode-map18088,701053
(define-key org-mode-map "\C-c\C-xg" 'org-feed-update-all)org-mode-map18090,701104
(define-key org-mode-map "\C-c\C-xG" 'org-feed-goto-inbox)org-mode-map18091,701163
(define-key org-mode-map "\C-c\C-x[" 'org-reftex-citation)org-mode-map18093,701223
(defconst org-speed-commands-defaultorg-speed-commands-default18100,701368
(defun org-print-speed-command (e)org-print-speed-command18155,703175
(defun org-speed-command-help ()org-speed-command-help18170,703493
(defun org-speed-move-safe (cmd)org-speed-move-safe18184,704099
(defvar org-self-insert-command-undo-counter 0)org-self-insert-command-undo-counter18194,704463
(defvar org-table-auto-blank-field) ; defined in org-table.elorg-table-auto-blank-field18196,704512
(defvar org-speed-command nil)org-speed-command18197,704574
(defun org-speed-command-activate (keys)org-speed-command-activate18202,704709
(defun org-babel-speed-command-activate (keys)org-babel-speed-command-activate18215,705264
(defcustom org-speed-command-hookorg-speed-command-hook18220,705480
(defun org-self-insert-command (N)org-self-insert-command18239,706202
(defun org-check-before-invisible-edit (kind)org-check-before-invisible-edit18296,708500
(defun org-fix-tags-on-the-fly ()org-fix-tags-on-the-fly18345,710886
(defun org-delete-backward-char (N)org-delete-backward-char18350,711043
(defun org-delete-char (N)org-delete-char18378,712145
(defun org-remap (map &rest commands)org-remap18426,714073
(defvar org-ctrl-c-ctrl-c-hook nilorg-ctrl-c-ctrl-c-hook18445,714826
(defvar org-ctrl-c-ctrl-c-final-hook nilorg-ctrl-c-ctrl-c-final-hook18458,715381
(defvar org-tab-first-hook nilorg-tab-first-hook18471,715937
(defvar org-tab-after-check-for-table-hook nilorg-tab-after-check-for-table-hook18481,716408
(defvar org-tab-after-check-for-cycling-hook nilorg-tab-after-check-for-cycling-hook18490,716824
(defvar org-tab-before-tab-emulation-hook nilorg-tab-before-tab-emulation-hook18497,717186
(defvar org-metaleft-hook nilorg-metaleft-hook18503,717460
(defvar org-metaright-hook nilorg-metaright-hook18506,717599
(defvar org-metaup-hook nilorg-metaup-hook18509,717740
(defvar org-metadown-hook nilorg-metadown-hook18512,717875
(defvar org-shiftmetaleft-hook nilorg-shiftmetaleft-hook18515,718014
(defvar org-shiftmetaright-hook nilorg-shiftmetaright-hook18518,718160
(defvar org-shiftmetaup-hook nilorg-shiftmetaup-hook18521,718308
(defvar org-shiftmetadown-hook nilorg-shiftmetadown-hook18524,718450
(defvar org-metareturn-hook nilorg-metareturn-hook18527,718596
(defvar org-shiftup-hook nilorg-shiftup-hook18530,718736
(defvar org-shiftup-final-hook nilorg-shiftup-final-hook18533,718872
(defvar org-shiftdown-hook nilorg-shiftdown-hook18537,719092
(defvar org-shiftdown-final-hook nilorg-shiftdown-final-hook18540,719232
(defvar org-shiftleft-hook nilorg-shiftleft-hook18544,719456
(defvar org-shiftleft-final-hook nilorg-shiftleft-final-hook18547,719596
(defvar org-shiftright-hook nilorg-shiftright-hook18551,719820
(defvar org-shiftright-final-hook nilorg-shiftright-final-hook18554,719962
(defun org-modifier-cursor-error ()org-modifier-cursor-error18559,720189
(defun org-shiftselect-error ()org-shiftselect-error18563,720389
(defun org-call-for-shift-select (cmd)org-call-for-shift-select18569,720737
(defun org-shifttab (&optional arg)org-shifttab18573,720856
(defun org-shiftmetaleft ()org-shiftmetaleft18588,721465
(defun org-shiftmetaright ()org-shiftmetaright18604,722134
(defun org-shiftmetaup (&optional arg)org-shiftmetaup18620,722800
(defun org-shiftmetadown (&optional arg)org-shiftmetadown18635,723472
(defsubst org-hidden-tree-error ()org-hidden-tree-error18650,724166
(defun org-metaleft (&optional arg)org-metaleft18654,724290
(defun org-metaright (&optional arg)org-metaright18683,725395
(defun org-check-for-hidden (what)org-check-for-hidden18714,726620
(defun org-metaup (&optional arg)org-metaup18754,728362
(defun org-metadown (&optional arg)org-metadown18776,729240
(defun org-shiftup (&optional arg)org-shiftup18798,730130
(defun org-shiftdown (&optional arg)org-shiftdown18822,731178
(defun org-shiftright (&optional arg)org-shiftright18846,732223
(defun org-shiftleft (&optional arg)org-shiftleft18882,733817
(defun org-shiftcontrolright ()org-shiftcontrolright18918,735428
(defun org-shiftcontrolleft ()org-shiftcontrolleft18931,735846
(defun org-shiftcontrolup ()org-shiftcontrolup18944,736273
(defun org-shiftcontroldown ()org-shiftcontroldown18953,736542
(defun org-ctrl-c-ret ()org-ctrl-c-ret18962,736817
(defun org-find-visible ()org-find-visible18969,737063
(defun org-find-invisible ()org-find-invisible18974,737227
(defun org-copy-visible (beg end)org-copy-visible18980,737400
(defun org-copy-special ()org-copy-special18994,737844
(defun org-cut-special ()org-cut-special19002,738146
(defun org-paste-special (arg)org-paste-special19010,738442
(defsubst org-in-fixed-width-region-p ()org-in-fixed-width-region-p19019,738787
(defun org-edit-special (&optional arg)org-edit-special19024,738952
(defvar org-table-coordinate-overlays) ; defined in org-table.elorg-table-coordinate-overlays19058,740563
(defun org-ctrl-c-ctrl-c (&optional arg)org-ctrl-c-ctrl-c19059,740628
(defun org-mode-restart ()org-mode-restart19235,747728
(defun org-kill-note-or-show-branches ()org-kill-note-or-show-branches19242,747920
(defun org-return (&optional indent)org-return19252,748228
(defun org-return-indent ()org-return-indent19293,749693
(defun org-ctrl-c-star ()org-ctrl-c-star19300,749937
(defun org-ctrl-c-minus ()org-ctrl-c-minus19312,750292
(defun org-toggle-item (arg)org-toggle-item19328,750835
(defun org-toggle-heading (&optional nstars)org-toggle-heading19458,755713
(defun org-meta-return (&optional arg)org-meta-return19567,759859
(defsubst org-in-subtree-not-table-p ()org-in-subtree-not-table-p19582,760380
(defun org-info (&optional node)org-info19847,772062
(defun org-submit-bug-report ()org-submit-bug-report19854,772271
(defun org-install-agenda-files-menu ()org-install-agenda-files-menu19913,774690
(defun org-require-autoloaded-modules ()org-require-autoloaded-modules19934,775372
(defun org-reload (&optional uncompiled)org-reload19944,775676
(defun org-customize ()org-customize19988,777188
(defun org-create-customize-menu ()org-create-customize-menu19995,777372
(defun org-get-at-bol (property)org-get-at-bol20019,778137
(defun org-find-text-property-in-string (prop s)org-find-text-property-in-string20023,778271
(defun org-display-warning (message) ;; Copied from Emacs-Museorg-display-warning20029,778506
(defun org-eval (form)org-eval20043,779002
(defun org-in-clocktable-p ()org-in-clocktable-p20049,779147
(defun org-in-commented-line ()org-in-commented-line20060,779495
(defun org-in-indented-comment-line ()org-in-indented-comment-line20064,779612
(defun org-in-verbatim-emphasis ()org-in-verbatim-emphasis20071,779821
(defun org-goto-marker-or-bmk (marker &optional bookmark)org-goto-marker-or-bmk20075,779955
(defun org-quote-csv-field (s)org-quote-csv-field20089,780450
(defun org-force-self-insert (N)org-force-self-insert20095,780644
(defun org-string-width (s)org-string-width20100,780776
(defun org-shorten-string (s maxlength)org-shorten-string20122,781740
(defun org-get-indentation (&optional line)org-get-indentation20139,782559
(defun org-get-string-indentation (s)org-get-string-indentation20150,782935
(defun org-remove-tabs (s &optional width)org-remove-tabs20161,783295
(defun org-fix-indentation (line ind)org-fix-indentation20173,783657
(defun org-remove-indentation (code &optional n)org-remove-indentation20186,784118
(defun org-do-remove-indentation (&optional n)org-do-remove-indentation20194,784380
(defun org-fill-template (template alist)org-fill-template20211,784926
(defun org-base-buffer (buffer)org-base-buffer20224,785372
(defun org-trim (s)org-trim20231,785562
(defun org-wrap (string &optional width lines)org-wrap20237,785790
(defun org-do-wrap (words width)org-do-wrap20262,786743
(defun org-split-string (string &optional separators)org-split-string20272,787101
(defun org-quote-vert (s)org-quote-vert20300,787976
(defun org-uuidgen-p (s)org-uuidgen-p20306,788118
(defun org-in-src-block-p (&optional inside)org-in-src-block-p20310,788299
(defun org-context ()org-context20324,788788
(defun org-in-regexp (re &optional nlines visually)org-in-regexp20444,793338
(defun org-at-regexp-p (regexp)org-at-regexp-p20461,794056
(defun org-between-regexps-p (start-re end-re &optional lim-up lim-down)org-between-regexps-p20473,794399
(defun org-in-block-p (names)org-in-block-p20505,795636
(defun org-occur-in-agenda-files (regexp &optional nlines)org-occur-in-agenda-files20528,796355
(defun org-occur-link-in-agenda-files ()org-occur-link-in-agenda-files20573,797856
(defun org-uniquify (list)org-uniquify20583,798215
(defun org-delete-all (elts list)org-delete-all20589,798365
(defun org-count (cl-item cl-seq)org-count20595,798507
(defun org-remove-if (predicate seq)org-remove-if20606,799012
(defun org-remove-if-not (predicate seq)org-remove-if-not20614,799235
(defun org-reduce (cl-func cl-seq &rest cl-keys)org-reduce20622,799464
(defun org-back-over-empty-lines ()org-back-over-empty-lines20634,799960
(defun org-skip-whitespace ()org-skip-whitespace20646,800365
(defun org-point-in-group (point group &optional context)org-point-in-group20649,800430
(defun org-switch-to-buffer-other-window (&rest args)org-switch-to-buffer-other-window20661,800886
(defun org-combine-plists (&rest plists)org-combine-plists20668,801146
(defun org-replace-escapes (string table)org-replace-escapes20682,801633
(defun org-sublist (list start end)org-sublist20709,802925
(defun org-find-base-buffer-visiting (file)org-find-base-buffer-visiting20719,803202
(defun org-image-file-name-regexp (&optional extensions)org-image-file-name-regexp20728,803475
(defun org-file-image-p (file &optional extensions)org-file-image-p20744,804018
(defun org-get-cursor-date ()org-get-cursor-date20749,804196
(defun org-mark-subtree (&optional up)org-mark-subtree20766,804812
(defun org-indent-line ()org-indent-line20783,805467
(defun org-indent-drawer ()org-indent-drawer20896,809781
(defun org-indent-block ()org-indent-block20916,810355
(defun org-indent-region (start end)org-indent-region20937,810967
(defun org-setup-filling ()org-setup-filling20965,811907
(defvar org-element-paragraph-separate) ; org-element.elorg-element-paragraph-separate20981,812570
(defun org-fill-paragraph-separate-nobreak-p ()org-fill-paragraph-separate-nobreak-p20982,812627
(defun org-fill-line-break-nobreak-p ()org-fill-line-break-nobreak-p20986,812801
(defvar org-element--affiliated-re) ; From org-element.elorg-element--affiliated-re20994,813095
(defvar orgtbl-line-start-regexp) ; From org-table.elorgtbl-line-start-regexp20995,813153
(defun org-adaptive-fill-function ()org-adaptive-fill-function20996,813207
(defvar message-cite-prefix-regexp)	; From message.elmessage-cite-prefix-regexp21053,815417
(defvar org-element-all-objects)	; From org-element.elorg-element-all-objects21054,815471
(defun org-fill-paragraph (&optional justify)org-fill-paragraph21055,815526
(defun org-auto-fill-function ()org-auto-fill-function21172,820039
(defun org-comment-line-break-function (&optional soft)org-comment-line-break-function21183,820467
(defun org-setup-comments-handling ()org-setup-comments-handling21213,821689
(defun org-insert-comment ()org-insert-comment21222,822111
(defvar comment-empty-lines)		; From newcomment.el.comment-empty-lines21230,822365
(defun org-comment-or-uncomment-region (beg end &rest ignore)org-comment-or-uncomment-region21231,822417
(defun org-toggle-fixed-width-section (arg)org-toggle-fixed-width-section21284,824254
(defun org-reftex-citation ()org-reftex-citation21332,825880
(defun org-beginning-of-line (&optional arg)org-beginning-of-line21364,826956
(defun org-end-of-line (&optional arg)org-end-of-line21429,829444
(define-key org-mode-map "\C-a" 'org-beginning-of-line)org-mode-map21466,831029
(define-key org-mode-map "\C-e" 'org-end-of-line)org-mode-map21467,831085
(defun org-backward-sentence (&optional arg)org-backward-sentence21469,831136
(defun org-forward-sentence (&optional arg)org-forward-sentence21478,831486
(define-key org-mode-map "\M-a" 'org-backward-sentence)org-mode-map21487,831809
(define-key org-mode-map "\M-e" 'org-forward-sentence)org-mode-map21488,831865
(defun org-kill-line (&optional arg)org-kill-line21490,831921
(define-key org-mode-map "\C-k" 'org-kill-line)org-mode-map21509,832677
(defun org-yank (&optional arg)org-yank21511,832726
(defun org-yank-generic (command arg)org-yank-generic21539,833957
(defun org-yank-folding-would-swallow-text (beg end)org-yank-folding-would-swallow-text21597,835705
(define-key org-mode-map "\C-y" 'org-yank)org-mode-map21614,836299
(defun org-truely-invisible-p ()org-truely-invisible-p21616,836343
(defun org-invisible-p2 ()org-invisible-p221625,836665
(defun org-back-to-heading (&optional invisible-ok)org-back-to-heading21632,836920
(defun org-before-first-heading-p ()org-before-first-heading-p21639,837215
(defun org-at-heading-p (&optional ignored)org-at-heading-p21645,837378
(defalias 'org-on-heading-p 'org-at-heading-p)org-on-heading-p21648,837500
(defun org-at-comment-p nilorg-at-comment-p21650,837548
(defun org-at-drawer-p nilorg-at-drawer-p21656,837696
(defun org-at-block-p nilorg-at-block-p21662,837845
(defun org-point-at-end-of-empty-headline ()org-point-at-end-of-empty-headline21668,837991
(defun org-at-heading-or-item-p ()org-at-heading-or-item-p21680,838410
(defun org-at-target-p ()org-at-target-p21683,838489
(defalias 'org-on-target-p 'org-at-target-p)org-on-target-p21687,838653
(defun org-up-heading-all (arg)org-up-heading-all21689,838699
(defun org-up-heading-safe ()org-up-heading-safe21697,839085
(defun org-first-sibling-p ()org-first-sibling-p21714,839804
(defun org-goto-sibling (&optional previous)org-goto-sibling21728,840179
(defun org-show-siblings ()org-show-siblings21748,840928
(defun org-goto-first-child ()org-goto-first-child21756,841167
(defun org-show-hidden-entry ()org-show-hidden-entry21768,841650
(defun org-flag-heading (flag &optional entry)org-flag-heading21773,841776
(defun org-get-next-sibling ()org-get-next-sibling21789,842282
(defun org-get-last-sibling ()org-get-last-sibling21801,842721
(defun org-end-of-subtree (&optional invisible-ok to-heading)org-end-of-subtree21815,843181
(defadvice outline-end-of-subtree (around prefer-org-version activate compile)outline-end-of-subtree21850,844684
(defun org-end-of-meta-data-and-drawers ()org-end-of-meta-data-and-drawers21858,844945
(defun org-forward-heading-same-level (arg &optional invisible-ok)org-forward-heading-same-level21877,845649
(defun org-backward-heading-same-level (arg &optional invisible-ok)org-backward-heading-same-level21899,846469
(defun org-forward-element ()org-forward-element21917,847090
(defun org-backward-element ()org-backward-element21936,847806
(defun org-up-element ()org-up-element21962,848759
(defvar org-element-greater-elements)org-element-greater-elements21974,849260
(defun org-down-element ()org-down-element21975,849298
(defun org-drag-element-backward ()org-drag-element-backward21990,849911
(defun org-drag-element-forward ()org-drag-element-forward22006,850568
(defun org-mark-element ()org-mark-element22040,851951
(defun org-narrow-to-element ()org-narrow-to-element22060,852665
(defun org-transpose-element ()org-transpose-element22078,853239
(defun org-unindent-buffer ()org-unindent-buffer22087,853542
(defun org-show-subtree ()org-show-subtree22112,854416
(defun org-show-entry ()org-show-entry22121,854610
(defun org-make-options-regexp (kwds &optional extra)org-make-options-regexp22140,855111
(defun org-isearch-end ()org-isearch-end22149,855385
(defun org-isearch-post-command ()org-isearch-post-command22165,856075
(defvar org-imenu-markers nilorg-imenu-markers22175,856327
(defun org-imenu-new-marker (&optional pos)org-imenu-new-marker22179,856448
(defun org-imenu-get-tree ()org-imenu-get-tree22186,856663
(defun org-link-display-format (link)org-link-display-format22221,857813
(defun org-toggle-link-display ()org-toggle-link-display22233,858188
(defvar org-speedbar-restriction-lock-overlay (make-overlay 1 1)org-speedbar-restriction-lock-overlay22246,858591
(defun org-speedbar-set-agenda-restriction ()org-speedbar-set-agenda-restriction22254,858986
(defun org-mode-flyspell-verify ()org-mode-flyspell-verify22301,861019
(defun org-remove-flyspell-overlays-in (beg end)org-remove-flyspell-overlays-in22314,861600
(defun org-bookmark-jump-unhide ()org-bookmark-jump-unhide22344,862819
(defun org-closed-in-range ()org-closed-in-range22358,863280

/home/malk/.emacs.d/elpa/org-20130128/org-habit.el,2201
(defgroup org-habit nilorg-habit37,1163
(defcustom org-habit-graph-column 40org-habit-graph-column42,1282
(defcustom org-habit-preceding-days 21org-habit-preceding-days48,1500
(defcustom org-habit-following-days 7org-habit-following-days53,1643
(defcustom org-habit-show-habits torg-habit-show-habits58,1784
(defcustom org-habit-show-habits-only-for-today torg-habit-show-habits-only-for-today63,1905
(defcustom org-habit-show-all-today nilorg-habit-show-all-today70,2174
(defcustom org-habit-today-glyph ?!org-habit-today-glyph76,2366
(defcustom org-habit-completed-glyph ?*org-habit-completed-glyph82,2505
(defface org-habit-clear-faceorg-habit-clear-face88,2678
(defface org-habit-clear-future-faceorg-habit-clear-future-face94,2905
(defface org-habit-ready-faceorg-habit-ready-face101,3155
(defface org-habit-ready-future-faceorg-habit-ready-future-face107,3391
(defface org-habit-alert-faceorg-habit-alert-face114,3633
(defface org-habit-alert-future-faceorg-habit-alert-future-face120,3845
(defface org-habit-overdue-faceorg-habit-overdue-face127,4074
(defface org-habit-overdue-future-faceorg-habit-overdue-future-face133,4297
(defun org-habit-duration-to-days (ts)org-habit-duration-to-days140,4526
(defun org-is-habit-p (&optional pom)org-is-habit-p149,4860
(defun org-habit-parse-todo (&optional pom)org-habit-parse-todo153,5002
(defsubst org-habit-scheduled (habit)org-habit-scheduled204,7235
(defsubst org-habit-scheduled-repeat (habit)org-habit-scheduled-repeat206,7290
(defsubst org-habit-deadline (habit)org-habit-deadline208,7352
(defsubst org-habit-deadline-repeat (habit)org-habit-deadline-repeat215,7579
(defsubst org-habit-done-dates (habit)org-habit-done-dates218,7686
(defsubst org-habit-get-priority (habit &optional moment)org-habit-get-priority221,7743
(defun org-habit-get-faces (habit &optional now-days scheduled-days donep)org-habit-get-faces243,8585
(defun org-habit-build-graph (habit starting current ending)org-habit-build-graph278,10200
(defun org-habit-insert-consistency-graphs (&optional line)org-habit-insert-consistency-graphs340,12290
(defun org-habit-toggle-habits ()org-habit-toggle-habits372,13533

/home/malk/.emacs.d/elpa/org-20130128/org-mobile.el,4117
(defgroup org-mobile nilorg-mobile43,1617
(defcustom org-mobile-files '(org-agenda-files)org-mobile-files48,1749
(defcustom org-mobile-files-exclude-regexp ""org-mobile-files-exclude-regexp68,2598
(defcustom org-mobile-directory ""org-mobile-directory74,2756
(defcustom org-mobile-use-encryption nilorg-mobile-use-encryption79,2909
(defcustom org-mobile-encryption-tempfile "~/orgtmpcrypt"org-mobile-encryption-tempfile91,3404
(defcustom org-mobile-encryption-password ""org-mobile-encryption-password99,3737
(defvar org-mobile-encryption-password-session nil)org-mobile-encryption-password-session120,4680
(defun org-mobile-encryption-password ()org-mobile-encryption-password122,4733
(defcustom org-mobile-inbox-for-pull "~/org/from-mobile.org"org-mobile-inbox-for-pull128,4995
(defconst org-mobile-capture-file "mobileorg.org"org-mobile-capture-file137,5400
(defcustom org-mobile-index-file "index.org"org-mobile-index-file141,5588
(defcustom org-mobile-agendas 'allorg-mobile-agendas148,5858
(defcustom org-mobile-force-id-on-agenda-items torg-mobile-force-id-on-agenda-items165,6411
(defcustom org-mobile-force-mobile-change nilorg-mobile-force-mobile-change170,6553
(defcustom org-mobile-action-alistorg-mobile-action-alist188,7227
(defcustom org-mobile-checksum-binary (or (executable-find "shasum")org-mobile-checksum-binary209,8060
(defvar org-mobile-pre-push-hook nilorg-mobile-pre-push-hook217,8330
(defvar org-mobile-post-push-hook nilorg-mobile-post-push-hook224,8651
(defvar org-mobile-pre-pull-hook nilorg-mobile-pre-pull-hook231,8991
(defvar org-mobile-post-pull-hook nilorg-mobile-post-pull-hook238,9319
(defvar org-mobile-last-flagged-files nilorg-mobile-last-flagged-files245,9669
(defvar org-mobile-files-alist nil)org-mobile-files-alist248,9778
(defvar org-mobile-checksum-files nil)org-mobile-checksum-files249,9814
(defun org-mobile-prepare-file-lists ()org-mobile-prepare-file-lists251,9854
(defun org-mobile-files-alist ()org-mobile-files-alist255,9992
(defvar org-agenda-filter)org-agenda-filter303,11719
(defun org-mobile-push ()org-mobile-push306,11762
(defvar org-mobile-before-process-capture-hook nilorg-mobile-before-process-capture-hook346,13369
(defun org-mobile-pull ()org-mobile-pull352,13618
(defun org-mobile-check-setup ()org-mobile-check-setup377,14646
(defun org-mobile-create-index-file ()org-mobile-create-index-file414,16270
(defun org-mobile-copy-agenda-files ()org-mobile-copy-agenda-files482,19098
(defun org-mobile-write-checksums ()org-mobile-write-checksums518,20568
(defun org-mobile-sumo-agenda-command ()org-mobile-sumo-agenda-command530,21066
(defvar org-mobile-creating-agendas nil)org-mobile-creating-agendas607,23884
(defun org-mobile-write-agenda-for-mobile (file)org-mobile-write-agenda-for-mobile608,23925
(defun org-mobile-get-outline-path-link (pom)org-mobile-get-outline-path-link671,26067
(defun org-mobile-escape-olp (s)org-mobile-escape-olp682,26397
(defun org-mobile-create-sumo-agenda ()org-mobile-create-sumo-agenda686,26490
(defun org-mobile-encrypt-and-move (infile outfile)org-mobile-encrypt-and-move707,27207
(defun org-mobile-encrypt-file (infile outfile)org-mobile-encrypt-file717,27624
(defun org-mobile-decrypt-file (infile outfile)org-mobile-decrypt-file726,28022
(defun org-mobile-cleanup-encryption-tempfile ()org-mobile-cleanup-encryption-tempfile735,28423
(defun org-mobile-move-capture ()org-mobile-move-capture741,28678
(defun org-mobile-update-checksum-for-capture-file (buffer-string)org-mobile-update-checksum-for-capture-file782,30198
(defun org-mobile-apply (&optional beg end)org-mobile-apply797,30796
(defun org-mobile-timestamp-buffer (buf)org-mobile-timestamp-buffer924,35138
(defun org-mobile-smart-read ()org-mobile-smart-read941,35694
(defun org-mobile-locate-entry (link)org-mobile-locate-entry973,37124
(defun org-mobile-edit (what old new)org-mobile-edit998,38034
(defun org-mobile-tags-same-p (list1 list2)org-mobile-tags-same-p1113,42030
(defun org-mobile-bodies-same-p (a b)org-mobile-bodies-same-p1118,42187

/home/malk/.emacs.d/elpa/org-20130128/ob-clojure.el,435
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts44,1368
(defvar org-babel-default-header-args:clojure '())org-babel-default-header-args:clojure47,1468
(defvar org-babel-header-args:clojure '((package . :any)))org-babel-header-args:clojure48,1519
(defun org-babel-expand-body:clojure (body params)org-babel-expand-body:clojure50,1579
(defun org-babel-execute:clojure (body params)org-babel-execute:clojure75,2628

/home/malk/.emacs.d/elpa/org-20130128/org-faces.el,4689
(defun org-copy-face (old-face new-face docstring &rest attributes)org-copy-face34,1127
(defgroup org-faces nilorg-faces50,1686
(defface org-defaultorg-default55,1779
(defface org-hideorg-hide60,1891
(defface org-level-1 ;; originally copied from font-lock-function-name-faceorg-level-168,2167
(defface org-level-2 ;; originally copied from font-lock-variable-name-faceorg-level-279,2761
(defface org-level-3 ;; originally copied from font-lock-keyword-faceorg-level-389,3303
(defface org-level-4   ;; originally copied from font-lock-comment-faceorg-level-4101,3991
(defface org-level-5 ;; originally copied from font-lock-type-faceorg-level-5113,4682
(defface org-level-6 ;; originally copied from font-lock-constant-faceorg-level-6121,5076
(defface org-level-7 ;; originally copied from font-lock-builtin-faceorg-level-7129,5475
(defface org-level-8 ;; originally copied from font-lock-string-faceorg-level-8137,5871
(defface org-special-keyword ;; originally copied from font-lock-string-faceorg-special-keyword145,6267
(defface org-drawer ;; originally copied from font-lock-function-name-faceorg-drawer153,6644
(defface org-property-value nilorg-property-value164,7220
(defface org-columnorg-column168,7317
(defface org-column-titleorg-column-title208,9093
(defface org-agenda-column-datelineorg-agenda-column-dateline226,9843
(defface org-warningorg-warning232,10018
(defface org-archived    ; similar to shadoworg-archived242,10524
(defface org-linkorg-link255,11039
(defface org-footnoteorg-footnote263,11310
(defface org-ellipsisorg-ellipsis270,11549
(defface org-targetorg-target277,11832
(defface org-dateorg-date284,12036
(defface org-date-selectedorg-date-selected291,12282
(defface org-sexp-dateorg-sexp-date303,12928
(defface org-tagorg-tag310,13172
(defface org-list-dtorg-list-dt317,13349
(defface org-todo ; font-lock-warning-faceorg-todo322,13459
(defface org-done ;; originally copied from font-lock-type-faceorg-done332,13970
(defface org-agenda-done ;; originally copied from font-lock-type-faceorg-agenda-done341,14411
(defface org-headline-done ;; originally copied from font-lock-string-faceorg-headline-done355,15171
(defcustom org-faces-easy-propertiesorg-faces-easy-properties365,15716
(defcustom org-todo-keyword-faces nilorg-todo-keyword-faces379,16264
(defcustom org-priority-faces nilorg-priority-faces397,16923
(defvar org-tags-special-faces-re nil)org-tags-special-faces-re414,17535
(defun org-set-tag-faces (var value)org-set-tag-faces415,17574
(defface org-checkboxorg-checkbox422,17785
(defcustom org-tag-faces nilorg-tag-faces435,18118
(defface org-table ;; originally copied from font-lock-function-name-faceorg-table455,18848
(defface org-formulaorg-formula466,19472
(defface org-codeorg-code476,19924
(defface org-meta-lineorg-meta-line490,20436
(defface org-document-titleorg-document-title496,20596
(defface org-document-infoorg-document-info503,20913
(defface org-document-info-keywordorg-document-info-keyword511,21229
(defface org-blockorg-block524,21755
(defface org-block-background '((t ()))org-block-background538,22261
(defface org-verbatimorg-verbatim547,22586
(defcustom org-fontify-quote-and-verse-blocks nilorg-fontify-quote-and-verse-blocks566,23332
(defface org-clock-overlay ;; copied from secondary-selectionorg-clock-overlay574,23652
(defface org-agenda-structure ;; originally copied from font-lock-function-name-faceorg-agenda-structure590,24295
(defface org-scheduledorg-scheduled617,25446
(defface org-scheduled-todayorg-scheduled-today626,25828
(defface org-agenda-dimmed-todo-faceorg-agenda-dimmed-todo-face635,26216
(defface org-scheduled-previouslyorg-scheduled-previously641,26425
(defface org-upcoming-deadlineorg-upcoming-deadline651,26924
(defcustom org-agenda-deadline-facesorg-agenda-deadline-faces661,27420
(defface org-agenda-restriction-lockorg-agenda-restriction-lock686,28414
(defface org-agenda-filter-tagsorg-agenda-filter-tags697,28995
(defface org-agenda-filter-categoryorg-agenda-filter-category703,29156
(defface org-time-grid ;; originally copied from font-lock-variable-name-faceorg-time-grid709,29321
(defface org-agenda-diaryorg-agenda-diary720,29848
(defface org-agenda-calendar-eventorg-agenda-calendar-event726,30002
(defface org-agenda-calendar-sexporg-agenda-calendar-sexp732,30161
(defconst org-level-facesorg-level-faces738,30317
(defcustom org-n-level-faces (length org-level-faces)org-n-level-faces743,30451
(defcustom org-cycle-level-faces torg-cycle-level-faces750,30746
(defface org-latex-and-export-specialsorg-latex-and-export-specials760,31075

/home/malk/.emacs.d/elpa/org-20130128/org-indent.el,2596
(defvar org-inlinetask-show-first-star)org-inlinetask-show-first-star48,1738
(defgroup org-indent nilorg-indent50,1779
(defconst org-indent-max 40org-indent-max55,1900
(defconst org-indent-max-levels 20org-indent-max-levels57,1968
(defvar org-indent-strings nilorg-indent-strings63,2192
(defvar org-indent-stars nilorg-indent-stars66,2308
(defvar org-indent-inlinetask-first-star (org-add-props "*" '(face org-warning))org-indent-inlinetask-first-star69,2427
(defvar org-indent-agent-timer nilorg-indent-agent-timer71,2560
(defvar org-indent-agentized-buffers nilorg-indent-agentized-buffers73,2636
(defvar org-indent-agent-resume-timer nilorg-indent-agent-resume-timer75,2731
(defvar org-indent-agent-active-delay '(0 2 0)org-indent-agent-active-delay77,2845
(defvar org-indent-agent-passive-delay '(0 0 400000)org-indent-agent-passive-delay80,3010
(defvar org-indent-agent-resume-delay '(0 0 100000)org-indent-agent-resume-delay83,3184
(defvar org-indent-initial-marker nilorg-indent-initial-marker85,3311
(defvar org-hide-leading-stars-before-indent-mode nilorg-hide-leading-stars-before-indent-mode88,3454
(defvar org-indent-modified-headline-flag nilorg-indent-modified-headline-flag90,3527
(defcustom org-indent-boundary-char ?\   ; comment to protect space charorg-indent-boundary-char95,3694
(defcustom org-indent-mode-turns-off-org-adapt-indentation torg-indent-mode-turns-off-org-adapt-indentation106,4169
(defcustom org-indent-mode-turns-on-hiding-stars torg-indent-mode-turns-on-hiding-stars113,4421
(defcustom org-indent-indentation-per-level 2org-indent-indentation-per-level119,4610
(defface org-indentorg-indent124,4747
(defun org-indent-initialize ()org-indent-initialize131,4970
(defsubst org-indent-remove-properties (beg end)org-indent-remove-properties148,5589
(define-minor-mode org-indent-modeorg-indent-mode154,5802
(defun org-indent-indent-buffer ()org-indent-indent-buffer226,8999
(defun org-indent-remove-properties-from-string (string)org-indent-remove-properties-from-string236,9425
(defun org-indent-initialize-agent ()org-indent-initialize-agent242,9632
(defun org-indent-initialize-buffer (buffer delay)org-indent-initialize-buffer263,10596
(defsubst org-indent-set-line-properties (l w h)org-indent-set-line-properties285,11367
(defun org-indent-add-properties (beg end &optional delay)org-indent-add-properties314,12430
(defun org-indent-notify-modified-headline (beg end)org-indent-notify-modified-headline391,15777
(defun org-indent-refresh-maybe (beg end dummy)org-indent-refresh-maybe408,16371

/home/malk/.emacs.d/elpa/org-20130128/ob-screen.el,721
(defvar org-babel-screen-location "screen"org-babel-screen-location39,1297
(defvar org-babel-default-header-args:screenorg-babel-default-header-args:screen43,1454
(defun org-babel-execute:screen (body params)org-babel-execute:screen47,1651
(defun org-babel-prep-session:screen (session params)org-babel-prep-session:screen58,2210
(defun org-babel-screen-session-execute-string (session body)org-babel-screen-session-execute-string76,3056
(defun org-babel-screen-session-socketname (session)org-babel-screen-session-socketname87,3553
(defun org-babel-screen-session-write-temp-file (session body)org-babel-screen-session-write-temp-file108,4163
(defun org-babel-screen-test ()org-babel-screen-test119,4527

/home/malk/.emacs.d/elpa/org-20130128/ob-emacs-lisp.el,280
(defvar org-babel-default-header-args:emacs-lisporg-babel-default-header-args:emacs-lisp32,1056
(defun org-babel-expand-body:emacs-lisp (body params)org-babel-expand-body:emacs-lisp38,1279
(defun org-babel-execute:emacs-lisp (body params)org-babel-execute:emacs-lisp55,1910

/home/malk/.emacs.d/elpa/org-20130128/ob-lilypond.el,3069
(defalias 'lilypond-mode 'LilyPond-mode)lilypond-mode38,1290
(defvar org-babel-default-header-args:lilypond '()org-babel-default-header-args:lilypond42,1396
(defvar ly-compile-post-tangle tly-compile-post-tangle47,1590
(defvar ly-display-pdf-post-tangle tly-display-pdf-post-tangle54,1881
(defvar ly-play-midi-post-tangle tly-play-midi-post-tangle60,2152
(defvar ly-OSX-ly-pathly-OSX-ly-path66,2418
(defvar ly-OSX-pdf-path "open")ly-OSX-pdf-path68,2505
(defvar ly-OSX-midi-path "open")ly-OSX-midi-path69,2537
(defvar ly-nix-ly-path "/usr/bin/lilypond")ly-nix-ly-path71,2571
(defvar ly-nix-pdf-path "evince")ly-nix-pdf-path72,2615
(defvar ly-nix-midi-path "timidity")ly-nix-midi-path73,2649
(defvar ly-w32-ly-path "lilypond")ly-w32-ly-path75,2687
(defvar ly-w32-pdf-path "")ly-w32-pdf-path76,2722
(defvar ly-w32-midi-path "")ly-w32-midi-path77,2750
(defvar ly-gen-png nilly-gen-png79,2780
(defvar ly-gen-svg nilly-gen-svg83,2887
(defvar ly-gen-html nilly-gen-html87,2994
(defvar ly-gen-pdf nilly-gen-pdf91,3096
(defvar ly-use-eps nilly-use-eps95,3195
(defvar ly-arrange-mode nilly-arrange-mode99,3301
(defun org-babel-expand-body:lilypond (body params)org-babel-expand-body:lilypond108,3596
(defun org-babel-execute:lilypond (body params)org-babel-execute:lilypond123,4044
(defun ly-tangle ()ly-tangle134,4492
(defun ly-process-basic (body params)ly-process-basic142,4766
(defun org-babel-prep-session:lilypond (session params)org-babel-prep-session:lilypond165,5411
(defun ly-execute-tangled-ly ()ly-execute-tangled-ly169,5607
(defun ly-compile-lilyfile (file-name &optional test)ly-compile-lilyfile195,6670
(defun ly-check-for-compile-error (file-name &optional test)ly-check-for-compile-error218,7655
(defun ly-process-compile-error (file-name)ly-process-compile-error232,8179
(defun ly-mark-error-line (file-name line)ly-mark-error-line240,8518
(defun ly-parse-line-num (&optional buffer)ly-parse-line-num257,9069
(defun ly-parse-error-line (file-name lineNo)ly-parse-error-line279,9704
(defun ly-attempt-to-open-pdf (file-name &optional test)ly-attempt-to-open-pdf293,10142
(defun ly-attempt-to-play-midi (file-name &optional test)ly-attempt-to-play-midi311,10803
(defun ly-determine-ly-path (&optional test)ly-determine-ly-path329,11508
(defun ly-determine-pdf-path (&optional test)ly-determine-pdf-path340,11900
(defun ly-determine-midi-path (&optional test)ly-determine-midi-path351,12297
(defun ly-toggle-midi-play ()ly-toggle-midi-play362,12704
(defun ly-toggle-pdf-display ()ly-toggle-pdf-display371,13050
(defun ly-toggle-png-generation ()ly-toggle-png-generation380,13408
(defun ly-toggle-html-generation ()ly-toggle-html-generation387,13673
(defun ly-toggle-pdf-generation ()ly-toggle-pdf-generation394,13932
(defun ly-toggle-arrange-mode ()ly-toggle-arrange-mode401,14185
(defun ly-switch-extension (file-name ext)ly-switch-extension409,14450
(defun ly-get-header-args (mode)ly-get-header-args414,14623
(defun ly-set-header-args (mode)ly-set-header-args428,15046

/home/malk/.emacs.d/elpa/org-20130128/ob-org.el,398
(defvar org-babel-default-header-args:orgorg-babel-default-header-args:org34,1156
(defvar org-babel-org-default-headerorg-babel-org-default-header38,1308
(defun org-babel-expand-body:org (body params)org-babel-expand-body:org42,1440
(defun org-babel-execute:org (body params)org-babel-execute:org49,1679
(defun org-babel-prep-session:org (session params)org-babel-prep-session:org62,2260

/home/malk/.emacs.d/elpa/org-20130128/org-jsinfo.el,541
(defgroup org-infojs nilorg-infojs47,1766
(defcustom org-export-html-use-infojs 'when-configuredorg-export-html-use-infojs52,1928
(defconst org-infojs-opts-tableorg-infojs-opts-table65,2522
(defvar org-infojs-options)org-infojs-options79,2960
(defcustom org-infojs-optionsorg-infojs-options85,3158
(defcustom org-infojs-templateorg-infojs-template106,3958
(defun org-infojs-handle-options (exp-plist)org-infojs-handle-options175,6493
(defun org-infojs-options-inbuffer-template ()org-infojs-options-inbuffer-template248,9308

/home/malk/.emacs.d/elpa/org-20130128/ob-sh.el,1298
(defvar org-babel-default-header-args:sh '())org-babel-default-header-args:sh42,1473
(defvar org-babel-sh-command "sh"org-babel-sh-command44,1520
(defcustom org-babel-sh-var-quote-fmtorg-babel-sh-var-quote-fmt48,1642
(defun org-babel-execute:sh (body params)org-babel-execute:sh54,1837
(defun org-babel-prep-session:sh (session params)org-babel-prep-session:sh71,2628
(defun org-babel-load-session:sh (session body params)org-babel-load-session:sh81,3074
(defun org-babel-variable-assignments:sh (params)org-babel-variable-assignments:sh92,3431
(defun org-babel-sh-var-to-sh (var &optional sep)org-babel-sh-var-to-sh102,3780
(defun org-babel-sh-var-to-string (var &optional sep)org-babel-sh-var-to-string108,4044
(defun org-babel-sh-table-or-results (results)org-babel-sh-table-or-results118,4421
(defun org-babel-sh-initiate-session (&optional session params)org-babel-sh-initiate-session124,4677
(defvar org-babel-sh-eoe-indicator "echo 'org_babel_sh_eoe'"org-babel-sh-eoe-indicator131,4998
(defvar org-babel-sh-eoe-output "org_babel_sh_eoe"org-babel-sh-eoe-output133,5114
(defun org-babel-sh-evaluate (session body &optional params stdin)org-babel-sh-evaluate136,5221
(defun org-babel-sh-strip-weird-long-prompt (string)org-babel-sh-strip-weird-long-prompt206,7835

/home/malk/.emacs.d/elpa/org-20130128/org-autoloads.el,208
(defalias 'org-ido-switchb 'org-switchb)org-ido-switchb198,7173
(defalias 'org-iswitchb 'org-switchb)org-iswitchb200,7215
(defvar org-odt-data-dir "/usr/share/emacs/etc/org" "\org-odt-data-dir629,23985

/home/malk/.emacs.d/elpa/org-20130128/ob-matlab.el,0

/home/malk/.emacs.d/elpa/org-20130128/ob-dot.el,324
(defvar org-babel-default-header-args:dotorg-babel-default-header-args:dot44,1370
(defun org-babel-expand-body:dot (body params)org-babel-expand-body:dot48,1527
(defun org-babel-execute:dot (body params)org-babel-execute:dot63,1970
(defun org-babel-prep-session:dot (session params)org-babel-prep-session:dot82,2779

/home/malk/.emacs.d/elpa/org-20130128/ob-C.el,1175
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts41,1245
(defvar org-babel-default-header-args:C '())org-babel-default-header-args:C44,1341
(defvar org-babel-C-compiler "gcc"org-babel-C-compiler46,1387
(defvar org-babel-C++-compiler "g++"org-babel-C++-compiler50,1495
(defvar org-babel-c-variant nilorg-babel-c-variant54,1607
(defun org-babel-execute:cpp (body params)org-babel-execute:cpp58,1738
(defun org-babel-execute:C++ (body params)org-babel-execute:C++63,1905
(defun org-babel-expand-body:C++ (body params)org-babel-expand-body:C++68,2128
(defun org-babel-execute:C (body params)org-babel-execute:C73,2358
(defun org-babel-expand-body:c (body params)org-babel-expand-body:c78,2575
(defun org-babel-C-execute (body params)org-babel-C-execute83,2799
(defun org-babel-C-expand (body params)org-babel-C-expand122,4370
(defun org-babel-C-ensure-main-wrap (body)org-babel-C-ensure-main-wrap149,5355
(defun org-babel-prep-session:C (session params)org-babel-prep-session:C155,5593
(defun org-babel-load-session:C (session body params)org-babel-load-session:C160,5797
(defun org-babel-C-var-to-C (pair)org-babel-C-var-to-C167,6027

/home/malk/.emacs.d/elpa/org-20130128/org-clock.el,11472
(defvar org-time-stamp-formats)org-time-stamp-formats39,1461
(defvar org-ts-what)org-ts-what40,1493
(defvar org-frame-title-format-backup frame-title-format)org-frame-title-format-backup41,1514
(defgroup org-clock nilorg-clock43,1573
(defcustom org-clock-into-drawer org-log-into-drawerorg-clock-into-drawer48,1699
(defun org-clock-into-drawer ()org-clock-into-drawer68,2499
(defcustom org-clock-out-when-done torg-clock-out-when-done84,3220
(defcustom org-clock-out-remove-zero-time-clocks nilorg-clock-out-remove-zero-time-clocks98,3761
(defcustom org-clock-in-switch-to-state nilorg-clock-in-switch-to-state103,3926
(defcustom org-clock-out-switch-to-state nilorg-clock-out-switch-to-state116,4380
(defcustom org-clock-history-length 5org-clock-history-length129,4836
(defcustom org-clock-goto-may-find-recent-task torg-clock-goto-may-find-recent-task134,4963
(defcustom org-clock-heading-function nilorg-clock-heading-function139,5128
(defcustom org-clock-string-limit 0org-clock-string-limit146,5415
(defcustom org-clock-in-resume nilorg-clock-in-resume151,5563
(defcustom org-clock-persist nilorg-clock-persist158,5821
(defcustom org-clock-persist-file (convert-standard-filenameorg-clock-persist-file179,6636
(defcustom org-clock-persist-query-save nilorg-clock-persist-query-save185,6806
(defcustom org-clock-persist-query-resume torg-clock-persist-query-resume190,6952
(defcustom org-clock-sound nilorg-clock-sound195,7103
(define-obsolete-variable-alias 'org-clock-modeline-totalorg-clock-modeline-total208,7462
(defcustom org-clock-mode-line-total 'autoorg-clock-mode-line-total211,7558
(defvaralias 'org-task-overrun-text 'org-clock-task-overrun-text)org-task-overrun-text229,8305
(defcustom org-clock-task-overrun-text nilorg-clock-task-overrun-text230,8371
(defcustom org-show-notification-handler nilorg-show-notification-handler242,8879
(defgroup org-clocktable nilorg-clocktable251,9153
(defcustom org-clocktable-defaultsorg-clocktable-defaults256,9281
(defcustom org-clock-clocktable-formatter 'org-clocktable-write-defaultorg-clock-clocktable-formatter282,9736
(defcustom org-clock-clocktable-language-setuporg-clock-clocktable-language-setup290,10039
(defcustom org-clock-clocktable-default-properties '(:maxlevel 2 :scope file)org-clock-clocktable-default-properties300,10685
(defcustom org-clock-idle-time nilorg-clock-idle-time307,10938
(defcustom org-clock-auto-clock-resolution 'when-no-clock-is-runningorg-clock-auto-clock-resolution314,11156
(defcustom org-clock-report-include-clocking-task nilorg-clock-report-include-clocking-task322,11456
(defcustom org-clock-resolve-expert nilorg-clock-resolve-expert328,11642
(defcustom org-clock-continuously nilorg-clock-continuously334,11812
(defcustom org-clock-total-time-cell-format "*%s*"org-clock-total-time-cell-format340,11981
(defcustom org-clock-file-time-cell-format "*%s*"org-clock-file-time-cell-format346,12133
(defcustom org-clock-clocked-in-display 'mode-lineorg-clock-clocked-in-display352,12283
(defcustom org-clock-frame-title-format '(t org-mode-line-string)org-clock-frame-title-format368,12850
(defvar org-clock-in-prepare-hook nilorg-clock-in-prepare-hook381,13322
(defvar org-clock-in-hook nilorg-clock-in-hook386,13543
(defvar org-clock-out-hook nilorg-clock-out-hook388,13612
(defvar org-clock-cancel-hook nilorg-clock-cancel-hook391,13691
(defvar org-clock-goto-hook nilorg-clock-goto-hook393,13774
(defvar org-clock-has-been-used nilorg-clock-has-been-used395,13867
(defvar org-mode-line-string "")org-mode-line-string400,14007
(defvar org-clock-mode-line-timer nil)org-clock-mode-line-timer403,14093
(defvar org-clock-idle-timer nil)org-clock-idle-timer404,14132
(defvar org-clock-heading) ; defined in org.elorg-clock-heading405,14166
(defvar org-clock-heading-for-remember "")org-clock-heading-for-remember406,14213
(defvar org-clock-start-time "")org-clock-start-time407,14256
(defvar org-clock-leftover-time nilorg-clock-leftover-time409,14290
(defvar org-clock-effort ""org-clock-effort412,14404
(defvar org-clock-total-time nilorg-clock-total-time415,14486
(defvar org-clock-history nilorg-clock-history419,14650
(defvar org-clock-default-task (make-marker)org-clock-default-task422,14735
(defvar org-clock-interrupted-task (make-marker)org-clock-interrupted-task427,14931
(defvar org-clock-mode-line-map (make-sparse-keymap))org-clock-mode-line-map430,15062
(define-key org-clock-mode-line-map [mode-line mouse-2] 'org-clock-goto)org-clock-mode-line-map431,15116
(define-key org-clock-mode-line-map [mode-line mouse-1] 'org-clock-menu)org-clock-mode-line-map432,15189
(defun org-clock-menu ()org-clock-menu434,15263
(defun org-clock-history-push (&optional pos buffer)org-clock-history-push443,15582
(defun org-clock-save-markers-for-cut-and-paste (beg end)org-clock-save-markers-for-cut-and-paste463,16313
(defun org-clocking-buffer ()org-clocking-buffer472,16741
(defun org-clocking-p ()org-clocking-p476,16883
(defvar org-clock-before-select-task-hook nilorg-clock-before-select-task-hook480,16987
(defun org-clock-select-task (&optional prompt)org-clock-select-task483,17101
(defun org-clock-insert-selection-line (i marker)org-clock-insert-selection-line525,18728
(defvar org-clock-task-overrun nilorg-clock-task-overrun553,19647
(defvar org-clock-update-period 60org-clock-update-period555,19755
(defun org-clock-get-clock-string ()org-clock-get-clock-string558,19854
(defun org-clock-update-mode-line ()org-clock-update-mode-line587,21086
(defun org-clock-get-clocked-time ()org-clock-get-clocked-time610,22077
(defun org-clock-modify-effort-estimate (&optional value)org-clock-modify-effort-estimate619,22432
(defvar org-clock-notification-was-shown nilorg-clock-notification-was-shown655,23846
(defun org-clock-notify-once-if-expired ()org-clock-notify-once-if-expired658,23942
(defun org-notify (notification &optional play-sound)org-notify675,24657
(defun org-show-notification (notification)org-show-notification680,24839
(defun org-clock-play-sound ()org-clock-play-sound703,25706
(defvar org-clock-mode-line-entry nilorg-clock-mode-line-entry719,26221
(defun org-find-open-clocks (file)org-find-open-clocks722,26320
(defsubst org-is-active-clock (clock)org-is-active-clock735,26753
(defmacro org-with-clock-position (clock &rest forms)org-with-clock-position740,26916
(def-edebug-spec org-with-clock-position (form body))org-with-clock-position749,27201
(defmacro org-with-clock (clock &rest forms)org-with-clock752,27311
(def-edebug-spec org-with-clock (form body))org-with-clock765,27794
(defsubst org-clock-clock-in (clock &optional resume start-time)org-clock-clock-in768,27886
(defsubst org-clock-clock-out (clock &optional fail-quietly at-time)org-clock-clock-out775,28188
(defsubst org-clock-clock-cancel (clock)org-clock-clock-cancel785,28563
(defvar org-clock-clocking-in nil)org-clock-clocking-in795,28860
(defvar org-clock-resolving-clocks nil)org-clock-resolving-clocks796,28895
(defvar org-clock-resolving-clocks-due-to-idleness nil)org-clock-resolving-clocks-due-to-idleness797,28935
(defun org-clock-resolve-clock (clock resolve-to clock-out-timeorg-clock-resolve-clock799,28992
(defun org-clock-jump-to-current-clock (&optional effective-clock)org-clock-jump-to-current-clock833,30168
(defun org-clock-resolve (clock &optional prompt-fn last-valid fail-quietly)org-clock-resolve861,31086
(defun org-resolve-clocks (&optional only-dangling-p prompt-fn last-valid)org-resolve-clocks973,35264
(defun org-emacs-idle-seconds ()org-emacs-idle-seconds999,36146
(defun org-mac-idle-seconds ()org-mac-idle-seconds1006,36349
(defvar org-x11idle-exists-porg-x11idle-exists-p1010,36574
(defun org-x11-idle-seconds ()org-x11-idle-seconds1017,36867
(defun org-user-idle-seconds ()org-user-idle-seconds1021,37015
(defvar org-clock-user-idle-seconds)org-clock-user-idle-seconds1032,37339
(defun org-resolve-clocks-if-idle ()org-resolve-clocks-if-idle1034,37377
(defvar org-clock-current-task nilorg-clock-current-task1059,38299
(defun org-clock-set-current ()org-clock-set-current1061,38366
(defun org-clock-delete-current ()org-clock-delete-current1065,38532
(defvar org-clock-out-time nil) ; store the time of the last clock-outorg-clock-out-time1069,38648
(defun org-clock-in (&optional select start-time)org-clock-in1072,38735
(defun org-clock-in-last (&optional arg)org-clock-in-last1277,46777
(defun org-clock-mark-default-task ()org-clock-mark-default-task1311,48205
(defvar msg-extra)msg-extra1318,48396
(defun org-clock-get-sum-start ()org-clock-get-sum-start1319,48415
(defun org-clock-find-position (find-unclosed)org-clock-find-position1354,49692
(defun org-clock-out (&optional switch-to-state fail-quietly at-time)org-clock-out1443,52657
(defun org-clock-remove-empty-clock-drawer nilorg-clock-remove-empty-clock-drawer1533,56283
(defun org-at-clock-log-p nilorg-at-clock-log-p1548,56828
(defun org-clock-timestamps-up nilorg-clock-timestamps-up1554,56984
(defun org-clock-timestamps-down nilorg-clock-timestamps-down1559,57114
(defun org-clock-timestamps-change (updown)org-clock-timestamps-change1564,57248
(defun org-clock-cancel ()org-clock-cancel1603,58686
(defun org-clock-goto (&optional select)org-clock-goto1630,59760
(defvar org-clock-file-total-minutes nilorg-clock-file-total-minutes1658,60759
(defun org-clock-sum-today (&optional headline-filter)org-clock-sum-today1662,60936
(defun org-clock-sum (&optional tstart tend headline-filter propname)org-clock-sum1669,61195
(defun org-clock-sum-current-item (&optional tstart)org-clock-sum-current-item1759,65004
(defun org-clock-display (&optional total-only)org-clock-display1768,65261
(defvar org-clock-overlays nil)org-clock-overlays1801,66561
(defun org-clock-put-overlay (time &optional level)org-clock-put-overlay1804,66643
(defun org-clock-remove-overlays (&optional beg end noremove)org-clock-remove-overlays1838,67980
(defvar org-state) ;; dynamically scoped into this functionorg-state1850,68461
(defun org-clock-out-if-current ()org-clock-out-if-current1851,68521
(defun org-clock-get-clocktable (&rest props)org-clock-get-clocktable1878,69567
(defun org-clock-report (&optional arg)org-clock-report1899,70290
(defun org-day-of-week (day month year)org-day-of-week1923,71195
(defun org-quarter-to-date (quarter year)org-quarter-to-date1930,71381
(defun org-clock-special-range (key &optional time as-strings)org-clock-special-range1979,72547
(defun org-count-quarter (n)org-count-quarter2096,77883
(defun org-clocktable-shift (dir n)org-clocktable-shift2103,77999
(defun org-dblock-write:clocktable (params)org-dblock-write:clocktable2186,81312
(defun org-clocktable-write-default (ipos tables params)org-clocktable-write-default2273,84492
(defun org-clocktable-indent-string (level)org-clocktable-indent-string2504,93715
(defun org-clocktable-steps (params)org-clocktable-steps2513,93918
(defun org-clock-get-table-data (file params)org-clock-get-table-data2567,95985
(defun org-clock-time% (total &rest strings)org-clock-time%2667,100097
(defvar org-clock-loaded nilorg-clock-loaded2693,100979
(defun org-clock-update-time-maybe ()org-clock-update-time-maybe2696,101041
(defun org-clock-save ()org-clock-save2738,102332
(defun org-clock-load ()org-clock-load2787,104042

/home/malk/.emacs.d/elpa/org-20130128/ob-python.el,2047
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts41,1363
(defvar org-babel-default-header-args:python '())org-babel-default-header-args:python44,1461
(defvar org-babel-python-command "python"org-babel-python-command46,1512
(defvar org-babel-python-mode (if (featurep 'xemacs) 'python-mode 'python)org-babel-python-mode49,1607
(defvar org-src-preserve-indentation)org-src-preserve-indentation53,1806
(defun org-babel-execute:python (body params)org-babel-execute:python55,1845
(defun org-babel-prep-session:python (session params)org-babel-prep-session:python78,2887
(defun org-babel-load-session:python (session body params)org-babel-load-session:python90,3391
(defun org-babel-variable-assignments:python (params)org-babel-variable-assignments:python101,3756
(defun org-babel-python-var-to-python (var)org-babel-python-var-to-python110,4056
(defun org-babel-python-table-or-string (results)org-babel-python-table-or-string122,4493
(defvar org-babel-python-buffers '((:default . nil)))org-babel-python-buffers128,4762
(defun org-babel-python-session-buffer (session)org-babel-python-session-buffer130,4817
(defvar py-default-interpreter)py-default-interpreter134,4964
(defun org-babel-python-initiate-session-by-key (&optional session)org-babel-python-initiate-session-by-key135,4996
(defun org-babel-python-initiate-session (&optional session params)org-babel-python-initiate-session171,6539
(defvar org-babel-python-eoe-indicator "'org_babel_python_eoe'"org-babel-python-eoe-indicator177,6795
(defvar org-babel-python-wrapper-methodorg-babel-python-wrapper-method179,6916
(defvar org-babel-python-pp-wrapper-methodorg-babel-python-pp-wrapper-method185,7015
(defun org-babel-python-evaluateorg-babel-python-evaluate193,7143
(defun org-babel-python-evaluate-external-processorg-babel-python-evaluate-external-process202,7471
(defun org-babel-python-evaluate-sessionorg-babel-python-evaluate-session237,8740
(defun org-babel-python-read-string (string)org-babel-python-read-string292,10800

/home/malk/.emacs.d/elpa/org-20130128/ob-mscgen.el,261
(defvar org-babel-default-header-args:mscgenorg-babel-default-header-args:mscgen60,1864
(defun org-babel-execute:mscgen (body params)org-babel-execute:mscgen64,2027
(defun org-babel-prep-session:mscgen (session params)org-babel-prep-session:mscgen77,2672

/home/malk/.emacs.d/elpa/org-20130128/ob-ocaml.el,1031
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts46,1517
(defvar org-babel-default-header-args:ocaml '())org-babel-default-header-args:ocaml49,1614
(defvar org-babel-ocaml-eoe-indicator "\"org-babel-ocaml-eoe\";;")org-babel-ocaml-eoe-indicator51,1664
(defvar org-babel-ocaml-eoe-output "org-babel-ocaml-eoe")org-babel-ocaml-eoe-output52,1731
(defun org-babel-execute:ocaml (body params)org-babel-execute:ocaml54,1790
(defvar tuareg-interactive-buffer-name)tuareg-interactive-buffer-name83,2969
(defun org-babel-prep-session:ocaml (session params)org-babel-prep-session:ocaml84,3009
(defun org-babel-variable-assignments:ocaml (params)org-babel-variable-assignments:ocaml95,3626
(defun org-babel-ocaml-elisp-to-ocaml (val)org-babel-ocaml-elisp-to-ocaml102,3918
(defun org-babel-ocaml-parse-output (output)org-babel-ocaml-parse-output108,4142
(defun org-babel-ocaml-read-list (results)org-babel-ocaml-read-list124,4847
(defun org-babel-ocaml-read-array (results)org-babel-ocaml-read-array130,5134

/home/malk/.emacs.d/elpa/org-20130128/org-version.el,164
(defun org-release ()org-release5,83
(defun org-git-version ()org-git-version11,270
(defvar org-odt-data-dir "/usr/share/emacs/etc/org"org-odt-data-dir17,481

/home/malk/.emacs.d/elpa/org-20130128/org-special-blocks.el,573
(defvar org-special-blocks-ignore-regexp "^\\(LaTeX\\|HTML\\)$"org-special-blocks-ignore-regexp46,1712
(defvar org-export-current-backend) ; dynamically bound in org-exp.elorg-export-current-backend51,1934
(defun org-special-blocks-make-special-cookies ()org-special-blocks-make-special-cookies52,2004
(defun org-special-blocks-convert-latex-special-cookies ()org-special-blocks-convert-latex-special-cookies69,2743
(defvar org-line)org-line83,3259
(defun org-special-blocks-convert-html-special-cookies ()org-special-blocks-convert-html-special-cookies84,3277

/home/malk/.emacs.d/elpa/org-20130128/org-agenda.el,41659
(defvar calendar-mode-map)                    ; defined in calendar.elcalendar-mode-map88,4261
(defvar org-clock-current-task nil)           ; defined in org-clock.elorg-clock-current-task89,4332
(defvar org-mobile-force-id-on-agenda-items)  ; defined in org-mobile.elorg-mobile-force-id-on-agenda-items90,4404
(defvar org-habit-show-habits)                ; defined in org-habit.elorg-habit-show-habits91,4477
(defvar org-habit-show-habits-only-for-today)org-habit-show-habits-only-for-today92,4549
(defvar org-habit-show-all-today)org-habit-show-all-today93,4595
(defvar org-agenda-buffer-name "*Org Agenda*")org-agenda-buffer-name96,4693
(defvar org-agenda-overriding-header nil)org-agenda-overriding-header97,4740
(defvar org-agenda-title-append nil)org-agenda-title-append98,4782
(defvar original-date) ; dynamically scoped, calendar.el does scope thisoriginal-date101,4949
(defvar org-agenda-undo-list nilorg-agenda-undo-list103,5023
(defvar org-agenda-pending-undo-list nilorg-agenda-pending-undo-list105,5123
(defcustom org-agenda-confirm-kill 1org-agenda-confirm-kill108,5242
(defcustom org-agenda-compact-blocks nilorg-agenda-compact-blocks118,5642
(defcustom org-agenda-block-separator ?=org-agenda-block-separator125,5886
(defgroup org-agenda-export nilorg-agenda-export137,6359
(defcustom org-agenda-with-colors torg-agenda-with-colors142,6500
(defcustom org-agenda-exporter-settings nilorg-agenda-exporter-settings147,6629
(defcustom org-agenda-before-write-hook '(org-agenda-add-entry-text)org-agenda-before-write-hook162,7171
(defcustom org-agenda-add-entry-text-maxlines 0org-agenda-add-entry-text-maxlines169,7468
(defcustom org-agenda-add-entry-text-descriptive-links torg-agenda-add-entry-text-descriptive-links183,8104
(defcustom org-agenda-export-html-style nilorg-agenda-export-html-style191,8447
(defcustom org-agenda-persistent-filter nilorg-agenda-persistent-filter232,9778
(defgroup org-agenda-custom-commands nilorg-agenda-custom-commands237,9923
(defconst org-sorting-choiceorg-sorting-choice242,10072
(defconst org-agenda-custom-commands-local-optionsorg-agenda-custom-commands-local-options261,10832
(defcustom org-agenda-custom-commands '(("n" "Agenda and all TODO's"org-agenda-custom-commands374,14827
(defcustom org-agenda-query-register ?oorg-agenda-query-register510,20930
(defcustom org-stuck-projectsorg-stuck-projects517,21202
(defcustom org-agenda-filter-effort-default-operator "<"org-agenda-filter-effort-default-operator552,23139
(defgroup org-agenda-skip nilorg-agenda-skip561,23506
(defcustom org-agenda-skip-function-global nilorg-agenda-skip-function-global566,23639
(defgroup org-agenda-daily/weekly nilorg-agenda-daily/weekly582,24411
(defgroup org-agenda-todo-list nilorg-agenda-todo-list586,24552
(defgroup org-agenda-match-view nilorg-agenda-match-view590,24696
(defgroup org-agenda-search-view nilorg-agenda-search-view594,24858
(defvar org-agenda-archives-mode nilorg-agenda-archives-mode599,25022
(defcustom org-agenda-skip-comment-trees torg-agenda-skip-comment-trees606,25359
(defcustom org-agenda-todo-list-sublevels torg-agenda-todo-list-sublevels612,25572
(defcustom org-agenda-todo-ignore-with-date nilorg-agenda-todo-ignore-with-date620,25876
(defcustom org-agenda-todo-ignore-timestamp nilorg-agenda-todo-ignore-timestamp632,26439
(defcustom org-agenda-todo-ignore-scheduled nilorg-agenda-todo-ignore-scheduled669,28090
(defcustom org-agenda-todo-ignore-deadlines nilorg-agenda-todo-ignore-deadlines702,29458
(defcustom org-agenda-tags-todo-honor-ignore-options nilorg-agenda-tags-todo-honor-ignore-options743,31205
(defcustom org-agenda-skip-scheduled-if-done nilorg-agenda-skip-scheduled-if-done759,31866
(defcustom org-agenda-skip-scheduled-if-deadline-is-shown nilorg-agenda-skip-scheduled-if-deadline-is-shown769,32295
(defcustom org-agenda-skip-timestamp-if-deadline-is-shown nilorg-agenda-skip-timestamp-if-deadline-is-shown786,33094
(defcustom org-agenda-skip-deadline-if-done nilorg-agenda-skip-deadline-if-done801,33718
(defcustom org-agenda-skip-deadline-prewarning-if-scheduled nilorg-agenda-skip-deadline-prewarning-if-scheduled811,34197
(defcustom org-agenda-skip-additional-timestamps-same-entry nilorg-agenda-skip-additional-timestamps-same-entry830,35139
(defcustom org-agenda-skip-timestamp-if-done nilorg-agenda-skip-timestamp-if-done837,35448
(defcustom org-agenda-dim-blocked-tasks nilorg-agenda-dim-blocked-tasks843,35650
(defcustom org-timeline-show-empty-dates 3org-timeline-show-empty-dates866,36723
(defgroup org-agenda-startup nilorg-agenda-startup878,37228
(defcustom org-agenda-menu-show-matcher torg-agenda-menu-show-matcher883,37379
(define-obsolete-variable-alias 'org-agenda-menu-two-column 'org-agenda-menu-two-columns "24.3")org-agenda-menu-two-column893,37826
(defcustom org-agenda-menu-two-columns nilorg-agenda-menu-two-columns895,37924
(define-obsolete-variable-alias 'org-finalize-agenda-hook 'org-agenda-finalize-hook "24.3")org-finalize-agenda-hook903,38184
(defcustom org-agenda-finalize-hook nilorg-agenda-finalize-hook904,38276
(defcustom org-agenda-mouse-1-follows-link nilorg-agenda-mouse-1-follows-link914,38651
(defcustom org-agenda-start-with-follow-mode nilorg-agenda-start-with-follow-mode921,38928
(defcustom org-agenda-follow-indirect nilorg-agenda-follow-indirect926,39096
(defcustom org-agenda-show-outline-path torg-agenda-show-outline-path933,39301
(defcustom org-agenda-start-with-entry-text-mode nilorg-agenda-start-with-entry-text-mode938,39459
(defcustom org-agenda-entry-text-maxlines 5org-agenda-entry-text-maxlines943,39635
(defcustom org-agenda-entry-text-exclude-regexps nilorg-agenda-entry-text-exclude-regexps952,39956
(defvar org-agenda-entry-text-cleanup-hook nilorg-agenda-entry-text-cleanup-hook959,40242
(defvar org-agenda-include-inactive-timestamps nilorg-agenda-include-inactive-timestamps967,40680
(defgroup org-agenda-windows nilorg-agenda-windows971,40824
(defcustom org-agenda-window-setup 'reorganize-frameorg-agenda-window-setup976,40975
(defcustom org-agenda-window-frame-fractions '(0.5 . 0.75)org-agenda-window-frame-fractions994,41732
(defcustom org-agenda-restore-windows-after-quit nilorg-agenda-restore-windows-after-quit1001,42108
(defcustom org-agenda-ndays nilorg-agenda-ndays1011,42563
(defcustom org-agenda-span 'weekorg-agenda-span1020,42818
(defcustom org-agenda-start-on-weekday 1org-agenda-start-on-weekday1031,43208
(defcustom org-agenda-show-all-dates torg-agenda-show-all-dates1040,43575
(defcustom org-agenda-format-date 'org-agenda-format-date-alignedorg-agenda-format-date1046,43800
(defun org-agenda-format-date-aligned (date)org-agenda-format-date-aligned1057,44307
(defcustom org-agenda-time-leading-zero nilorg-agenda-time-leading-zero1080,45095
(defcustom org-agenda-timegrid-use-ampm nilorg-agenda-timegrid-use-ampm1087,45333
(defun org-agenda-time-of-day-to-ampm (time)org-agenda-time-of-day-to-ampm1093,45494
(defun org-agenda-time-of-day-to-ampm-maybe (time)org-agenda-time-of-day-to-ampm-maybe1110,46053
(defcustom org-agenda-weekend-days '(6 0)org-agenda-weekend-days1117,46282
(defcustom org-agenda-move-date-from-past-immediately-to-today torg-agenda-move-date-from-past-immediately-to-today1131,46732
(defcustom org-agenda-include-diary nilorg-agenda-include-diary1141,47165
(defcustom org-agenda-include-deadlines torg-agenda-include-deadlines1147,47399
(defcustom org-agenda-repeating-timestamp-show-all torg-agenda-repeating-timestamp-show-all1154,47644
(defcustom org-scheduled-past-days 10000org-scheduled-past-days1166,48200
(defcustom org-agenda-log-mode-items '(closed clock)org-agenda-log-mode-items1174,48525
(defcustom org-agenda-clock-consistency-checksorg-agenda-clock-consistency-checks1186,49094
(defcustom org-agenda-log-mode-add-notes torg-agenda-log-mode-add-notes1230,51147
(defcustom org-agenda-start-with-log-mode nilorg-agenda-start-with-log-mode1238,51474
(defcustom org-agenda-start-with-clockreport-mode nilorg-agenda-start-with-clockreport-mode1252,52165
(defcustom org-agenda-clockreport-parameter-plist '(:link t :maxlevel 2)org-agenda-clockreport-parameter-plist1258,52377
(defcustom org-agenda-search-view-always-boolean nilorg-agenda-search-view-always-boolean1269,52942
(defcustom org-agenda-search-view-force-full-words nilorg-agenda-search-view-force-full-words1301,54332
(defgroup org-agenda-time-grid nilorg-agenda-time-grid1308,54570
(defcustom org-agenda-search-headline-for-time torg-agenda-search-headline-for-time1313,54719
(defcustom org-agenda-use-time-grid torg-agenda-use-time-grid1324,55241
(defcustom org-agenda-time-gridorg-agenda-time-grid1334,55684
(defcustom org-agenda-show-current-time-in-grid torg-agenda-show-current-time-in-grid1366,56933
(defcustom org-agenda-current-time-stringorg-agenda-current-time-string1372,57109
(defgroup org-agenda-sorting nilorg-agenda-sorting1379,57334
(defcustom org-agenda-sorting-strategyorg-agenda-sorting-strategy1384,57473
(defcustom org-agenda-cmp-user-defined nilorg-agenda-cmp-user-defined1446,60632
(defcustom org-sort-agenda-notime-is-late torg-sort-agenda-notime-is-late1456,61057
(defcustom org-sort-agenda-noeffort-is-high torg-sort-agenda-noeffort-is-high1466,61531
(defgroup org-agenda-line-format nilorg-agenda-line-format1475,61924
(defcustom org-agenda-prefix-formatorg-agenda-prefix-format1480,62088
(defvar org-prefix-format-compiled nilorg-prefix-format-compiled1545,65092
(defcustom org-agenda-todo-keyword-format "%-1s"org-agenda-todo-keyword-format1551,65357
(defcustom org-agenda-diary-sexp-prefix nilorg-agenda-diary-sexp-prefix1558,65620
(defcustom org-agenda-timerange-leaders '("" "(%d/%d): ")org-agenda-timerange-leaders1568,65991
(defcustom org-agenda-scheduled-leaders '("Scheduled: " "Sched.%2dx: ")org-agenda-scheduled-leaders1582,66590
(defcustom org-agenda-inactive-leader "["org-agenda-inactive-leader1595,67268
(defcustom org-agenda-deadline-leaders '("Deadline:  " "In %3d d.: ")org-agenda-deadline-leaders1604,67590
(defcustom org-agenda-remove-times-when-in-prefix torg-agenda-remove-times-when-in-prefix1617,68123
(defcustom org-agenda-remove-timeranges-from-blocks nilorg-agenda-remove-timeranges-from-blocks1634,68960
(defcustom org-agenda-default-appointment-duration nilorg-agenda-default-appointment-duration1641,69181
(defcustom org-agenda-show-inherited-tags torg-agenda-show-inherited-tags1650,69547
(defcustom org-agenda-use-tag-inheritance '(todo search timeline agenda)org-agenda-use-tag-inheritance1675,70489
(defcustom org-agenda-hide-tags-regexp nilorg-agenda-hide-tags-regexp1699,71460
(defcustom org-agenda-remove-tags nilorg-agenda-remove-tags1709,71861
(defcustom org-agenda-tags-column (if (featurep 'xemacs) -79 -80)org-agenda-tags-column1723,72361
(defcustom org-agenda-fontify-priorities 'cookiesorg-agenda-fontify-priorities1734,72826
(defcustom org-agenda-day-face-function nilorg-agenda-day-face-function1758,73912
(defcustom org-agenda-category-icon-alist nilorg-agenda-category-icon-alist1767,74258
(defgroup org-agenda-column-view nilorg-agenda-column-view1806,75554
(defcustom org-agenda-columns-show-summaries torg-agenda-columns-show-summaries1811,75696
(defcustom org-agenda-columns-compute-summary-properties torg-agenda-columns-compute-summary-properties1816,75870
(defcustom org-agenda-columns-add-appointments-to-effort-sum nilorg-agenda-columns-add-appointments-to-effort-sum1827,76395
(defcustom org-agenda-auto-exclude-function nilorg-agenda-auto-exclude-function1837,76894
(defcustom org-agenda-bulk-custom-functions nilorg-agenda-bulk-custom-functions1849,77470
(defmacro org-agenda-with-point-at-orig-entry (string &rest body)org-agenda-with-point-at-orig-entry1863,77919
(def-edebug-spec org-agenda-with-point-at-orig-entry (form body))org-agenda-with-point-at-orig-entry1875,78470
(defun org-add-agenda-custom-command (entry)org-add-agenda-custom-command1877,78537
(defvar org-agenda-mode-map (make-sparse-keymap)org-agenda-mode-map1888,78973
(defvar org-agenda-menu) ; defined later in this file.org-agenda-menu1893,79144
(defvar org-agenda-restrict nil) ; defined later in this file.org-agenda-restrict1894,79199
(defvar org-agenda-follow-mode nil)org-agenda-follow-mode1895,79262
(defvar org-agenda-entry-text-mode nil)org-agenda-entry-text-mode1896,79298
(defvar org-agenda-clockreport-mode nil)org-agenda-clockreport-mode1897,79338
(defvar org-agenda-show-log nil)org-agenda-show-log1898,79379
(defvar org-agenda-redo-command nil)org-agenda-redo-command1899,79412
(defvar org-agenda-query-string nil)org-agenda-query-string1900,79449
(defvar org-agenda-mode-hook nilorg-agenda-mode-hook1901,79486
(defvar org-agenda-type nil)org-agenda-type1904,79626
(defvar org-agenda-force-single-file nil)org-agenda-force-single-file1905,79655
(defvar org-agenda-bulk-marked-entries nilorg-agenda-bulk-marked-entries1906,79697
(defcustom org-agenda-sticky nilorg-agenda-sticky1911,79843
(defun org-toggle-sticky-agenda (&optional arg)org-toggle-sticky-agenda1921,80137
(defvar org-agenda-buffer nilorg-agenda-buffer1942,80871
(defvar org-agenda-last-prefix-arg nil)org-agenda-last-prefix-arg1945,80948
(defvar org-agenda-this-buffer-name nil)org-agenda-this-buffer-name1946,80988
(defvar org-agenda-doing-sticky-redo nil)org-agenda-doing-sticky-redo1947,81029
(defvar org-agenda-this-buffer-is-sticky nil)org-agenda-this-buffer-is-sticky1948,81071
(defconst org-agenda-local-varsorg-agenda-local-vars1950,81118
(defun org-agenda-mode ()org-agenda-mode1979,82013
(define-key org-agenda-mode-map "?" 'org-agenda-show-the-flagging-note)org-agenda-mode-map2177,92744
(defvar org-agenda-allow-remote-undo torg-agenda-allow-remote-undo2334,100222
(defvar org-agenda-undo-has-started-in nilorg-agenda-undo-has-started-in2336,100322
(defun org-agenda-undo ()org-agenda-undo2339,100445
(defun org-verify-change-for-undo (l1 l2)org-verify-change-for-undo2373,101756
(defvar org-agenda-restrict-begin (make-marker))org-agenda-restrict-begin2381,102023
(defvar org-agenda-restrict-end (make-marker))org-agenda-restrict-end2382,102072
(defvar org-agenda-last-dispatch-buffer nil)org-agenda-last-dispatch-buffer2383,102119
(defvar org-agenda-overriding-restriction nil)org-agenda-overriding-restriction2384,102164
(defcustom org-agenda-custom-commands-contexts nilorg-agenda-custom-commands-contexts2386,102212
(defvar org-keys nil)org-keys2431,103781
(defvar org-match nil)org-match2432,103803
(defun org-agenda (&optional arg org-keys restriction)org-agenda2434,103841
(defun org-agenda-append-agenda ()org-agenda-append-agenda2655,113637
(defun org-agenda-normalize-custom-commands (cmds)org-agenda-normalize-custom-commands2668,114086
(defun org-agenda-get-restriction-and-command (prefix-descriptions)org-agenda-get-restriction-and-command2678,114341
(defun org-agenda-fit-window-to-buffer ()org-agenda-fit-window-to-buffer2868,120888
(defvar org-cmd nil)org-cmd2877,121244
(defvar org-agenda-overriding-cmd nil)org-agenda-overriding-cmd2878,121265
(defvar org-agenda-overriding-arguments nil)org-agenda-overriding-arguments2879,121304
(defvar org-agenda-overriding-cmd-arguments nil)org-agenda-overriding-cmd-arguments2880,121349
(defun org-agenda-run-series (name series)org-agenda-run-series2881,121398
(defmacro org-batch-agenda (cmd-key &rest parameters)org-batch-agenda2936,123306
(def-edebug-spec org-batch-agenda (form &rest sexp))org-batch-agenda2959,124382
(defvar org-agenda-info nil)org-agenda-info2961,124436
(defmacro org-batch-agenda-csv (cmd-key &rest parameters)org-batch-agenda-csv2964,124481
(def-edebug-spec org-batch-agenda-csv (form &rest sexp))org-batch-agenda-csv3054,128716
(defun org-fix-agenda-info (props)org-fix-agenda-info3056,128774
(defun org-agenda-export-csv-mapper (prop)org-agenda-export-csv-mapper3087,130189
(defun org-store-agenda-views (&rest parameters)org-store-agenda-views3099,130495
(defmacro org-batch-store-agenda-views (&rest parameters)org-batch-store-agenda-views3109,130707
(def-edebug-spec org-batch-store-agenda-views (&rest sexp))org-batch-store-agenda-views3147,132146
(defvar org-agenda-current-span nilorg-agenda-current-span3149,132207
(defun org-agenda-mark-header-line (pos)org-agenda-mark-header-line3151,132328
(defvar org-mobile-creating-agendas) ; defined in org-mobile.elorg-mobile-creating-agendas3161,132705
(defvar org-agenda-write-buffer-name "Agenda View")org-agenda-write-buffer-name3162,132769
(defun org-agenda-write (file &optional open nosettings agenda-bufname)org-agenda-write3163,132821
(defvar org-agenda-tag-filter-overlays nil)org-agenda-tag-filter-overlays3247,136325
(defvar org-agenda-cat-filter-overlays nil)org-agenda-cat-filter-overlays3248,136369
(defun org-agenda-mark-filtered-text ()org-agenda-mark-filtered-text3250,136414
(defun org-agenda-unmark-filtered-text ()org-agenda-unmark-filtered-text3262,136795
(defun org-agenda-remove-marked-text (property &optional value)org-agenda-remove-marked-text3267,136982
(defun org-agenda-add-entry-text ()org-agenda-add-entry-text3278,137357
(defun org-agenda-get-some-entry-text (marker n-lines &optional indentorg-agenda-get-some-entry-text3297,138116
(defun org-agenda-collect-markers ()org-agenda-collect-markers3384,141093
(defun org-create-marker-find-array (marker-list)org-create-marker-find-array3396,141450
(defvar org-agenda-marker-table nil) ; dynamically scoped parameterorg-agenda-marker-table3410,141954
(defun org-check-agenda-marker-table ()org-check-agenda-marker-table3411,142022
(defun org-check-for-org-mode ()org-check-for-org-mode3421,142358
(defvar org-agenda-multi nil)  ; dynamically scopedorg-agenda-multi3429,142608
(defvar org-agenda-pre-window-conf nil)org-agenda-pre-window-conf3430,142660
(defvar org-agenda-columns-active nil)org-agenda-columns-active3431,142700
(defvar org-agenda-name nil)org-agenda-name3432,142739
(defvar org-agenda-tag-filter nil)org-agenda-tag-filter3433,142768
(defvar org-agenda-category-filter nil)org-agenda-category-filter3434,142803
(defvar org-agenda-top-category-filter nil)org-agenda-top-category-filter3435,142843
(defvar org-agenda-tag-filter-while-redo nil)org-agenda-tag-filter-while-redo3436,142887
(defvar org-agenda-tag-filter-preset nilorg-agenda-tag-filter-preset3437,142933
(defvar org-agenda-category-filter-preset nilorg-agenda-category-filter-preset3447,143499
(defun org-agenda-use-sticky-p ()org-agenda-use-sticky-p3458,144080
(defun org-agenda-prepare-window (abuf)org-agenda-prepare-window3479,144823
(defun org-agenda-prepare (&optional name)org-agenda-prepare3503,145784
(defvar org-agenda-overriding-columns-format)  ; From org-colview.elorg-agenda-overriding-columns-format3556,147985
(defun org-agenda-finalize ()org-agenda-finalize3557,148054
(defun org-agenda-mark-clocking-task ()org-agenda-mark-clocking-task3624,150986
(defun org-agenda-fontify-priorities ()org-agenda-fontify-priorities3644,151754
(defun org-agenda-dim-blocked-tasks (&optional invisible)org-agenda-dim-blocked-tasks3678,152926
(defvar org-agenda-skip-function nilorg-agenda-skip-function3713,154269
(defun org-agenda-skip ()org-agenda-skip3726,155003
(defun org-agenda-skip-eval (form)org-agenda-skip-eval3745,155731
(defvar org-agenda-markers nilorg-agenda-markers3760,156178
(defvar org-agenda-last-marker-time (org-float-time)org-agenda-last-marker-time3762,156276
(defun org-agenda-new-marker (&optional pos)org-agenda-new-marker3765,156376
(defun org-agenda-reset-markers ()org-agenda-reset-markers3777,156782
(defun org-agenda-save-markers-for-cut-and-paste (beg end)org-agenda-save-markers-for-cut-and-paste3782,156938
(defun org-agenda-entry-text-show-here ()org-agenda-entry-text-show-here3793,157332
(defun org-agenda-entry-text-show ()org-agenda-entry-text-show3808,157958
(defun org-agenda-entry-text-hide ()org-agenda-entry-text-hide3819,158263
(defun org-agenda-get-day-face (date)org-agenda-get-day-face3828,158526
(defvar org-agenda-only-exact-dates nil) ; dynamically scopedorg-agenda-only-exact-dates3840,158934
(defun org-timeline (&optional dotodo)org-timeline3842,158997
(defun org-get-all-dates (beg end &optional no-ranges force-today inactive empty pre-re)org-get-all-dates3930,162399
(defvar org-agenda-start-day nil  ; dynamically scoped parameterorg-agenda-start-day3978,164263
(defvar org-starting-day nil) ; local variable in the agenda bufferorg-starting-day3981,164426
(defvar org-arg-loc nil) ; local variableorg-arg-loc3982,164494
(defvar org-agenda-entry-types '(:deadline :scheduled :timestamp :sexp)org-agenda-entry-types3984,164537
(defvar org-agenda-buffer-tmp-name nil)org-agenda-buffer-tmp-name4017,166076
(defun org-agenda-list (&optional arg start-day span)org-agenda-list4019,166131
(defun org-agenda-ndays-to-span (n)org-agenda-ndays-to-span4221,174051
(defun org-agenda-span-to-ndays (span &optional start-day)org-agenda-span-to-ndays4228,174223
(defun org-agenda-span-name (span)org-agenda-span-name4240,174689
(defvar org-agenda-search-history nil)org-agenda-search-history4250,174889
(defvar org-search-syntax-table nilorg-search-syntax-table4252,174929
(defvar org-mode-syntax-table) ; From org.elorg-mode-syntax-table4257,175154
(defun org-search-syntax-table ()org-search-syntax-table4258,175199
(defvar org-agenda-last-search-view-search-was-boolean nil)org-agenda-last-search-view-search-was-boolean4265,175487
(defun org-search-view (&optional todo-only string edit-at)org-search-view4268,175563
(defvar org-select-this-todo-keyword nil)org-select-this-todo-keyword4578,188568
(defvar org-last-arg nil)org-last-arg4579,188610
(defun org-todo-list (&optional arg)org-todo-list4582,188652
(defun org-tags-view (&optional todo-only match)org-tags-view4678,192424
(defvar org-agenda-skip-regexp nilorg-agenda-skip-regexp4768,195950
(defvar org-agenda-overriding-header nilorg-agenda-overriding-header4773,196189
(defun org-agenda-skip-entry-when-regexp-matches ()org-agenda-skip-entry-when-regexp-matches4778,196405
(defun org-agenda-skip-subtree-when-regexp-matches ()org-agenda-skip-subtree-when-regexp-matches4790,196938
(defun org-agenda-skip-entry-when-regexp-matches-in-subtree ()org-agenda-skip-entry-when-regexp-matches-in-subtree4801,197436
(defun org-agenda-skip-entry-if (&rest conditions)org-agenda-skip-entry-if4815,198142
(defun org-agenda-skip-subtree-if (&rest conditions)org-agenda-skip-subtree-if4820,198316
(defun org-agenda-skip-if (subtree conditions)org-agenda-skip-if4825,198490
(defun org-agenda-skip-if-todo (args end)org-agenda-skip-if-todo4899,201440
(defun org-agenda-list-stuck-projects (&rest ignore)org-agenda-list-stuck-projects4944,202895
(defvar org-disable-agenda-to-diary nil)          ;Dynamically-scoped param.org-disable-agenda-to-diary5004,205003
(defvar diary-list-entries-hook)diary-list-entries-hook5005,205080
(defvar diary-time-regexp)diary-time-regexp5006,205113
(defun org-get-entries-from-diary (date)org-get-entries-from-diary5007,205140
(defvar org-agenda-cleanup-fancy-diary-hook nilorg-agenda-cleanup-fancy-diary-hook5058,207098
(defun org-agenda-cleanup-fancy-diary ()org-agenda-cleanup-fancy-diary5061,207204
(defun org-modify-diary-entry-string (string)org-modify-diary-entry-string5096,208637
(defun org-diary-default-entry ()org-diary-default-entry5107,209034
(defun org-add-to-diary-list (&rest args)org-add-to-diary-list5117,209434
(defvar org-diary-last-run-time nil)org-diary-last-run-time5122,209588
(defun org-diary (&rest args)org-diary5125,209641
(defun org-agenda-get-day-entries (file date &rest args)org-agenda-get-day-entries5211,213047
(defvar org-heading-keyword-regexp-format) ; defined in org.elorg-heading-keyword-regexp-format5266,215227
(defun org-agenda-get-todos ()org-agenda-get-todos5267,215290
(defun org-agenda-todo-custom-ignore-p (time n)org-agenda-todo-custom-ignore-p5332,217804
(defun org-agenda-check-for-timestamp-as-reason-to-ignore-todo-itemorg-agenda-check-for-timestamp-as-reason-to-ignore-todo-item5342,218170
(defun org-agenda-get-timestamps (&optional deadline-results)org-agenda-get-timestamps5409,220975
(defun org-agenda-get-sexps ()org-agenda-get-sexps5523,225637
(defun org-anniversary (year month day &optional mark)org-anniversary5589,228167
(defun org-cyclic (N year month day &optional mark)org-cyclic5594,228430
(defun org-block (Y1 M1 D1 Y2 M2 D2 &optional mark)org-block5599,228682
(defun org-date (year month day &optional mark)org-date5604,228933
(defun org-class (y1 m1 d1 y2 m2 d2 dayname &rest skip-weeks)org-class5611,229211
(defun org-diary-class (m1 d1 y1 m2 d2 y2 dayname &rest skip-weeks)org-diary-class5633,230145
(defvar org-agenda-show-log-scoped) ;; dynamically scope in `org-timeline' or `org-agenda-list'org-agenda-show-log-scoped5653,231085
(defalias 'org-get-closed 'org-agenda-get-progress)org-get-closed5654,231181
(defun org-agenda-get-progress ()org-agenda-get-progress5655,231233
(defun org-agenda-show-clocking-issues ()org-agenda-show-clocking-issues5759,235436
(defun org-agenda-check-clock-gap (t1 t2 ok-list)org-agenda-check-clock-gap5846,238590
(defun org-agenda-get-deadlines ()org-agenda-get-deadlines5878,239825
(defun org-agenda-deadline-face (fraction)org-agenda-deadline-face5990,244190
(defun org-agenda-get-scheduled (&optional deadline-results)org-agenda-get-scheduled5998,244498
(defun org-agenda-get-blocks ()org-agenda-get-blocks6130,249458
(defvar org-prefix-has-time nilorg-prefix-has-time6213,252615
(defvar org-prefix-has-tag nilorg-prefix-has-tag6216,252762
(defvar org-prefix-has-effort nilorg-prefix-has-effort6219,252908
(defvar org-prefix-category-length nilorg-prefix-category-length6222,253057
(defvar org-prefix-category-max-length nilorg-prefix-category-max-length6224,253175
(defun org-agenda-get-category-icon (category)org-agenda-get-category-icon6227,253298
(defun org-agenda-format-item (extra txt &optional category tags dotimeorg-agenda-format-item6235,253631
(defun org-agenda-fix-displayed-tags (txt tags add-inherited hide-re)org-agenda-fix-displayed-tags6400,260537
(defun org-downcase-keep-props (s)org-downcase-keep-props6432,261539
(defvar org-agenda-sorting-strategy) ;; because the def is in a let formorg-agenda-sorting-strategy6438,261698
(defvar org-agenda-sorting-strategy-selected nil)org-agenda-sorting-strategy-selected6439,261771
(defun org-agenda-add-time-grid-maybe (list ndays todayp)org-agenda-add-time-grid-maybe6441,261822
(defun org-compile-prefix-format (key)org-compile-prefix-format6482,263312
(defun org-set-sorting-strategy (key)org-set-sorting-strategy6538,265651
(defun org-get-time-of-day (s &optional string mod24)org-get-time-of-day6547,266047
(defvar org-agenda-before-sorting-filter-function nilorg-agenda-before-sorting-filter-function6575,267216
(defun org-agenda-finalize-entries (list &optional nosort)org-agenda-finalize-entries6595,268161
(defun org-agenda-highlight-todo (x)org-agenda-highlight-todo6604,268545
(defsubst org-cmp-priority (a b)org-cmp-priority6647,270348
(defsubst org-cmp-effort (a b)org-cmp-effort6654,270576
(defsubst org-cmp-category (a b)org-cmp-category6662,270878
(defsubst org-cmp-todo-state (a b)org-cmp-todo-state6669,271156
(defsubst org-cmp-alpha (a b)org-cmp-alpha6691,272039
(defsubst org-cmp-tag (a b)org-cmp-tag6712,272859
(defsubst org-cmp-time (a b)org-cmp-time6721,273156
(defsubst org-cmp-habit-p (a b)org-cmp-habit-p6729,273453
(defsubst org-em (x y list) (or (memq x list) (memq y list)))org-em6736,273690
(defun org-entries-lessp (a b)org-entries-lessp6738,273753
(defvar org-agenda-restriction-lock-overlay (make-overlay 1 1)org-agenda-restriction-lock-overlay6782,275754
(defun org-agenda-set-restriction-lock (&optional type)org-agenda-set-restriction-lock6790,276157
(defun org-agenda-remove-restriction-lock (&optional noupdate)org-agenda-remove-restriction-lock6825,277604
(defun org-agenda-maybe-redo ()org-agenda-maybe-redo6839,278181
(defun org-agenda-check-type (error &rest types)org-agenda-check-type6854,278654
(defun org-agenda-Quit (&optional arg)org-agenda-Quit6866,279082
(defun org-agenda-quit ()org-agenda-quit6893,280004
(defun org-agenda-exit ()org-agenda-exit6923,281060
(defun org-agenda-kill-all-agenda-buffers ()org-agenda-kill-all-agenda-buffers6932,281399
(defun org-agenda-execute (arg)org-agenda-execute6943,281770
(defun org-agenda-redo (&optional all)org-agenda-redo6951,282042
(defvar org-global-tags-completion-table nil)org-global-tags-completion-table7000,284271
(defvar org-agenda-filter-form nil)org-agenda-filter-form7001,284317
(defvar org-agenda-filtered-by-category nil)org-agenda-filtered-by-category7002,284353
(defun org-agenda-filter-by-category (strip)org-agenda-filter-by-category7004,284399
(defun org-find-top-category (&optional pos)org-find-top-category7016,284911
(defvar org-agenda-filtered-by-top-category nil)org-agenda-filtered-by-top-category7025,285230
(defun org-agenda-filter-by-top-category (strip)org-agenda-filter-by-top-category7027,285280
(defun org-agenda-filter-by-tag (strip &optional char narrow)org-agenda-filter-by-tag7040,285853
(defun org-agenda-get-represented-tags ()org-agenda-get-represented-tags7145,289928
(defun org-agenda-filter-by-tag-refine (strip &optional char)org-agenda-filter-by-tag-refine7156,290279
(defun org-agenda-filter-make-matcher ()org-agenda-filter-make-matcher7161,290475
(defun org-agenda-filter-effort-form (e)org-agenda-filter-effort-form7186,291427
(defun org-agenda-compare-effort (op value)org-agenda-compare-effort7199,291863
(defun org-agenda-filter-apply (filter type)org-agenda-filter-apply7208,292202
(defun org-agenda-filter-top-category-apply (category &optional negative)org-agenda-filter-top-category-apply7235,293227
(defun org-agenda-filter-hide-line (type)org-agenda-filter-hide-line7252,293942
(defun org-agenda-fix-tags-filter-overlays-at (&optional pos)org-agenda-fix-tags-filter-overlays-at7262,294266
(defun org-agenda-filter-show-all-tag nilorg-agenda-filter-show-all-tag7273,294619
(defun org-agenda-filter-show-all-cat nilorg-agenda-filter-show-all-cat7280,294847
(defun org-agenda-manipulate-query-add ()org-agenda-manipulate-query-add7288,295117
(defun org-agenda-manipulate-query-subtract ()org-agenda-manipulate-query-subtract7293,295363
(defun org-agenda-manipulate-query-add-re ()org-agenda-manipulate-query-add-re7298,295614
(defun org-agenda-manipulate-query-subtract-re ()org-agenda-manipulate-query-subtract-re7303,295862
(defun org-agenda-manipulate-query (char)org-agenda-manipulate-query7308,296115
(defun org-add-to-string (var string)org-add-to-string7335,297110
(defun org-agenda-goto-date (span)org-agenda-goto-date7338,297197
(defun org-agenda-goto-today ()org-agenda-goto-today7362,298108
(defun org-agenda-find-same-or-today-or-agenda (&optional cnt)org-agenda-find-same-or-today-or-agenda7380,298787
(defun org-agenda-goto-block-beginning ()org-agenda-goto-block-beginning7389,299219
(defun org-agenda-later (arg)org-agenda-later7408,299917
(defun org-agenda-earlier (arg)org-agenda-earlier7446,301413
(defun org-agenda-view-mode-dispatch ()org-agenda-view-mode-dispatch7452,301604
(defun org-agenda-reset-view ()org-agenda-reset-view7483,303159
(defun org-agenda-day-view (&optional day-of-year)org-agenda-day-view7487,303317
(defun org-agenda-week-view (&optional iso-week)org-agenda-week-view7492,303534
(defun org-agenda-month-view (&optional month)org-agenda-month-view7501,303967
(defun org-agenda-year-view (&optional year)org-agenda-year-view7506,304162
(defun org-agenda-change-time-span (span &optional n)org-agenda-change-time-span7520,304733
(defun org-agenda-compute-starting-span (sd span &optional n)org-agenda-compute-starting-span7541,305561
(defun org-agenda-next-date-line (&optional arg)org-agenda-next-date-line7585,306871
(defun org-agenda-previous-date-line (&optional arg)org-agenda-previous-date-line7598,307367
(defvar org-hl (make-overlay 1 1))org-hl7607,307723
(defun org-highlight (begin end &optional buffer)org-highlight7610,307797
(defun org-unhighlight ()org-unhighlight7614,307949
(defun org-unhighlight-once ()org-unhighlight-once7618,308033
(defvar org-agenda-pre-follow-window-conf nil)org-agenda-pre-follow-window-conf7623,308219
(defun org-agenda-follow-mode ()org-agenda-follow-mode7624,308266
(defun org-agenda-entry-text-mode (&optional arg)org-agenda-entry-text-mode7638,308771
(defun org-agenda-clockreport-mode (&optional with-filter)org-agenda-clockreport-mode7653,309429
(defun org-agenda-log-mode (&optional special)org-agenda-log-mode7667,309957
(defun org-agenda-archives-mode (&optional with-files)org-agenda-archives-mode7687,310645
(defun org-agenda-toggle-diary ()org-agenda-toggle-diary7706,311346
(defun org-agenda-toggle-deadlines ()org-agenda-toggle-deadlines7716,311681
(defun org-agenda-toggle-time-grid ()org-agenda-toggle-time-grid7726,312057
(defun org-agenda-set-mode-name ()org-agenda-set-mode-name7736,312384
(defun org-agenda-update-agenda-type ()org-agenda-update-agenda-type7797,314460
(defun org-agenda-next-line ()org-agenda-next-line7803,314698
(defun org-agenda-previous-line ()org-agenda-previous-line7809,314883
(defun org-agenda-next-item (n)org-agenda-next-item7815,315080
(defun org-agenda-previous-item (n)org-agenda-previous-item7826,315441
(defun org-agenda-do-context-action ()org-agenda-do-context-action7838,315796
(defun org-agenda-show-tags ()org-agenda-show-tags7849,316221
(defun org-agenda-goto (&optional highlight)org-agenda-goto7858,316508
(defvar org-agenda-after-show-hook nilorg-agenda-after-show-hook7880,317274
(defun org-agenda-kill ()org-agenda-kill7884,317431
(defvar org-archive-default-command) ; defined in org-archive.elorg-archive-default-command7919,318781
(defun org-agenda-archive-default ()org-agenda-archive-default7920,318846
(defun org-agenda-archive-default-with-confirmation ()org-agenda-archive-default-with-confirmation7926,319054
(defun org-agenda-archive ()org-agenda-archive7932,319289
(defun org-agenda-archive-to-archive-sibling ()org-agenda-archive-to-archive-sibling7937,319457
(defun org-agenda-archive-with (cmd &optional confirm)org-agenda-archive-with7942,319626
(defun org-remove-subtree-entries-from-agenda (&optional buf beg end)org-remove-subtree-entries-from-agenda7965,320415
(defun org-agenda-refile (&optional goto rfloc no-update)org-agenda-refile7990,321315
(defun org-agenda-open-link (&optional arg)org-agenda-open-link8014,322114
(defun org-agenda-copy-local-variable (var)org-agenda-copy-local-variable8057,323651
(defun org-agenda-switch-to (&optional delete-other-windows)org-agenda-switch-to8064,323949
(defun org-agenda-goto-mouse (ev)org-agenda-goto-mouse8088,324854
(defun org-agenda-show (&optional full-entry)org-agenda-show8094,325025
(defvar org-agenda-show-window nil)org-agenda-show-window8106,325414
(defun org-agenda-show-and-scroll-up (&optional arg)org-agenda-show-and-scroll-up8107,325450
(defun org-agenda-show-scroll-down ()org-agenda-show-scroll-down8125,326168
(defun org-agenda-show-1 (&optional more)org-agenda-show-18134,326462
(defun org-recenter-heading (n)org-recenter-heading8188,328171
(defvar org-agenda-cycle-counter nil)org-agenda-cycle-counter8193,328267
(defun org-agenda-cycle-show (&optional n)org-agenda-cycle-show8194,328305
(defun org-agenda-recenter (arg)org-agenda-recenter8217,329225
(defun org-agenda-show-mouse (ev)org-agenda-show-mouse8225,329458
(defun org-agenda-check-no-diary ()org-agenda-check-no-diary8231,329631
(defun org-agenda-error ()org-agenda-error8236,329798
(defun org-agenda-tree-to-indirect-buffer (arg)org-agenda-tree-to-indirect-buffer8239,329872
(defun org-agenda-do-tree-to-indirect-buffer (arg)org-agenda-do-tree-to-indirect-buffer8266,331162
(defvar org-last-heading-marker (make-marker)org-last-heading-marker8278,331581
(defun org-agenda-todo-nextset ()org-agenda-todo-nextset8282,331735
(defun org-agenda-todo-previousset ()org-agenda-todo-previousset8287,331856
(defun org-agenda-todo (&optional arg)org-agenda-todo8292,331989
(defun org-agenda-add-note (&optional arg)org-agenda-add-note8334,333504
(defun org-agenda-change-all-lines (newhead hdmarkerorg-agenda-change-all-lines8353,334097
(defun org-agenda-align-tags (&optional line)org-agenda-align-tags8418,336548
(defun org-agenda-priority-up ()org-agenda-priority-up8446,337657
(defun org-agenda-priority-down ()org-agenda-priority-down8451,337803
(defun org-agenda-priority (&optional force-direction)org-agenda-priority8456,337953
(defun org-agenda-set-tags (&optional tag onoff)org-agenda-set-tags8489,339207
(defun org-agenda-set-property ()org-agenda-set-property8519,340147
(defun org-agenda-set-effort ()org-agenda-set-effort8541,340773
(defun org-agenda-toggle-archive-tag ()org-agenda-toggle-archive-tag8566,341506
(defun org-agenda-do-date-later (arg)org-agenda-do-date-later8590,342258
(defun org-agenda-do-date-earlier (arg)org-agenda-do-date-earlier8606,342808
(defun org-agenda-date-later (arg &optional what)org-agenda-date-later8622,343370
(defun org-agenda-date-earlier (arg &optional what)org-agenda-date-earlier8659,344808
(defun org-agenda-date-later-minutes (arg)org-agenda-date-later-minutes8664,344977
(defun org-agenda-date-earlier-minutes (arg)org-agenda-date-earlier-minutes8670,345221
(defun org-agenda-date-later-hours (arg)org-agenda-date-later-hours8676,345469
(defun org-agenda-date-earlier-hours (arg)org-agenda-date-earlier-hours8681,345617
(defun org-agenda-show-new-time (marker stamp &optional prefix)org-agenda-show-new-time8686,345769
(defun org-agenda-date-prompt (arg)org-agenda-date-prompt8713,346906
(defun org-agenda-schedule (arg &optional time)org-agenda-schedule8734,347766
(defun org-agenda-deadline (arg &optional time)org-agenda-deadline8756,348484
(defun org-agenda-clock-in (&optional arg)org-agenda-clock-in8776,349121
(defun org-agenda-clock-out ()org-agenda-clock-out8799,349840
(defun org-agenda-clock-cancel (&optional arg)org-agenda-clock-cancel8818,350451
(defun org-agenda-clock-goto ()org-agenda-clock-goto8826,350716
(defun org-agenda-diary-entry-in-org-file ()org-agenda-diary-entry-in-org-file8843,351401
(defcustom org-agenda-insert-diary-strategy 'date-treeorg-agenda-insert-diary-strategy8885,353301
(defcustom org-agenda-insert-diary-extract-time nilorg-agenda-insert-diary-extract-time8896,353687
(defcustom org-agenda-bulk-mark-char ">"org-agenda-bulk-mark-char8902,353868
(defun org-agenda-add-entry-to-org-agenda-diary-file (type text &optional d1 d2)org-agenda-add-entry-to-org-agenda-diary-file8908,354025
(defun org-agenda-insert-diary-as-top-level (text)org-agenda-insert-diary-as-top-level8983,356978
(defun org-agenda-insert-diary-make-new-entry (text)org-agenda-insert-diary-make-new-entry8993,357344
(defun org-agenda-diary-entry ()org-agenda-diary-entry9017,358129
(defun org-agenda-execute-calendar-command (cmd)org-agenda-execute-calendar-command9063,360020
(defun org-agenda-phases-of-moon ()org-agenda-phases-of-moon9085,360870
(defun org-agenda-holidays ()org-agenda-holidays9090,361065
(defvar calendar-longitude)      ; defined in calendar.elcalendar-longitude9095,361243
(defvar calendar-latitude)       ; defined in calendar.elcalendar-latitude9096,361301
(defvar calendar-location-name)  ; defined in calendar.elcalendar-location-name9097,361359
(defun org-agenda-sunrise-sunset (arg)org-agenda-sunrise-sunset9099,361418
(defun org-agenda-goto-calendar ()org-agenda-goto-calendar9112,362002
(defun org-calendar-goto-agenda ()org-calendar-goto-agenda9126,362516
(defun org-agenda-convert-date ()org-agenda-convert-date9140,363022
(defun org-agenda-bulk-marked-p ()org-agenda-bulk-marked-p9170,364412
(defun org-agenda-bulk-mark (&optional arg)org-agenda-bulk-mark9174,364529
(defun org-agenda-bulk-mark-all ()org-agenda-bulk-mark-all9195,365362
(defun org-agenda-bulk-mark-regexp (regexp)org-agenda-bulk-mark-regexp9200,365503
(defun org-agenda-bulk-unmark (&optional arg)org-agenda-bulk-unmark9214,366079
(defun org-agenda-bulk-toggle ()org-agenda-bulk-toggle9232,366755
(defun org-agenda-bulk-remove-overlays (&optional beg end)org-agenda-bulk-remove-overlays9239,366953
(defun org-agenda-bulk-unmark-all ()org-agenda-bulk-unmark-all9251,367429
(defcustom org-agenda-persistent-marks nilorg-agenda-persistent-marks9261,367839
(defun org-agenda-bulk-action (&optional arg)org-agenda-bulk-action9269,368090
(defun org-agenda-capture ()org-agenda-capture9432,373690
(defun org-agenda-show-the-flagging-note ()org-agenda-show-the-flagging-note9443,374019
(defun org-agenda-remove-flag (marker)org-agenda-remove-flag9474,375169
(defun org-agenda-get-any-marker (&optional pos)org-agenda-get-any-marker9484,375527
(defvar appt-time-msg-list) ; defined in appt.elappt-time-msg-list9490,375733
(defun org-agenda-to-appt (&optional refresh filter &rest args)org-agenda-to-appt9493,375798
(defun org-agenda-todayp (date)org-agenda-todayp9616,380380
(defun org-agenda-todo-yesterday (&optional arg)org-agenda-todo-yesterday9623,380617

/home/malk/.emacs.d/elpa/org-20130128/org-macs.el,5060
(defmacro org-with-gensyms (symbols &rest body)org-with-gensyms48,1839
(def-edebug-spec org-with-gensyms (sexp body))org-with-gensyms52,1997
(defmacro org-called-interactively-p (&optional kind)org-called-interactively-p55,2093
(def-edebug-spec org-called-interactively-p (&optional ("quote" symbolp)))org-called-interactively-p64,2421
(defmacro org-bound-and-true-p (var)org-bound-and-true-p74,2797
(def-edebug-spec org-bound-and-true-p (symbolp))org-bound-and-true-p77,2932
(defun org-string-nw-p (s)org-string-nw-p79,2982
(defun org-not-nil (v)org-not-nil85,3123
(defmacro org-unmodified (&rest body)org-unmodified90,3270
(def-edebug-spec org-unmodified (body))org-unmodified98,3556
(defun org-substitute-posix-classes (re)org-substitute-posix-classes100,3597
(defmacro org-re (s)org-re114,4119
(def-edebug-spec org-re (form))org-re117,4253
(defmacro org-preserve-lc (&rest body)org-preserve-lc119,4286
(def-edebug-spec org-preserve-lc (body))org-preserve-lc127,4521
(defmacro org-with-buffer-modified-unmodified (&rest body)org-with-buffer-modified-unmodified130,4590
(defmacro org-without-partial-completion (&rest body)org-without-partial-completion138,4903
(def-edebug-spec org-without-partial-completion (body))org-without-partial-completion148,5201
(defmacro org-maybe-intangible (props)org-maybe-intangible151,5334
(defmacro org-with-point-at (pom &rest body)org-with-point-at163,5941
(def-edebug-spec org-with-point-at (form body))org-with-point-at172,6266
(defmacro org-no-warnings (&rest body)org-no-warnings175,6364
(def-edebug-spec org-no-warnings (body))org-no-warnings177,6476
(defmacro org-if-unprotected (&rest body)org-if-unprotected179,6518
(def-edebug-spec org-if-unprotected (body))org-if-unprotected183,6700
(defmacro org-if-unprotected-1 (&rest body)org-if-unprotected-1185,6745
(def-edebug-spec org-if-unprotected-1 (body))org-if-unprotected-1189,6936
(defmacro org-if-unprotected-at (pos &rest body)org-if-unprotected-at191,6983
(def-edebug-spec org-if-unprotected-at (form body))org-if-unprotected-at195,7167
(defun org-re-search-forward-unprotected (&rest args)org-re-search-forward-unprotected198,7273
(defmacro org-with-remote-undo (_buffer &rest _body)org-with-remote-undo208,7618
(def-edebug-spec org-with-remote-undo (form body))org-with-remote-undo231,8566
(defmacro org-no-read-only (&rest body)org-no-read-only234,8670
(def-edebug-spec org-no-read-only (body))org-no-read-only237,8783
(defconst org-rm-props '(invisible t face t keymap t intangible t mouse-face torg-rm-props239,8826
(defsubst org-match-string-no-properties (num &optional string)org-match-string-no-properties244,9047
(defsubst org-no-properties (s &optional restricted)org-no-properties251,9292
(defsubst org-get-alist-option (option key)org-get-alist-option262,9684
(defsubst org-check-external-command (cmd &optional use no-error)org-check-external-command268,9854
(defsubst org-inhibit-invisibility ()org-inhibit-invisibility280,10369
(defsubst org-set-local (var value)org-set-local286,10666
(defsubst org-last (list)org-last290,10802
(defun org-let (list &rest body)org-let294,10887
(defun org-let2 (list1 list2 &rest body)org-let2298,10999
(defsubst org-call-with-arg (command arg)org-call-with-arg302,11153
(defsubst org-current-line (&optional pos)org-current-line306,11325
(defsubst org-goto-line (N)org-goto-line312,11542
(defsubst org-current-line-string (&optional to-here)org-current-line-string318,11659
(defsubst org-pos-in-match-range (pos n)org-pos-in-match-range321,11787
(defun org-autoload (file functions)org-autoload326,11924
(defun org-match-line (re)org-match-line334,12212
(defun org-plist-delete (plist property)org-plist-delete340,12364
(defun org-replace-match-keep-properties (newtext &optional fixedcaseorg-replace-match-keep-properties350,12649
(defmacro org-save-outline-visibility (use-markers &rest body)org-save-outline-visibility357,12965
(def-edebug-spec org-save-outline-visibility (form body))org-save-outline-visibility378,13742
(defmacro org-with-wide-buffer (&rest body)org-with-wide-buffer380,13801
(def-edebug-spec org-with-wide-buffer (body))org-with-wide-buffer386,13975
(defmacro org-with-limited-levels (&rest body)org-with-limited-levels388,14022
(def-edebug-spec org-with-limited-levels (body))org-with-limited-levels395,14341
(defvar org-outline-regexp) ; defined in org.elorg-outline-regexp397,14391
(defvar org-odd-levels-only) ; defined in org.elorg-odd-levels-only398,14439
(defvar org-inlinetask-min-level) ; defined in org-inlinetask.elorg-inlinetask-min-level399,14488
(defun org-get-limited-outline-regexp ()org-get-limited-outline-regexp400,14553
(defun org-format-seconds (string seconds)org-format-seconds409,14990
(defmacro org-eval-in-environment (environment form)org-eval-in-environment415,15217
(def-edebug-spec org-eval-in-environment (form form))org-eval-in-environment417,15313
(defun org-make-parameter-alist (flat)org-make-parameter-alist420,15423

/home/malk/.emacs.d/elpa/org-20130128/org-compat.el,2811
(defconst org-xemacs-p (featurep 'xemacs))org-xemacs-p42,1460
(defconst org-format-transports-properties-porg-format-transports-properties-p43,1503
(defun org-compatible-face (inherits specs)org-compatible-face49,1701
(defun org-version-check (version feature level)org-version-check89,3404
(defconst org-xemacs-key-equivalentsorg-xemacs-key-equivalents117,4151
(defun org-detach-overlay (ovl)org-detach-overlay126,4434
(defun org-overlay-display (ovl text &optional face evap)org-overlay-display128,4534
(defun org-overlay-before-string (ovl text &optional face evap)org-overlay-before-string138,4948
(defun org-find-overlays (prop &optional pos delete)org-find-overlays147,5343
(defun org-get-x-clipboard (value)org-get-x-clipboard157,5702
(defsubst org-decompose-region (beg end)org-decompose-region163,5931
(defun org-add-hook (hook function &optional append local)org-add-hook174,6254
(defun org-add-props (string plist &rest props)org-add-props180,6483
(defun org-fit-window-to-buffer (&optional window max-height min-heightorg-fit-window-to-buffer189,6888
(defun org-number-sequence (from &optional to inc)org-number-sequence206,7712
(defvar org-ignore-region nilorg-ignore-region228,8312
(defun org-region-active-p ()org-region-active-p231,8390
(defun org-cursor-to-region-beginning ()org-cursor-to-region-beginning242,8725
(defun org-remove-from-invisibility-spec (arg)org-remove-from-invisibility-spec261,9271
(defun org-in-invisibility-spec-p (arg)org-in-invisibility-spec-p269,9583
(defmacro org-xemacs-without-invisibility (&rest body)org-xemacs-without-invisibility275,9768
(def-edebug-spec org-xemacs-without-invisibility (body))org-xemacs-without-invisibility289,10356
(defun org-indent-to-column (column &optional minimum buffer)org-indent-to-column291,10414
(defun org-indent-line-to (column)org-indent-line-to297,10687
(defun org-move-to-column (column &optional force buffer)org-move-to-column303,10906
(defun org-get-x-clipboard-compat (value)org-get-x-clipboard-compat308,11103
(defun org-propertize (string &rest properties)org-propertize320,11506
(defmacro org-find-library-dir (library)org-find-library-dir327,11705
(defun org-count-lines (s)org-count-lines330,11807
(defun org-kill-new (string &rest args)org-kill-new339,12064
(defun org-select-frame-set-input-focus (frame)org-select-frame-set-input-focus344,12226
(defun org-float-time (&optional time)org-float-time366,12955
(defmacro org-no-popups (&rest body)org-no-popups377,13298
(defun org-floor* (x &optional y)org-floor*433,15342
(defun org-pop-to-buffer-same-windoworg-pop-to-buffer-same-window440,15638
(defun org-delete-directory (directory &optional recursive)org-delete-directory450,16083
(defmacro org-check-version ()org-check-version470,16878

/home/malk/.emacs.d/elpa/org-20130128/org-feed.el,1885
(defgroup org-feed  nilorg-feed107,4180
(defcustom org-feed-alist nilorg-feed-alist112,4296
(defcustom org-feed-drawer "FEEDSTATUS"org-feed-drawer215,8759
(defcustom org-feed-default-template "\n* %h\n  %U\n  %description\n  %a\n"org-feed-default-template225,9159
(defcustom org-feed-save-after-adding torg-feed-save-after-adding243,10035
(defcustom org-feed-retrieve-method 'url-retrieve-synchronouslyorg-feed-retrieve-method248,10172
(defcustom org-feed-before-adding-hook nilorg-feed-before-adding-hook260,10693
(defcustom org-feed-after-adding-hook nilorg-feed-after-adding-hook267,10920
(defvar org-feed-buffer "*Org feed*"org-feed-buffer274,11145
(defun org-feed-update-all ()org-feed-update-all278,11239
(defun org-feed-update (feed &optional retrieve-only)org-feed-update291,11659
(defun org-feed-goto-inbox (feed)org-feed-goto-inbox423,16117
(defun org-feed-show-raw-feed (feed)org-feed-show-raw-feed435,16549
(defun org-feed-goto-inbox-internal (file heading)org-feed-goto-inbox-internal448,16996
(defun org-feed-read-previous-status (pos drawer)org-feed-read-previous-status463,17452
(defun org-feed-write-status (pos drawer status)org-feed-write-status475,17846
(defun org-feed-add-items (pos entries)org-feed-add-items494,18438
(defun org-feed-format-entry (entry template formatter)org-feed-format-entry510,18978
(defun org-feed-make-indented-block (s n)org-feed-make-indented-block569,21232
(defun org-feed-skip-http-headers (buffer)org-feed-skip-http-headers577,21478
(defun org-feed-get-feed (url)org-feed-get-feed587,21761
(defun org-feed-parse-rss-feed (buffer)org-feed-parse-rss-feed603,22428
(defun org-feed-parse-rss-entry (entry)org-feed-parse-rss-entry625,23207
(defun org-feed-parse-atom-feed (buffer)org-feed-parse-atom-feed641,23834
(defun org-feed-parse-atom-entry (entry)org-feed-parse-atom-entry659,24470

/home/malk/.emacs.d/elpa/org-20130128/ob-comint.el,757
(defun org-babel-comint-buffer-livep (buffer)org-babel-comint-buffer-livep40,1409
(defmacro org-babel-comint-in-buffer (buffer &rest body)org-babel-comint-in-buffer45,1643
(def-edebug-spec org-babel-comint-in-buffer (form body))org-babel-comint-in-buffer57,2109
(defmacro org-babel-comint-with-output (meta &rest body)org-babel-comint-with-output59,2167
(def-edebug-spec org-babel-comint-with-output (form body))org-babel-comint-with-output120,4588
(defun org-babel-comint-input-command (buffer cmd)org-babel-comint-input-command122,4648
(defun org-babel-comint-wait-for-output (buffer)org-babel-comint-wait-for-output131,4939
(defun org-babel-comint-eval-invisibly-and-wait-for-fileorg-babel-comint-eval-invisibly-and-wait-for-file144,5544

/home/malk/.emacs.d/elpa/org-20130128/ob-awk.el,489
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts42,1401
(defvar org-babel-awk-command "awk"org-babel-awk-command45,1497
(defun org-babel-expand-body:awk (body params &optional processed-params)org-babel-expand-body:awk48,1575
(defun org-babel-execute:awk (body params)org-babel-execute:awk55,1905
(defun org-babel-awk-var-to-awk (var &optional sep)org-babel-awk-var-to-awk98,3580
(defun org-babel-awk-table-or-string (results)org-babel-awk-table-or-string108,3980

/home/malk/.emacs.d/elpa/org-20130128/org-archive.el,1576
(defcustom org-archive-default-command 'org-archive-subtreeorg-archive-default-command36,1264
(defcustom org-archive-reversed-order nilorg-archive-reversed-order44,1505
(defcustom org-archive-sibling-heading "Archive"org-archive-sibling-heading50,1687
(defcustom org-archive-mark-done nilorg-archive-mark-done57,1959
(defcustom org-archive-stamp-time torg-archive-stamp-time67,2325
(defcustom org-archive-subtree-add-inherited-tags 'infileorg-archive-subtree-add-inherited-tags74,2607
(defcustom org-archive-save-context-info '(time file olpath category todo itags)org-archive-save-context-info83,2913
(defun org-get-local-archive-location ()org-get-local-archive-location113,4293
(defun org-add-archive-files (files)org-add-archive-files129,4739
(defun org-all-archive-files ()org-all-archive-files144,5129
(defun org-extract-archive-file (&optional location)org-extract-archive-file163,5749
(defun org-extract-archive-heading (&optional location)org-extract-archive-heading175,6261
(defun org-archive-subtree (&optional find-done)org-archive-subtree185,6678
(defun org-archive-to-archive-sibling ()org-archive-to-archive-sibling374,14488
(defun org-archive-all-done (&optional tag)org-archive-all-done444,16811
(defun org-toggle-archive-tag (&optional find-done)org-toggle-archive-tag489,18309
(defun org-archive-set-tag ()org-archive-set-tag512,19240
(defun org-archive-subtree-default ()org-archive-subtree-default526,19752
(defun org-archive-subtree-default-with-confirmation ()org-archive-subtree-default-with-confirmation533,20001

/home/malk/.emacs.d/elpa/org-20130128/org-table.el,19260
(defvar orgtbl-mode) ; defined beloworgtbl-mode45,1698
(defvar orgtbl-mode-menu) ; defined when orgtbl mode get initializedorgtbl-mode-menu46,1735
(defvar org-export-html-table-tag) ; defined in org-exp.elorg-export-html-table-tag47,1804
(defvar constants-unit-system)constants-unit-system48,1863
(defvar org-table-follow-field-mode)org-table-follow-field-mode49,1894
(defvar orgtbl-after-send-table-hook nilorgtbl-after-send-table-hook51,1932
(defcustom orgtbl-optimized (eq org-enable-table-editor 'optimized)orgtbl-optimized57,2203
(defcustom orgtbl-radio-table-templatesorgtbl-radio-table-templates71,2907
(defgroup org-table-settings nilorg-table-settings104,3821
(defcustom org-table-default-size "5x2"org-table-default-size109,3941
(defcustom org-table-number-regexporg-table-number-regexp114,4091
(defcustom org-table-number-fraction 0.5org-table-number-fraction145,5523
(defgroup org-table-editing nilorg-table-editing153,5854
(defcustom org-table-automatic-realign torg-table-automatic-realign158,5986
(defcustom org-table-auto-blank-field torg-table-auto-blank-field165,6243
(defcustom org-table-exit-follow-field-mode-when-leaving-table torg-table-exit-follow-field-mode-when-leaving-table173,6573
(defcustom org-table-fix-formulas-confirm nilorg-table-fix-formulas-confirm184,7038
(defcustom org-table-tab-jumps-over-hlines torg-table-tab-jumps-over-hlines196,7452
(defgroup org-table-calculation nilorg-table-calculation205,7845
(defcustom org-table-use-standard-references 'fromorg-table-use-standard-references210,7977
(defcustom org-table-copy-increment torg-table-copy-increment222,8497
(defcustom org-calc-default-modesorg-calc-default-modes227,8671
(defcustom org-table-duration-custom-format 'hoursorg-table-duration-custom-format243,9316
(defcustom org-table-formula-field-format "%s"org-table-formula-field-format256,9832
(defcustom org-table-formula-evaluate-inline torg-table-formula-evaluate-inline265,10175
(defcustom org-table-formula-use-constants torg-table-formula-use-constants276,10710
(defcustom org-table-formula-constants nilorg-table-formula-constants284,11053
(defcustom org-table-allow-automatic-line-recalculation torg-table-allow-automatic-line-recalculation302,11697
(defcustom org-table-error-on-row-ref-crossing-hline torg-table-error-on-row-ref-crossing-hline308,11959
(defcustom org-table-relative-ref-may-cross-hline torg-table-relative-ref-may-cross-hline313,12129
(defgroup org-table-import-export nilorg-table-import-export332,12896
(defcustom org-table-export-default-format "orgtbl-to-tsv"org-table-export-default-format337,13049
(defconst org-table-auto-recalculate-regexp "^[ \t]*| *# *\\(|\\|$\\)"org-table-auto-recalculate-regexp346,13418
(defconst org-table-recalculate-regexp "^[ \t]*| *[#*] *\\(|\\|$\\)"org-table-recalculate-regexp348,13551
(defconst org-table-calculate-mark-regexp "^[ \t]*| *[!$^_#*] *\\(|\\|$\\)"org-table-calculate-mark-regexp350,13682
(defconst org-table-border-regexp "^[ \t]*[^| \t]"org-table-border-regexp352,13820
(defvar org-table-last-highlighted-reference nil)org-table-last-highlighted-reference354,13962
(defvar org-table-formula-history nil)org-table-formula-history355,14012
(defvar org-table-column-names nilorg-table-column-names357,14052
(defvar org-table-column-name-regexp nilorg-table-column-name-regexp359,14144
(defvar org-table-local-parameters nilorg-table-local-parameters361,14244
(defvar org-table-named-field-locations nilorg-table-named-field-locations363,14343
(defvar org-table-current-line-types nilorg-table-current-line-types366,14431
(defvar org-table-current-begin-line nilorg-table-current-begin-line368,14538
(defvar org-table-current-begin-pos nilorg-table-current-begin-pos370,14646
(defvar org-table-current-ncol nilorg-table-current-ncol372,14757
(defvar org-table-dlines nilorg-table-dlines374,14869
(defvar org-table-hlines nilorg-table-hlines376,14958
(defconst org-table-range-regexporg-table-range-regexp379,15044
(defconst org-table-range-regexp2org-table-range-regexp2384,15339
(defun org-table-colgroup-line-p (line)org-table-colgroup-line-p391,15630
(defun org-table-cookie-line-p (line)org-table-cookie-line-p404,16053
(defconst org-table-translate-regexporg-table-translate-regexp422,16670
(defun org-table-create-with-table.el ()org-table-create-with-table.el427,16871
(defun org-table-create-or-convert-from-region (arg)org-table-create-or-convert-from-region444,17390
(defun org-table-create (&optional size)org-table-create457,17957
(defun org-table-convert-region (beg0 end0 &optional separator)org-table-convert-region490,18986
(defun org-table-import (file arg)org-table-import551,21189
(defvar org-table-last-alignment)org-table-last-alignment564,21656
(defvar org-table-last-column-widths)org-table-last-column-widths565,21690
(defun org-table-export (&optional file format)org-table-export567,21743
(defvar org-table-aligned-begin-marker (make-marker)org-table-aligned-begin-marker657,25433
(defvar org-table-aligned-end-marker (make-marker)org-table-aligned-end-marker660,25615
(defvar org-table-last-alignment nilorg-table-last-alignment663,25789
(defvar org-table-last-column-widths nilorg-table-last-column-widths666,25970
(defvar org-table-formula-debug nilorg-table-formula-debug669,26131
(defvar org-table-overlay-coordinates nilorg-table-overlay-coordinates673,26317
(defvar org-last-recalc-line nil)org-last-recalc-line677,26474
(defvar org-table-do-narrow t)   ; for dynamic scopingorg-table-do-narrow678,26508
(defconst org-narrow-column-arrow "=>"org-narrow-column-arrow679,26563
(defun org-table-align ()org-table-align683,26675
(defun org-table-begin (&optional table-type)org-table-begin869,33958
(defun org-table-end (&optional table-type)org-table-end882,34405
(defun org-table-justify-field-maybe (&optional new)org-table-justify-field-maybe895,34813
(defun org-table-next-field ()org-table-next-field936,36462
(defun org-table-previous-field ()org-table-previous-field966,37380
(defun org-table-beginning-of-field (&optional n)org-table-beginning-of-field987,38076
(defun org-table-end-of-field (&optional n)org-table-end-of-field1002,38671
(defun org-table-next-row ()org-table-next-row1020,39292
(defun org-table-copy-down (n)org-table-copy-down1044,40064
(defun org-table-check-inside-data-field (&optional noerror)org-table-check-inside-data-field1096,41855
(defvar org-table-clip nilorg-table-clip1109,42279
(defun org-table-get (line column)org-table-get1112,42341
(defun org-table-put (line column value &optional align)org-table-put1124,42841
(defun org-table-current-line ()org-table-current-line1134,43248
(defun org-table-goto-line (N)org-table-goto-line1144,43572
(defun org-table-blank-field ()org-table-blank-field1153,43896
(defun org-table-get-field (&optional n replace)org-table-get-field1170,44491
(defun org-table-field-info (arg)org-table-field-info1189,45128
(defun org-table-current-column ()org-table-current-column1231,46635
(defun org-table-current-dline ()org-table-current-dline1245,47061
(defun org-table-goto-column (n &optional on-delim force)org-table-goto-column1262,47592
(defun org-table-insert-column ()org-table-insert-column1285,48389
(defun org-table-find-dataline ()org-table-find-dataline1313,49243
(defun org-table-line-to-dline (line &optional above)org-table-line-to-dline1332,49826
(defun org-table-delete-column ()org-table-delete-column1355,50504
(defun org-table-move-column-right ()org-table-move-column-right1388,51544
(defun org-table-move-column-left ()org-table-move-column-left1393,51674
(defun org-table-move-column (&optional left)org-table-move-column1399,51805
(defun org-table-move-row-down ()org-table-move-row-down1439,53287
(defun org-table-move-row-up ()org-table-move-row-up1444,53405
(defun org-table-move-row (&optional up)org-table-move-row1450,53520
(defun org-table-insert-row (&optional arg)org-table-insert-row1484,54693
(defun org-table-insert-hline (&optional above)org-table-insert-hline1506,55655
(defun org-table-hline-and-move (&optional same-column)org-table-hline-and-move1530,56615
(defun org-table-clean-line (s)org-table-clean-line1543,57070
(defun org-table-kill-row ()org-table-kill-row1557,57615
(defun org-table-sort-lines (with-case &optional sorting-type)org-table-sort-lines1573,58248
(defun org-table-cut-region (beg end)org-table-cut-region1658,61463
(defun org-table-copy-region (beg end &optional cut)org-table-copy-region1667,61818
(defun org-table-paste-rectangle ()org-table-paste-rectangle1705,63068
(defun org-table-convert ()org-table-convert1736,64162
(defun org-table-transpose-table-at-point ()org-table-transpose-table-at-point1781,65996
(defun org-table-wrap-region (arg)org-table-wrap-region1810,66723
(defvar org-field-marker nil)org-field-marker1878,69499
(defun org-table-edit-field (arg)org-table-edit-field1881,69545
(defun org-table-finish-edit-field ()org-table-finish-edit-field1930,71515
(define-minor-mode org-table-follow-field-modeorg-table-follow-field-mode1953,72324
(defun org-table-follow-fields-with-editor ()org-table-follow-fields-with-editor1971,73135
(defvar org-timecnt) ; dynamically scoped parameterorg-timecnt1982,73539
(defun org-table-sum (&optional beg end nlast)org-table-sum1985,73607
(defun org-table-get-number-for-summing (s)org-table-get-number-for-summing2043,75741
(defun org-table-current-field-formula (&optional key noerror)org-table-current-field-formula2063,76509
(defun org-table-get-formula (&optional equation named)org-table-get-formula2083,77290
(defun org-table-store-formulas (alist)org-table-store-formulas2139,79413
(defsubst org-table-formula-make-cmp-string (a)org-table-formula-make-cmp-string2160,80141
(defun org-table-formula-less-p (a b)org-table-formula-less-p2179,80868
(defun org-table-get-stored-formulas (&optional noerror)org-table-get-stored-formulas2186,81102
(defun org-table-fix-formulas (key replace &optional limit delta remove)org-table-fix-formulas2214,82264
(defun org-table-get-specials ()org-table-get-specials2248,83686
(defun org-table-maybe-eval-formula ()org-table-maybe-eval-formula2326,87076
(defvar org-recalc-commands nilorg-recalc-commands2343,87884
(defvar org-recalc-marksorg-recalc-marks2347,88020
(defun org-table-rotate-recalc-marks (&optional newchar)org-table-rotate-recalc-marks2357,88569
(defun org-table-maybe-recalculate-line ()org-table-maybe-recalculate-line2419,90896
(defvar org-tbl-calc-modes) ;; Dynamically bound in `org-table-eval-formula'org-tbl-calc-modes2429,91336
(defsubst org-set-calc-mode (var &optional value)org-set-calc-mode2430,91413
(defun org-table-eval-formula (&optional arg equationorg-table-eval-formula2443,91862
(defun org-table-put-field-property (prop value)org-table-put-field-property2695,101902
(defun org-table-get-range (desc &optional tbeg col highlight corners-only)org-table-get-range2701,102110
(defun org-table-get-descriptor-line (desc &optional cline bline table)org-table-get-descriptor-line2773,105092
(defun org-table-find-row-type (table i type backwards relative n cline desc)org-table-find-row-type2810,106749
(defun org-table-rewrite-old-row-references (s)org-table-rewrite-old-row-references2832,107503
(defun org-table-make-reference (elements keep-empty numbers lispp)org-table-make-reference2837,107678
(defun org-table-recalculate (&optional all noalign)org-table-recalculate2870,108836
(defun org-table-iterate (&optional arg)org-table-iterate3009,114636
(defun org-table-recalculate-buffer-tables ()org-table-recalculate-buffer-tables3032,115416
(defun org-table-iterate-buffer-tables ()org-table-iterate-buffer-tables3041,115670
(defun org-table-expand-lhs-ranges (equations)org-table-expand-lhs-ranges3062,116283
(defun org-table-formula-handle-first/last-rc (s)org-table-formula-handle-first/last-rc3095,117551
(defun org-table-formula-substitute-names (f)org-table-formula-substitute-names3124,118816
(defun org-table-get-constant (const)org-table-get-constant3146,119728
(defvar org-table-fedit-maporg-table-fedit-map3157,120231
(defvar org-pos)org-pos3209,122722
(defun org-table-edit-formulas ()org-table-edit-formulas3212,122755
(defun org-table-fedit-post-command ()org-table-fedit-post-command3263,125002
(defun org-table-formula-to-user (s)org-table-formula-to-user3272,125251
(defun org-table-formula-from-user (s)org-table-formula-from-user3278,125443
(defun org-table-convert-refs-to-rc (s)org-table-convert-refs-to-rc3284,125630
(defun org-table-convert-refs-to-an (s)org-table-convert-refs-to-an3316,126790
(defun org-letters-to-number (s)org-letters-to-number3334,127430
(defun org-number-to-letters (n)org-number-to-letters3344,127712
(defun org-table-time-string-to-seconds (s)org-table-time-string-to-seconds3353,127970
(defun org-table-time-seconds-to-string (secs &optional output-format)org-table-time-seconds-to-string3380,129097
(defun org-table-fedit-convert-buffer (function)org-table-fedit-convert-buffer3397,129709
(defun org-table-fedit-toggle-ref-type ()org-table-fedit-toggle-ref-type3407,130089
(defun org-table-fedit-ref-up ()org-table-fedit-ref-up3417,130519
(defun org-table-fedit-ref-down ()org-table-fedit-ref-down3421,130660
(defun org-table-fedit-ref-left ()org-table-fedit-ref-left3425,130807
(defun org-table-fedit-ref-right ()org-table-fedit-ref-right3429,130957
(defun org-table-fedit-shift-reference (dir)org-table-fedit-shift-reference3434,131111
(defun org-rematch-and-replace (n &optional decr hline)org-rematch-and-replace3452,131829
(defun org-table-shift-refpart (ref &optional decr hline)org-table-shift-refpart3460,132204
(defun org-table-fedit-toggle-coordinates ()org-table-fedit-toggle-coordinates3492,133311
(defun org-table-fedit-finish (&optional arg)org-table-fedit-finish3501,133609
(defun org-table-fedit-abort ()org-table-fedit-abort3537,135009
(defun org-table-fedit-lisp-indent ()org-table-fedit-lisp-indent3548,135411
(defvar org-show-positions nil)org-show-positions3587,136704
(defun org-table-show-reference (&optional local)org-table-show-reference3589,136737
(defun org-table-force-dataline ()org-table-force-dataline3725,142063
(defun org-table-fedit-line-up ()org-table-fedit-line-up3739,142615
(defun org-table-fedit-line-down ()org-table-fedit-line-down3744,142768
(defun org-table-fedit-move (command)org-table-fedit-move3749,142921
(defun org-table-fedit-scroll (N)org-table-fedit-scroll3764,143499
(defun org-table-fedit-scroll-down (N)org-table-fedit-scroll-down3769,143646
(defvar org-table-rectangle-overlays nil)org-table-rectangle-overlays3773,143740
(defun org-table-add-rectangle-overlay (beg end &optional face)org-table-add-rectangle-overlay3775,143783
(defun org-table-highlight-rectangle (&optional beg end face)org-table-highlight-rectangle3781,144011
(defun org-table-remove-rectangle-highlight (&rest ignore)org-table-remove-rectangle-highlight3809,145053
(defvar org-table-coordinate-overlays nilorg-table-coordinate-overlays3816,145371
(defun org-table-overlay-coordinates ()org-table-overlay-coordinates3820,145547
(defun org-table-toggle-coordinate-overlays ()org-table-toggle-coordinate-overlays3850,146736
(defun org-table-toggle-formula-debugger ()org-table-toggle-formula-debugger3863,147282
(defvar orgtbl-mode-map (make-keymap)orgtbl-mode-map3899,149039
(defvar org-old-auto-fill-inhibit-regexp nilorg-old-auto-fill-inhibit-regexp3902,149109
(defconst orgtbl-line-start-regexporgtbl-line-start-regexp3905,149198
(defconst orgtbl-extra-font-lock-keywordsorgtbl-extra-font-lock-keywords3909,149334
(define-minor-mode orgtbl-modeorgtbl-mode3919,149671
(defun org-table-cleanup-narrow-column-properties ()org-table-cleanup-narrow-column-properties3961,151633
(defun orgtbl-make-binding (fun n &rest keys)orgtbl-make-binding3974,152238
(defun orgtbl-error ()orgtbl-error3999,153084
(defun orgtbl-setup ()orgtbl-setup4004,153237
(defun orgtbl-ctrl-c-ctrl-c (arg)orgtbl-ctrl-c-ctrl-c4149,159667
(defun orgtbl-create-or-convert-from-region (arg)orgtbl-create-or-convert-from-region4191,161260
(defun orgtbl-tab (arg)orgtbl-tab4201,161680
(defun orgtbl-ret ()orgtbl-ret4208,161879
(defun orgtbl-self-insert-command (N)orgtbl-self-insert-command4216,162063
(defvar orgtbl-exp-regexp "^\\([-+]?[0-9][0-9.]*\\)[eE]\\([-+]?[0-9]+\\)$"orgtbl-exp-regexp4264,163795
(defun orgtbl-export (table target)orgtbl-export4267,163938
(defun orgtbl-gather-send-defs ()orgtbl-gather-send-defs4292,165022
(defun orgtbl-send-replace-tbl (name txt)orgtbl-send-replace-tbl4309,165654
(defun org-table-to-lisp (&optional txt)org-table-to-lisp4328,166274
(defun orgtbl-send-table (&optional maybe)orgtbl-send-table4348,166970
(defun org-remove-by-index (list indices &optional i0)org-remove-by-index4404,169119
(defun orgtbl-toggle-comment ()orgtbl-toggle-comment4416,169498
(defun orgtbl-insert-radio-table ()orgtbl-insert-radio-table4437,170231
(defvar *orgtbl-table* nil*orgtbl-table*4453,170792
(defvar *orgtbl-rtn* nil*orgtbl-rtn*4455,170879
(defvar *orgtbl-hline* nil "Text used for horizontal lines.")*orgtbl-hline*4458,171013
(defvar *orgtbl-sep* nil "Text used as a column separator.")*orgtbl-sep*4459,171075
(defvar *orgtbl-default-fmt* nil "Default format for each entry.")*orgtbl-default-fmt*4460,171136
(defvar *orgtbl-fmt* nil "Format for each entry.")*orgtbl-fmt*4461,171203
(defvar *orgtbl-efmt* nil "Format for numbers.")*orgtbl-efmt*4462,171254
(defvar *orgtbl-lfmt* nil "Format for an entire line, overrides fmt.")*orgtbl-lfmt*4463,171303
(defvar *orgtbl-llfmt* nil "Specializes lfmt for the last row.")*orgtbl-llfmt*4464,171374
(defvar *orgtbl-lstart* nil "Text starting a row.")*orgtbl-lstart*4465,171439
(defvar *orgtbl-llstart* nil "Specializes lstart for the last row.")*orgtbl-llstart*4466,171491
(defvar *orgtbl-lend* nil "Text ending a row.")*orgtbl-lend*4467,171560
(defvar *orgtbl-llend* nil "Specializes lend for the last row.")*orgtbl-llend*4468,171608
(defsubst orgtbl-get-fmt (fmt i)orgtbl-get-fmt4470,171674
(defsubst orgtbl-apply-fmt (fmt &rest args)orgtbl-apply-fmt4476,171854
(defsubst orgtbl-eval-str (str)orgtbl-eval-str4483,172081
(defun orgtbl-format-line (line)orgtbl-format-line4489,172223
(defun orgtbl-format-section (section-stopper)orgtbl-format-section4513,173005
(defun orgtbl-to-generic (table params)orgtbl-to-generic4526,173479
(defun orgtbl-to-tsv (table params)orgtbl-to-tsv4653,179001
(defun orgtbl-to-csv (table params)orgtbl-to-csv4657,179183
(defun orgtbl-to-latex (table params)orgtbl-to-latex4665,179468
(defun orgtbl-to-html (table params)orgtbl-to-html4704,181327
(defun orgtbl-to-texinfo (table params)orgtbl-to-texinfo4735,182512
(defun orgtbl-to-orgtbl (table params)orgtbl-to-orgtbl4774,184284
(defun orgtbl-to-table.el (table params)orgtbl-to-table.el4796,185050
(defun orgtbl-to-unicode (table params)orgtbl-to-unicode4805,185361
(defun org-table-get-remote-range (name-or-id form)org-table-get-remote-range4821,186146

/home/malk/.emacs.d/elpa/org-20130128/ob-exp.el,1387
(defvar org-current-export-file)org-current-export-file31,1004
(defvar org-babel-lob-one-liner-regexp)org-babel-lob-one-liner-regexp32,1037
(defvar org-babel-ref-split-regexp)org-babel-ref-split-regexp33,1077
(defvar org-list-forbidden-blocks)org-list-forbidden-blocks34,1113
(defcustom org-export-babel-evaluate torg-export-babel-evaluate48,1794
(defun org-babel-exp-get-export-buffer ()org-babel-exp-get-export-buffer57,2095
(defmacro org-babel-exp-in-export-file (lang &rest body)org-babel-exp-in-export-file65,2424
(def-edebug-spec org-babel-exp-in-export-file (form body))org-babel-exp-in-export-file87,3333
(defun org-babel-exp-src-block (body &rest headers)org-babel-exp-src-block89,3393
(defcustom org-babel-exp-call-line-templateorg-babel-exp-call-line-template125,4711
(defvar org-babel-default-lob-header-args)org-babel-default-lob-header-args142,5224
(defun org-babel-exp-non-block-elements (start end)org-babel-exp-non-block-elements143,5267
(defun org-babel-in-example-or-verbatim ()org-babel-in-example-or-verbatim213,7720
(defun org-babel-exp-do-export (info type &optional hash)org-babel-exp-do-export226,8208
(defcustom org-babel-exp-code-templateorg-babel-exp-code-template240,9016
(defun org-babel-exp-code (info)org-babel-exp-code259,9747
(defun org-babel-exp-results (info type &optional silent hash)org-babel-exp-results282,10615

/home/malk/.emacs.d/elpa/org-20130128/org-beamer.el,3991
(defvar org-export-latex-header)org-export-latex-header34,1124
(defvar org-export-latex-options-plist)org-export-latex-options-plist35,1157
(defvar org-export-opt-plist)org-export-opt-plist36,1197
(defgroup org-beamer nilorg-beamer38,1228
(defcustom org-beamer-use-parts nilorg-beamer-use-parts43,1367
(defcustom org-beamer-frame-level 1org-beamer-frame-level49,1466
(defcustom org-beamer-frame-default-options ""org-beamer-frame-default-options61,1980
(defcustom org-beamer-column-view-formatorg-beamer-column-view-format68,2229
(defcustom org-beamer-themesorg-beamer-themes77,2609
(defconst org-beamer-column-widthsorg-beamer-column-widths88,3046
(defconst org-beamer-transitionsorg-beamer-transitions92,3207
(defconst org-beamer-environments-defaultorg-beamer-environments-default97,3541
(defcustom org-beamer-environments-extra nilorg-beamer-environments-extra134,5643
(defcustom org-beamer-inherited-properties nilorg-beamer-inherited-properties159,6532
(defvar org-beamer-frame-level-now nil)org-beamer-frame-level-now165,6710
(defvar org-beamer-header-extra nil)org-beamer-header-extra166,6750
(defvar org-beamer-export-is-beamer-p nil)org-beamer-export-is-beamer-p167,6787
(defvar org-beamer-inside-frame-at-level nil)org-beamer-inside-frame-at-level168,6830
(defvar org-beamer-columns-open nil)org-beamer-columns-open169,6876
(defvar org-beamer-column-open nil)org-beamer-column-open170,6913
(defun org-beamer-cleanup-column-width (width)org-beamer-cleanup-column-width172,6950
(defun org-beamer-open-column (&optional width opt)org-beamer-open-column180,7259
(defun org-beamer-close-column-maybe ()org-beamer-close-column-maybe185,7499
(defun org-beamer-open-columns-maybe (&optional opts)org-beamer-open-columns-maybe189,7641
(defun org-beamer-close-columns-maybe ()org-beamer-close-columns-maybe193,7826
(defun org-beamer-select-environment ()org-beamer-select-environment199,8007
(defun org-beamer-sectioning (level text)org-beamer-sectioning232,9235
(defvar org-beamer-extra)org-beamer-extra337,13873
(defvar org-beamer-option)org-beamer-option338,13899
(defvar org-beamer-action)org-beamer-action339,13926
(defvar org-beamer-defaction)org-beamer-defaction340,13953
(defvar org-beamer-environment)org-beamer-environment341,13983
(defun org-beamer-get-special (props)org-beamer-get-special342,14015
(defun org-beamer-assoc-not-empty (elt list)org-beamer-assoc-not-empty364,15053
(defvar org-beamer-mode-map (make-sparse-keymap)org-beamer-mode-map369,15184
(define-key org-beamer-mode-map "\C-c\C-b" 'org-beamer-select-environment)org-beamer-mode-map371,15272
(define-minor-mode org-beamer-modeorg-beamer-mode374,15363
(defun org-beamer-place-default-actions-for-lists ()org-beamer-place-default-actions-for-lists383,15643
(defun org-beamer-amend-header ()org-beamer-amend-header398,16279
(defcustom org-beamer-fragile-re "\\\\\\(verb\\|lstinline\\)\\|^[ \t]*\\\\begin{\\(verbatim\\|lstlisting\\|minted\\)}"org-beamer-fragile-re416,17030
(defface org-beamer-tag '((t (:box (:line-width 1 :color grey40))))org-beamer-tag422,17277
(defun org-beamer-initialize-open-trackers ()org-beamer-initialize-open-trackers430,17528
(defun org-beamer-after-initial-vars ()org-beamer-after-initial-vars437,17817
(defun org-beamer-auto-fragile-frames ()org-beamer-auto-fragile-frames509,20615
(defcustom org-beamer-outline-frame-title "Outline"org-beamer-outline-frame-title532,21577
(defcustom org-beamer-outline-frame-options nilorg-beamer-outline-frame-options539,21770
(defun org-beamer-fix-toc ()org-beamer-fix-toc548,22060
(defun org-beamer-property-changed (property value)org-beamer-property-changed562,22540
(defun org-beamer-select-beamer-code ()org-beamer-select-beamer-code579,23132
(defun org-insert-beamer-options-template (&optional kind)org-insert-beamer-options-template605,24127
(defun org-beamer-allowed-property-values (property)org-beamer-allowed-property-values636,25477

/home/malk/.emacs.d/elpa/org-20130128/ob-js.el,765
(defvar org-babel-default-header-args:js '()org-babel-default-header-args:js49,1563
(defvar org-babel-js-eoe "org-babel-js-eoe"org-babel-js-eoe52,1659
(defcustom org-babel-js-cmd "node"org-babel-js-cmd55,1759
(defvar org-babel-js-function-wrapperorg-babel-js-function-wrapper61,1898
(defun org-babel-execute:js (body params)org-babel-execute:js65,2050
(defun org-babel-js-read (results)org-babel-js-read96,3353
(defun org-babel-js-var-to-js (var)org-babel-js-var-to-js111,3965
(defun org-babel-prep-session:js (session params)org-babel-prep-session:js119,4245
(defun org-babel-variable-assignments:js (params)org-babel-variable-assignments:js132,4760
(defun org-babel-js-initiate-session (&optional session)org-babel-js-initiate-session139,5043

/home/malk/.emacs.d/elpa/org-20130128/org-remember.el,3734
(defvar remember-save-after-remembering)remember-save-after-remembering45,1585
(defvar remember-register)remember-register46,1626
(defvar remember-buffer)remember-buffer47,1653
(defvar remember-handler-functions)remember-handler-functions48,1678
(defvar remember-annotation-functions)remember-annotation-functions49,1714
(defvar org-clock-heading)org-clock-heading50,1753
(defvar org-clock-heading-for-remember)org-clock-heading-for-remember51,1780
(defgroup org-remember nilorg-remember53,1821
(defcustom org-remember-store-without-prompt torg-remember-store-without-prompt58,1939
(defcustom org-remember-interactive-interface 'refileorg-remember-interactive-interface71,2586
(defcustom org-remember-default-headline ""org-remember-default-headline89,3517
(defcustom org-remember-templates nilorg-remember-templates97,3827
(defcustom org-remember-delete-empty-lines-at-end torg-remember-delete-empty-lines-at-end209,9461
(defcustom org-remember-before-finalize-hook nilorg-remember-before-finalize-hook214,9620
(defvar org-remember-mode-map (make-sparse-keymap)org-remember-mode-map220,9833
(defvar org-remember-mode-hook nilorg-remember-mode-hook224,10027
(define-minor-mode org-remember-modeorg-remember-mode227,10108
(define-key org-remember-mode-map "\C-c\C-c" 'org-remember-finalize)org-remember-mode-map231,10281
(define-key org-remember-mode-map "\C-c\C-k" 'org-remember-kill)org-remember-mode-map232,10350
(defcustom org-remember-clock-out-on-exit 'queryorg-remember-clock-out-on-exit234,10416
(defcustom org-remember-backup-directory nilorg-remember-backup-directory246,10953
(defcustom org-remember-auto-remove-backup-files torg-remember-auto-remove-backup-files257,11399
(defcustom org-remember-warn-about-backups torg-remember-warn-about-backups268,11887
(defun org-remember-insinuate ()org-remember-insinuate281,12363
(defun org-remember-annotation ()org-remember-annotation289,12671
(defconst org-remember-helporg-remember-help296,13007
(defvar org-jump-to-target-location nil)org-jump-to-target-location303,13353
(defvar org-remember-previous-location nil)org-remember-previous-location304,13394
(defvar org-remember-reference-date nil)org-remember-reference-date305,13438
(defvar org-force-remember-template-char) ;; dynamically scopedorg-force-remember-template-char306,13479
(defvar org-select-template-temp-major-mode nil)org-select-template-temp-major-mode309,13605
(defvar org-select-template-original-buffer nil)org-select-template-original-buffer312,13716
(defun org-select-remember-template (&optional use-char)org-select-remember-template314,13766
(defun org-remember-apply-template (&optional use-char skip-interactive)org-remember-apply-template396,16633
(defun org-remember-escaped-% ()org-remember-escaped-%666,27102
(defun org-remember-finish-immediately ()org-remember-finish-immediately674,27278
(defun org-remember-visit-immediately ()org-remember-visit-immediately681,27533
(defvar org-clock-marker) ; Defined in org.elorg-clock-marker696,27997
(defun org-remember-finalize ()org-remember-finalize697,28043
(defun org-remember-kill ()org-remember-kill717,28865
(defun org-remember (&optional goto org-force-remember-template-char)org-remember724,29023
(defvar org-remember-last-stored-marker (make-marker)org-remember-last-stored-marker761,30548
(defun org-remember-goto-last-stored ()org-remember-goto-last-stored764,30679
(defun org-go-to-remember-target (&optional template-key)org-go-to-remember-target771,30947
(defun org-remember-handler ()org-remember-handler800,32182
(defun org-do-remember (&optional initial)org-do-remember1115,44105
(defun org-require-remember ()org-require-remember1119,44190

/home/malk/.emacs.d/elpa/org-20130128/org-info.el,278
(defvar Info-current-file)Info-current-file39,1387
(defvar Info-current-node)Info-current-node40,1414
(defun org-info-store-link ()org-info-store-link47,1586
(defun org-info-open (path)org-info-open61,2060
(defun org-info-follow-link (name)org-info-follow-link66,2178

/home/malk/.emacs.d/elpa/org-20130128/org-mhe.el,942
(defcustom org-mhe-search-all-folders nilorg-mhe-search-all-folders37,1294
(defvar mh-progs)mh-progs68,2852
(defvar mh-current-folder)mh-current-folder69,2870
(defvar mh-show-folder-buffer)mh-show-folder-buffer70,2897
(defvar mh-index-folder)mh-index-folder71,2928
(defvar mh-searcher)mh-searcher72,2953
(defvar mh-search-regexp-builder)mh-search-regexp-builder73,2974
(defun org-mhe-store-link ()org-mhe-store-link80,3150
(defun org-mhe-open (path)org-mhe-open107,4236
(defun org-mhe-get-message-real-folder ()org-mhe-get-message-real-folder117,4596
(defun org-mhe-get-message-folder-from-index ()org-mhe-get-message-folder-from-index149,5569
(defun org-mhe-get-message-folder ()org-mhe-get-message-folder156,5820
(defun org-mhe-get-message-num ()org-mhe-get-message-num165,6087
(defun org-mhe-get-header (header)org-mhe-get-header174,6359
(defun org-mhe-follow-link (folder article)org-mhe-follow-link194,7094

/home/malk/.emacs.d/elpa/org-20130128/ob-ruby.el,1387
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts48,1558
(defvar org-babel-default-header-args:ruby '())org-babel-default-header-args:ruby51,1654
(defvar org-babel-ruby-command "ruby"org-babel-ruby-command53,1703
(defun org-babel-execute:ruby (body params)org-babel-execute:ruby56,1795
(defun org-babel-prep-session:ruby (session params)org-babel-prep-session:ruby80,2803
(defun org-babel-load-session:ruby (session body params)org-babel-load-session:ruby93,3403
(defun org-babel-variable-assignments:ruby (params)org-babel-variable-assignments:ruby104,3764
(defun org-babel-ruby-var-to-ruby (var)org-babel-ruby-var-to-ruby113,4054
(defun org-babel-ruby-table-or-string (results)org-babel-ruby-table-or-string121,4346
(defun org-babel-ruby-initiate-session (&optional session params)org-babel-ruby-initiate-session127,4601
(defvar org-babel-ruby-eoe-indicator ":org_babel_ruby_eoe"org-babel-ruby-eoe-indicator140,5138
(defvar org-babel-ruby-f-writeorg-babel-ruby-f-write142,5252
(defvar org-babel-ruby-pp-f-writeorg-babel-ruby-pp-f-write144,5358
(defvar org-babel-ruby-wrapper-methodorg-babel-ruby-wrapper-method146,5467
(defvar org-babel-ruby-pp-wrapper-methodorg-babel-ruby-pp-wrapper-method154,5638
(defun org-babel-ruby-evaluateorg-babel-ruby-evaluate167,5794
(defun org-babel-ruby-read-string (string)org-babel-ruby-read-string235,8166

/home/malk/.emacs.d/elpa/org-20130128/ob-ref.el,801
(defvar org-babel-ref-split-regexporg-babel-ref-split-regexp67,2275
(defvar org-babel-update-intermediate nilorg-babel-update-intermediate70,2391
(defun org-babel-ref-parse (assignment)org-babel-ref-parse73,2515
(defun org-babel-ref-goto-headline-id (id)org-babel-ref-goto-headline-id93,3318
(defun org-babel-ref-headline-body ()org-babel-ref-headline-body108,3798
(defvar org-babel-library-of-babel)org-babel-library-of-babel120,4125
(defun org-babel-ref-resolve (ref)org-babel-ref-resolve121,4161
(defun org-babel-ref-index-list (index lis)org-babel-ref-index-list208,7658
(defun org-babel-ref-split-args (arg-string)org-babel-ref-split-args247,9290
(defvar org-bracket-link-regexp)org-bracket-link-regexp251,9477
(defun org-babel-ref-at-ref-p ()org-babel-ref-at-ref-p252,9510

/home/malk/.emacs.d/elpa/org-20130128/org-docview.el,190
(defun org-docview-open (link)org-docview-open57,1908
(defun org-docview-store-link ()org-docview-store-link66,2257
(defun org-docview-complete-link ()org-docview-complete-link79,2668

/home/malk/.emacs.d/elpa/org-20130128/ob-plantuml.el,340
(defvar org-babel-default-header-args:plantumlorg-babel-default-header-args:plantuml40,1301
(defcustom org-plantuml-jar-path nilorg-plantuml-jar-path44,1460
(defun org-babel-execute:plantuml (body params)org-babel-execute:plantuml50,1588
(defun org-babel-prep-session:plantuml (session params)org-babel-prep-session:plantuml78,2840

/home/malk/.emacs.d/elpa/org-20130128/org-gnus.el,784
(defcustom org-gnus-prefer-web-links nilorg-gnus-prefer-web-links49,1922
(defcustom org-gnus-nnimap-query-article-no-from-file nilorg-gnus-nnimap-query-article-no-from-file57,2255
(defun org-gnus-nnimap-cached-article-number (group server message-id)org-gnus-nnimap-cached-article-number76,2921
(defun org-gnus-group-link (group)org-gnus-group-link92,3576
(defun org-gnus-article-link (group newsgroups message-id x-no-archive)org-gnus-article-link110,4313
(defun org-gnus-store-link ()org-gnus-store-link131,5295
(defun org-gnus-open-nntp (path)org-gnus-open-nntp219,9027
(defun org-gnus-open (path)org-gnus-open229,9344
(defun org-gnus-follow-link (&optional group article)org-gnus-follow-link242,9801
(defun org-gnus-no-new-news ()org-gnus-no-new-news288,11436

/home/malk/.emacs.d/elpa/org-20130128/ob-tangle.el,1987
(defcustom org-babel-tangle-lang-extsorg-babel-tangle-lang-exts41,1440
(defcustom org-babel-post-tangle-hook nilorg-babel-post-tangle-hook55,1921
(defcustom org-babel-pre-tangle-hook '(save-buffer)org-babel-pre-tangle-hook61,2075
(defcustom org-babel-tangle-body-hook nilorg-babel-tangle-body-hook67,2234
(defcustom org-babel-tangle-comment-format-beg "[[%link][%source-name]]"org-babel-tangle-comment-format-beg73,2386
(defcustom org-babel-tangle-comment-format-end "%source-name ends here"org-babel-tangle-comment-format-end88,3005
(defcustom org-babel-process-comment-text #'org-babel-trimorg-babel-process-comment-text103,3623
(defun org-babel-find-file-noselect-refresh (file)org-babel-find-file-noselect-refresh112,3975
(defmacro org-babel-with-temp-filebuffer (file &rest body)org-babel-with-temp-filebuffer119,4213
(def-edebug-spec org-babel-with-temp-filebuffer (form body))org-babel-with-temp-filebuffer137,4972
(defun org-babel-load-file (file)org-babel-load-file140,5049
(defun org-babel-tangle-file (file &optional target-file lang)org-babel-tangle-file161,5868
(defun org-babel-tangle-publish (_ filename pub-dir)org-babel-tangle-publish177,6549
(defun org-babel-tangle (&optional only-this-block target-file lang)org-babel-tangle182,6754
(defun org-babel-tangle-clean ()org-babel-tangle-clean283,10728
(defvar org-stored-links)org-stored-links297,11402
(defvar org-bracket-link-regexp)org-bracket-link-regexp298,11428
(defun org-babel-spec-to-string (spec)org-babel-spec-to-string299,11461
(defun org-babel-tangle-collect-blocks (&optional language)org-babel-tangle-collect-blocks346,13163
(defun org-babel-tangle-comment-links ( &optional info)org-babel-tangle-comment-links439,16593
(defvar org-bracket-link-analytic-regexp)org-bracket-link-analytic-regexp457,17402
(defun org-babel-detangle (&optional source-code-file)org-babel-detangle458,17444
(defun org-babel-tangle-jump-to-org ()org-babel-tangle-jump-to-org479,18340

/home/malk/.emacs.d/elpa/org-20130128/ob-lisp.el,562
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts40,1276
(defvar org-babel-default-header-args:lisp '())org-babel-default-header-args:lisp43,1374
(defvar org-babel-header-args:lisp '((package . :any)))org-babel-header-args:lisp44,1422
(defcustom org-babel-lisp-dir-fmtorg-babel-lisp-dir-fmt46,1479
(defun org-babel-expand-body:lisp (body params)org-babel-expand-body:lisp55,1786
(defun org-babel-execute:lisp (body params)org-babel-execute:lisp74,2408
(defun org-babel-lisp-vector-to-list (results)org-babel-lisp-vector-to-list100,3364

/home/malk/.emacs.d/elpa/org-20130128/org-lparse.el,11327
(defun org-lparse-and-open (target-backend native-backend argorg-lparse-and-open53,1950
(defun org-lparse-batch (target-backend &optional native-backend)org-lparse-batch73,2805
(defun org-lparse-to-buffer (backend arg)org-lparse-to-buffer84,3264
(defun org-replace-region-by (backend beg end)org-replace-region-by93,3650
(defun org-lparse-region (backend beg end &optional body-only buffer)org-lparse-region114,4442
(defvar org-lparse-par-open nil)org-lparse-par-open140,5671
(defun org-lparse-should-inline-p (filename descp)org-lparse-should-inline-p142,5705
(defun org-lparse-format-org-link (line opt-plist)org-lparse-format-org-link154,6296
(defvar org-lparse-par-open-stashed)	; bound during `org-do-lparse'org-lparse-par-open-stashed303,11006
(defun org-lparse-stash-save-paragraph-state ()org-lparse-stash-save-paragraph-state304,11074
(defun org-lparse-stash-pop-paragraph-state ()org-lparse-stash-pop-paragraph-state309,11261
(defmacro with-org-lparse-preserve-paragraph-state (&rest body)with-org-lparse-preserve-paragraph-state313,11406
(def-edebug-spec with-org-lparse-preserve-paragraph-state (body))with-org-lparse-preserve-paragraph-state319,11642
(defvar org-lparse-native-backends nilorg-lparse-native-backends321,11709
(defun org-lparse-register-backend (backend)org-lparse-register-backend340,12447
(defun org-lparse-unregister-backend (backend)org-lparse-unregister-backend350,12827
(defun org-lparse-do-reachable-formats (in-fmt)org-lparse-do-reachable-formats358,13080
(defun org-lparse-reachable-formats (in-fmt)org-lparse-reachable-formats375,13823
(defun org-lparse-reachable-p (in-fmt out-fmt)org-lparse-reachable-p385,14160
(defun org-lparse-backend-is-native-p (backend)org-lparse-backend-is-native-p394,14511
(defun org-lparse (target-backend native-backend argorg-lparse397,14607
(defcustom org-lparse-use-flashy-warning nilorg-lparse-use-flashy-warning452,17106
(defun org-lparse-convert-read-params ()org-lparse-convert-read-params459,17374
(defun org-lparse-do-convert (in-file out-fmt &optional prefix-arg)org-lparse-do-convert481,18138
(defvar org-lparse-insert-tag-with-newlines 'both)org-lparse-insert-tag-with-newlines524,19680
(defvar org-lparse-dyn-first-heading-pos)org-lparse-dyn-first-heading-pos527,19789
(defvar org-lparse-toc)org-lparse-toc528,19831
(defvar org-lparse-entity-control-callbacks-alist)org-lparse-entity-control-callbacks-alist529,19855
(defvar org-lparse-entity-format-callbacks-alist)org-lparse-entity-format-callbacks-alist530,19906
(defvar org-lparse-backend nilorg-lparse-backend531,19956
(defvar org-lparse-other-backend nilorg-lparse-other-backend542,20371
(defvar org-lparse-body-only nilorg-lparse-body-only555,20973
(defvar org-lparse-to-buffer nilorg-lparse-to-buffer558,21056
(defun org-lparse-get-block-params (params)org-lparse-get-block-params561,21139
(defvar org-heading-keyword-regexp-format) ; defined in org.elorg-heading-keyword-regexp-format569,21385
(defvar org-lparse-special-blocks '("list-table" "annotation"))org-lparse-special-blocks570,21448
(defun org-do-lparse (arg &optional hidden ext-plistorg-do-lparse571,21512
(defun org-lparse-format-table (lines olines)org-lparse-format-table1146,41934
(defun org-lparse-table-get-colalign-info (lines)org-lparse-table-get-colalign-info1164,42726
(defvar org-lparse-table-style)org-lparse-table-style1172,43045
(defvar org-lparse-table-ncols)org-lparse-table-ncols1173,43077
(defvar org-lparse-table-rownum)org-lparse-table-rownum1174,43109
(defvar org-lparse-table-is-styled)org-lparse-table-is-styled1175,43142
(defvar org-lparse-table-begin-marker)org-lparse-table-begin-marker1176,43178
(defvar org-lparse-table-num-numeric-items-per-column)org-lparse-table-num-numeric-items-per-column1177,43217
(defvar org-lparse-table-colalign-info)org-lparse-table-colalign-info1178,43272
(defvar org-lparse-table-colalign-vector)org-lparse-table-colalign-vector1179,43312
(defvar org-table-number-fraction)org-table-number-fraction1182,43406
(defvar org-table-number-regexp)org-table-number-regexp1183,43441
(defun org-lparse-org-table-to-list-table (lines &optional splice)org-lparse-org-table-to-list-table1184,43474
(defun org-lparse-insert-org-table (lines &optional splice)org-lparse-insert-org-table1209,44401
(defun org-lparse-insert-list-table (lines &optional spliceorg-lparse-insert-list-table1244,46182
(defun org-lparse-format-org-table (lines &optional splice)org-lparse-format-org-table1279,47430
(defun org-lparse-format-list-table (lines &optional splice)org-lparse-format-list-table1284,47621
(defun org-lparse-insert-table-table (lines)org-lparse-insert-table-table1289,47814
(defun org-lparse-format-table-table (lines)org-lparse-format-table-table1328,49317
(defvar table-source-languages)		; defined in table.eltable-source-languages1333,49488
(defun org-lparse-format-table-table-using-table-generate-source (backendorg-lparse-format-table-table-using-table-generate-source1334,49543
(defun org-lparse-handle-time-stamps (s)org-lparse-handle-time-stamps1380,51285
(defun org-xml-encode-plain-text (s)org-xml-encode-plain-text1412,52210
(defun org-xml-encode-org-text-skip-links (string)org-xml-encode-org-text-skip-links1423,52598
(defun org-xml-encode-org-text (s)org-xml-encode-org-text1440,53251
(defun org-lparse-convert-special-strings (string)org-lparse-convert-special-strings1464,54222
(defun org-lparse-apply-sub-superscript-styles (string)org-lparse-apply-sub-superscript-styles1476,54681
(defvar org-lparse-char-stylesorg-lparse-char-styles1501,55680
(defun org-lparse-apply-char-styles (string)org-lparse-apply-char-styles1512,55949
(defun org-lparse-export-list-line (line pos struct prevs)org-lparse-export-list-line1535,56678
(defun org-lparse-bind-local-variables (opt-plist)org-lparse-bind-local-variables1634,59946
(defvar org-lparse-table-rowgrp-open)org-lparse-table-rowgrp-open1640,60123
(defvar org-lparse-table-cur-rowgrp-is-hdr)org-lparse-table-cur-rowgrp-is-hdr1641,60161
(defvar org-lparse-footnote-number)org-lparse-footnote-number1642,60205
(defvar org-lparse-footnote-definitions)org-lparse-footnote-definitions1643,60241
(defvar org-lparse-output-buffer nilorg-lparse-output-buffer1644,60282
(defcustom org-lparse-debug nilorg-lparse-debug1649,60442
(defun org-lparse-begin (entity &rest args)org-lparse-begin1669,61330
(defun org-lparse-end (entity &rest args)org-lparse-end1686,61945
(defun org-lparse-begin-paragraph (&optional style)org-lparse-begin-paragraph1704,62555
(defun org-lparse-end-paragraph ()org-lparse-end-paragraph1710,62766
(defun org-lparse-end-list-item-1 (&optional type)org-lparse-end-list-item-11716,62941
(defun org-lparse-preprocess-after-blockquote ()org-lparse-preprocess-after-blockquote1726,63227
(defun org-lparse-strip-experimental-blocks-maybe ()org-lparse-strip-experimental-blocks-maybe1744,63898
(defvar org-lparse-list-table-p nilorg-lparse-list-table-p1759,64483
(defvar org-lparse-dyn-current-environment nil)org-lparse-dyn-current-environment1762,64576
(defun org-lparse-begin-environment (style &optional env-options-plist)org-lparse-begin-environment1763,64624
(defun org-lparse-end-environment (style &optional env-options-plist)org-lparse-end-environment1770,64888
(defun org-lparse-current-environment-p (style)org-lparse-current-environment-p1777,65147
(defun org-lparse-begin-footnote-definition (n)org-lparse-begin-footnote-definition1780,65245
(defun org-lparse-end-footnote-definition (n)org-lparse-end-footnote-definition1785,65417
(defvar org-lparse-collect-buffer nilorg-lparse-collect-buffer1797,65984
(defvar org-lparse-collect-count nilorg-lparse-collect-count1803,66263
(defun org-lparse-begin-collect ()org-lparse-begin-collect1808,66426
(defun org-lparse-end-collect ()org-lparse-end-collect1820,66869
(defun org-lparse-format (entity &rest args)org-lparse-format1829,67171
(defun org-lparse-insert (entity &rest args)org-lparse-insert1849,67894
(defun org-lparse-prepare-toc (lines level-offset opt-plist umax-toc)org-lparse-prepare-toc1852,67991
(defun org-lparse-format-table-row (fields &optional text-for-empty-fields)org-lparse-format-table-row1920,70211
(defun org-lparse-get (what &optional opt-plist)org-lparse-get1963,71897
(defun org-lparse-backend-get (backend what &optional opt-plist)org-lparse-backend-get1970,72222
(defun org-lparse-insert-tag (tag &rest args)org-lparse-insert-tag1989,73083
(defun org-lparse-get-targets-from-title (title)org-lparse-get-targets-from-title1996,73340
(defun org-lparse-suffix-from-snumber (snumber)org-lparse-suffix-from-snumber2003,73647
(defun org-lparse-begin-level (level title umax head-count)org-lparse-begin-level2009,73885
(defun org-lparse-end-level (level umax)org-lparse-end-level2041,75314
(defvar org-lparse-outline-text-open)org-lparse-outline-text-open2052,75703
(defun org-lparse-begin-outline-and-outline-text (level1 snumber title tagsorg-lparse-begin-outline-and-outline-text2053,75741
(defun org-lparse-end-outline-text-or-outline ()org-lparse-end-outline-text-or-outline2060,76022
(defun org-lparse-begin-outline-text (level1 snumber extra-class)org-lparse-begin-outline-text2067,76228
(defun org-lparse-html-list-type-to-canonical-list-type (ltype)org-lparse-html-list-type-to-canonical-list-type2072,76446
(defvar org-lparse-list-stack)org-lparse-list-stack2078,76658
(defvar org-lparse-list-table:table-row)org-lparse-list-table:table-row2079,76689
(defvar org-lparse-list-table:lines)org-lparse-list-table:lines2080,76730
(defun org-lparse-begin-list (ltype)org-lparse-begin-list2118,77862
(defun org-lparse-end-list (ltype)org-lparse-end-list2134,78333
(defun org-lparse-begin-list-item (ltype &optional arg headline)org-lparse-begin-list-item2150,78788
(defun org-lparse-end-list-item (ltype)org-lparse-end-list-item2166,79375
(defvar org-lparse-list-table:table-cell-open)org-lparse-list-table:table-cell-open2183,79939
(defun org-lparse-begin-list-table:table-cell ()org-lparse-begin-list-table:table-cell2184,79986
(defun org-lparse-end-list-table:table-cell ()org-lparse-end-list-table:table-cell2190,80187
(defvar org-lparse-table-rowgrp-info)org-lparse-table-rowgrp-info2197,80438
(defun org-lparse-begin-table-rowgroup (&optional is-header-row)org-lparse-begin-table-rowgroup2198,80476
(defun org-lparse-end-table ()org-lparse-end-table2202,80675
(defvar org-lparse-encode-pending nil)org-lparse-encode-pending2222,81279
(defun org-lparse-format-tags (tag text prefix suffix &rest args)org-lparse-format-tags2224,81319
(defun org-xml-fix-class-name (kwd) 	; audit callers of this functionorg-xml-fix-class-name2232,81587
(defun org-lparse-format-todo (todo)org-lparse-format-todo2240,81864
(defun org-lparse-format-extra-targets (extra-targets)org-lparse-format-extra-targets2248,82128
(defun org-lparse-format-org-tags (tags)org-lparse-format-org-tags2256,82389
(defun org-lparse-format-section-number (&optional snumber level)org-lparse-format-section-number2269,82743
(defun org-lparse-warn (msg)org-lparse-warn2274,82978
(defun org-xml-format-href (s)org-xml-format-href2281,83181
(defun org-xml-format-desc (s)org-xml-format-desc2290,83451

/home/malk/.emacs.d/elpa/org-20130128/ob.el,12841
(defconst org-babel-exeextorg-babel-exeext32,1019
(defvar org-babel-call-process-region-original)org-babel-call-process-region-original36,1115
(defvar org-src-lang-modes)org-src-lang-modes37,1163
(defvar org-babel-library-of-babel)org-babel-library-of-babel38,1191
(defgroup org-babel nilorg-babel94,4490
(defcustom org-confirm-babel-evaluate torg-confirm-babel-evaluate99,4611
(defcustom org-babel-no-eval-on-ctrl-c-ctrl-c nilorg-babel-no-eval-on-ctrl-c-ctrl-c123,5780
(defcustom org-babel-results-keyword "RESULTS"org-babel-results-keyword129,5950
(defcustom org-babel-noweb-wrap-start "<<"org-babel-noweb-wrap-start136,6167
(defcustom org-babel-noweb-wrap-end ">>"org-babel-noweb-wrap-end142,6345
(defun org-babel-noweb-wrap (&optional regexp)org-babel-noweb-wrap148,6521
(defvar org-babel-src-name-regexporg-babel-src-name-regexp153,6688
(defvar org-babel-multi-line-header-regexporg-babel-multi-line-header-regexp157,6808
(defvar org-babel-src-name-w-name-regexporg-babel-src-name-w-name-regexp161,6963
(defvar org-babel-src-block-regexporg-babel-src-block-regexp169,7213
(defvar org-babel-inline-src-block-regexporg-babel-inline-src-block-regexp181,7591
(defun org-babel-get-header (params key &optional others)org-babel-get-header191,7895
(defun org-babel-get-inline-src-block-matches()org-babel-get-inline-src-block-matches200,8222
(defvar org-babel-inline-lob-one-liner-regexp)org-babel-inline-lob-one-liner-regexp222,9025
(defun org-babel-get-lob-one-liner-matches()org-babel-get-lob-one-liner-matches223,9072
(defun org-babel-get-src-block-info (&optional light)org-babel-get-src-block-info233,9413
(defvar org-current-export-file) ; dynamically boundorg-current-export-file280,11268
(defun org-babel-confirm-evaluate (info)org-babel-confirm-evaluate281,11321
(defun org-babel-execute-safely-maybe ()org-babel-execute-safely-maybe319,12846
(defun org-babel-execute-maybe ()org-babel-execute-maybe326,13048
(defun org-babel-execute-src-block-maybe ()org-babel-execute-src-block-maybe331,13179
(defun org-babel-view-src-block-info ()org-babel-view-src-block-info342,13570
(defun org-babel-expand-src-block-maybe ()org-babel-expand-src-block-maybe370,14734
(defun org-babel-load-in-session-maybe ()org-babel-load-in-session-maybe381,15088
(defun org-babel-pop-to-session-maybe ()org-babel-pop-to-session-maybe394,15512
(defconst org-babel-common-header-args-w-valuesorg-babel-common-header-args-w-values404,15896
(defconst org-babel-header-arg-namesorg-babel-header-arg-names434,16737
(defvar org-babel-default-header-argsorg-babel-default-header-args440,16974
(defvar org-babel-default-inline-header-argsorg-babel-default-inline-header-args446,17239
(defvar org-babel-data-names '("tblname" "results" "name"))org-babel-data-names450,17426
(defvar org-babel-result-regexporg-babel-result-regexp452,17487
(defvar org-babel-result-w-name-regexporg-babel-result-w-name-regexp460,17782
(defvar org-babel-min-lines-for-block-output 10org-babel-min-lines-for-block-output464,17908
(defvar org-babel-noweb-error-langs nilorg-babel-noweb-error-langs472,18305
(defvar org-babel-hash-show 4org-babel-hash-show478,18563
(defvar org-babel-after-execute-hook nilorg-babel-after-execute-hook481,18662
(defun org-babel-named-src-block-regexp-for-name (name)org-babel-named-src-block-regexp-for-name484,18777
(defun org-babel-named-data-regexp-for-name (name)org-babel-named-data-regexp-for-name490,19040
(defvar call-process-region)call-process-region495,19239
(defun org-babel-execute-src-block (&optional arg info params)org-babel-execute-src-block498,19284
(defun org-babel-expand-body:generic (body params &optional var-lines)org-babel-expand-body:generic587,22852
(defun org-babel-expand-src-block (&optional arg info params)org-babel-expand-src-block596,23253
(defun org-babel-edit-distance (s1 s2)org-babel-edit-distance621,24396
(defun org-babel-combine-header-arg-lists (original &rest others)org-babel-combine-header-arg-lists639,25088
(defun org-babel-check-src-block ()org-babel-check-src-block653,25536
(defun org-babel-insert-header-arg ()org-babel-insert-header-arg675,26473
(defun org-babel-header-arg-expand ()org-babel-header-arg-expand708,27525
(defun org-babel-enter-header-arg-w-completion (&optional lang)org-babel-enter-header-arg-w-completion713,27781
(defun org-babel-load-in-session (&optional arg info)org-babel-load-in-session732,28716
(defun org-babel-initiate-session (&optional arg info)org-babel-initiate-session756,29668
(defun org-babel-switch-to-session (&optional arg info)org-babel-switch-to-session785,30964
(defalias 'org-babel-pop-to-session 'org-babel-switch-to-session)org-babel-pop-to-session794,31315
(defun org-babel-switch-to-session-with-code (&optional arg info)org-babel-switch-to-session-with-code797,31397
(defmacro org-babel-do-in-edit-buffer (&rest body)org-babel-do-in-edit-buffer813,31975
(def-edebug-spec org-babel-do-in-edit-buffer (body))org-babel-do-in-edit-buffer823,32426
(defun org-babel-do-key-sequence-in-edit-buffer (key)org-babel-do-key-sequence-in-edit-buffer825,32480
(defvar org-bracket-link-regexp)org-bracket-link-regexp839,33163
(defun org-babel-open-src-block-result (&optional re-run)org-babel-open-src-block-result842,33212
(defmacro org-babel-map-src-blocks (file &rest body)org-babel-map-src-blocks869,34242
(def-edebug-spec org-babel-map-src-blocks (form body))org-babel-map-src-blocks921,36443
(defmacro org-babel-map-inline-src-blocks (file &rest body)org-babel-map-inline-src-blocks924,36514
(def-edebug-spec org-babel-map-inline-src-blocks (form body))org-babel-map-inline-src-blocks944,37307
(defvar org-babel-lob-one-liner-regexp)org-babel-lob-one-liner-regexp946,37370
(defmacro org-babel-map-call-lines (file &rest body)org-babel-map-call-lines949,37426
(def-edebug-spec org-babel-map-call-lines (form body))org-babel-map-call-lines969,38199
(defmacro org-babel-map-executables (file &rest body)org-babel-map-executables972,38270
(def-edebug-spec org-babel-map-executables (form body))org-babel-map-executables994,39138
(defun org-babel-execute-buffer (&optional arg)org-babel-execute-buffer997,39210
(defun org-babel-execute-subtree (&optional arg)org-babel-execute-subtree1010,39663
(defun org-babel-sha1-hash (&optional info)org-babel-sha1-hash1022,39998
(defun org-babel-current-result-hash ()org-babel-current-result-hash1063,41359
(defun org-babel-set-current-result-hash (hash)org-babel-set-current-result-hash1068,41519
(defun org-babel-hide-hash ()org-babel-hide-hash1076,41822
(defun org-babel-hide-all-hashes ()org-babel-hide-all-hashes1094,42549
(defun org-babel-hash-at-point (&optional point)org-babel-hash-at-point1106,43008
(defun org-babel-result-hide-spec ()org-babel-result-hide-spec1117,43477
(defvar org-babel-hide-result-overlays nilorg-babel-hide-result-overlays1124,43754
(defun org-babel-result-hide-all ()org-babel-result-hide-all1127,43828
(defun org-babel-show-result-all ()org-babel-show-result-all1136,44151
(defun org-babel-hide-result-toggle-maybe ()org-babel-hide-result-toggle-maybe1142,44350
(defun org-babel-hide-result-toggle (&optional force)org-babel-hide-result-toggle1153,44727
(defvar org-file-properties)org-file-properties1200,46880
(defun org-babel-params-from-properties (&optional lang)org-babel-params-from-properties1201,46909
(defvar org-src-preserve-indentation)org-src-preserve-indentation1224,47665
(defun org-babel-parse-src-block-match ()org-babel-parse-src-block-match1225,47703
(defun org-babel-parse-inline-src-block-match ()org-babel-parse-inline-src-block-match1257,49013
(defun org-babel-balanced-split (string alts)org-babel-balanced-split1270,49670
(defun org-babel-join-splits-near-ch (ch list)org-babel-join-splits-near-ch1303,50986
(defun org-babel-parse-header-arguments (arg-string)org-babel-parse-header-arguments1315,51445
(defun org-babel-parse-multiple-vars (header-arguments)org-babel-parse-multiple-vars1332,52078
(defun org-babel-process-params (params)org-babel-process-params1349,52612
(defun org-babel-del-hlines (table)org-babel-del-hlines1384,53942
(defun org-babel-get-colnames (table)org-babel-get-colnames1388,54039
(defun org-babel-get-rownames (table)org-babel-get-rownames1397,54359
(defun org-babel-put-colnames (table colnames)org-babel-put-colnames1417,55133
(defun org-babel-put-rownames (table rownames)org-babel-put-rownames1421,55281
(defun org-babel-pick-name (names selector)org-babel-pick-name1430,55542
(defun org-babel-disassemble-tables (vars hlines colnames rownames)org-babel-disassemble-tables1444,56059
(defun org-babel-reassemble-table (table colnames rownames)org-babel-reassemble-table1472,57317
(defun org-babel-where-is-src-block-head ()org-babel-where-is-src-block-head1485,57901
(defun org-babel-goto-src-block-head ()org-babel-goto-src-block-head1516,59200
(defun org-babel-goto-named-src-block (name)org-babel-goto-named-src-block1524,59455
(defun org-babel-find-named-block (name)org-babel-find-named-block1559,60832
(defun org-babel-src-block-names (&optional file)org-babel-src-block-names1572,61335
(defun org-babel-goto-named-result (name)org-babel-goto-named-result1582,61716
(defun org-babel-find-named-result (name &optional point)org-babel-find-named-result1594,62156
(defun org-babel-result-names (&optional file)org-babel-result-names1612,62893
(defun org-babel-next-src-block (&optional arg)org-babel-next-src-block1622,63263
(defun org-babel-previous-src-block (&optional arg)org-babel-previous-src-block1633,63714
(defvar org-babel-load-languages)org-babel-load-languages1642,64095
(defun org-babel-mark-block ()org-babel-mark-block1645,64145
(defun org-babel-demarcate-block (&optional arg)org-babel-demarcate-block1657,64461
(defvar org-babel-lob-one-liner-regexp)org-babel-lob-one-liner-regexp1706,66328
(defun org-babel-where-is-src-block-result (&optional insert info hash indent)org-babel-where-is-src-block-result1707,66368
(defvar org-block-regexp)org-block-regexp1784,69115
(defun org-babel-read-result ()org-babel-read-result1785,69141
(defun org-babel-read-table ()org-babel-read-table1809,70124
(defun org-babel-read-list ()org-babel-read-list1816,70400
(defvar org-link-types-re)org-link-types-re1821,70589
(defun org-babel-read-link ()org-babel-read-link1822,70616
(defun org-babel-format-result (result &optional sep)org-babel-format-result1838,71220
(defun org-babel-insert-resultorg-babel-insert-result1848,71550
(defun org-babel-remove-result (&optional info)org-babel-remove-result2016,78241
(defun org-babel-result-end ()org-babel-result-end2026,78608
(defun org-babel-result-to-file (result &optional description)org-babel-result-to-file2047,79445
(defvar org-babel-capitalize-examplize-region-markers nilorg-babel-capitalize-examplize-region-markers2062,80045
(defun org-babel-examplize-region (beg end &optional results-switches)org-babel-examplize-region2065,80184
(defun org-babel-update-block-body (new-body)org-babel-update-block-body2095,81448
(defun org-babel-merge-params (&rest plists)org-babel-merge-params2103,81795
(defvar *org-babel-use-quick-and-dirty-noweb-expansion* nil*org-babel-use-quick-and-dirty-noweb-expansion*2220,85980
(defun org-babel-noweb-p (params context)org-babel-noweb-p2226,86293
(defun org-babel-expand-noweb-references (&optional info parent-buffer)org-babel-expand-noweb-references2241,86823
(defun org-babel-script-escape (str &optional force)org-babel-script-escape2373,91935
(defun org-babel-read (cell &optional inhibit-lisp-eval)org-babel-read2420,93357
(defun org-babel-number-p (string)org-babel-number-p2437,94105
(defun org-babel-import-elisp-from-file (file-name &optional separator)org-babel-import-elisp-from-file2445,94389
(defun org-babel-string-read (cell)org-babel-string-read2467,95137
(defun org-babel-reverse-string (string)org-babel-reverse-string2474,95406
(defun org-babel-chomp (string &optional regexp)org-babel-chomp2478,95535
(defun org-babel-trim (string &optional regexp)org-babel-trim2488,95957
(defvar org-babel-org-babel-call-process-region-original nil)org-babel-org-babel-call-process-region-original2496,96309
(defun org-babel-tramp-handle-call-process-regionorg-babel-tramp-handle-call-process-region2497,96371
(defun org-babel-local-file-name (file)org-babel-local-file-name2516,97252
(defun org-babel-process-file-name (name &optional no-quote-p)org-babel-process-file-name2524,97459
(defvar org-babel-temporary-directory)org-babel-temporary-directory2534,97998
(defun org-babel-temp-file (prefix &optional suffix)org-babel-temp-file2545,98474
(defun org-babel-remove-temporary-directory ()org-babel-remove-temporary-directory2559,99112

/home/malk/.emacs.d/elpa/org-20130128/org-ascii.el,2395
(defgroup org-export-ascii nilorg-export-ascii34,1083
(defcustom org-export-ascii-underline '(?\= ?\- ?\~ ?\^ ?\. ?\# ?\$)org-export-ascii-underline39,1220
(defcustom org-export-ascii-bullets '(?* ?+ ?-)org-export-ascii-bullets45,1476
(defcustom org-export-ascii-links-to-notes torg-export-ascii-links-to-notes55,1904
(defcustom org-export-ascii-table-keep-all-vertical-lines nilorg-export-ascii-table-keep-all-vertical-lines62,2167
(defcustom org-export-ascii-table-widen-columns torg-export-ascii-table-widen-columns69,2420
(defvar org-export-ascii-entities 'asciiorg-export-ascii-entities76,2675
(defvar org-export-ascii-final-hook nilorg-export-ascii-final-hook86,2925
(defvar org-ascii-current-indentation nil) ; For communicationorg-ascii-current-indentation91,3045
(defun org-export-as-latin1 (&rest args)org-export-as-latin194,3124
(defun org-export-as-latin1-to-buffer (&rest args)org-export-as-latin1-to-buffer101,3371
(defun org-export-as-utf8 (&rest args)org-export-as-utf8108,3640
(defun org-export-as-utf8-to-buffer (&rest args)org-export-as-utf8-to-buffer116,3881
(defun org-export-as-encoding (command interactivep encoding &rest args)org-export-as-encoding122,4129
(defun org-export-as-ascii-to-buffer (arg)org-export-as-ascii-to-buffer130,4346
(defun org-replace-region-by-ascii (beg end)org-replace-region-by-ascii139,4731
(defun org-export-region-as-ascii (beg end &optional body-only buffer)org-export-region-as-ascii163,5538
(defun org-export-as-ascii (arg &optional ext-plist to-buffer body-only pub-dir)org-export-as-ascii193,6887
(defun org-export-ascii-preprocess (parameters)org-export-ascii-preprocess553,19563
(defun org-html-expand-for-ascii (line)org-html-expand-for-ascii588,20857
(defun org-ascii-replace-entities ()org-ascii-replace-entities596,21107
(defun org-export-ascii-wrap (line where)org-export-ascii-wrap605,21463
(defun org-export-ascii-push-links (link-buffer)org-export-ascii-push-links620,21847
(defun org-ascii-level-start (level title umax &optional lines)org-ascii-level-start638,22401
(defun org-insert-centered (s &optional underline)org-insert-centered668,23729
(defvar org-table-colgroup-info nil)org-table-colgroup-info677,24064
(defun org-format-table-ascii (lines)org-format-table-ascii678,24101
(defun org-colgroup-info-to-vline-list (info)org-colgroup-info-to-vline-list712,25469

/home/malk/.emacs.d/elpa/org-20130128/ob-shen.el,323
(defvar org-babel-default-header-args:shen '()org-babel-default-header-args:shen40,1330
(defun org-babel-expand-body:shen (body params)org-babel-expand-body:shen43,1430
(defun org-babel-shen-var-to-shen (var)org-babel-shen-var-to-shen55,1827
(defun org-babel-execute:shen (body params)org-babel-execute:shen61,2020

/home/malk/.emacs.d/elpa/org-20130128/org-entities.el,629
(defgroup org-entities nilorg-entities37,1192
(defcustom org-entities-ascii-explanatory nilorg-entities-ascii-explanatory42,1302
(defcustom org-entities-user nilorg-entities-user50,1596
(defconst org-entitiesorg-entities83,3095
(defsubst org-entity-get (name)org-entity-get473,23680
(defun org-entity-get-representation (name kind)org-entity-get-representation479,23904
(defsubst org-entity-latex-math-p (name)org-entity-latex-math-p493,24413
(defun org-entities-create-table ()org-entities-create-table499,24610
(defun org-entities-help ()org-entities-help528,25559
(defun replace-amp ()replace-amp562,26596

/home/malk/.emacs.d/elpa/org-20130128/ob-maxima.el,760
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts38,1192
(defvar org-babel-default-header-args:maxima '())org-babel-default-header-args:maxima41,1291
(defcustom org-babel-maxima-commandorg-babel-maxima-command43,1342
(defun org-babel-maxima-expand (body params)org-babel-maxima-expand48,1502
(defun org-babel-execute:maxima (body params)org-babel-execute:maxima67,2104
(defun org-babel-prep-session:maxima (session params)org-babel-prep-session:maxima101,3440
(defun org-babel-maxima-var-to-maxima (pair)org-babel-maxima-var-to-maxima104,3541
(defun org-babel-maxima-graphical-output-file (params)org-babel-maxima-graphical-output-file116,3933
(defun org-babel-maxima-elisp-to-maxima (val)org-babel-maxima-elisp-to-maxima121,4149

/home/malk/.emacs.d/elpa/org-20130128/ob-ledger.el,261
(defvar org-babel-default-header-args:ledgerorg-babel-default-header-args:ledger41,1290
(defun org-babel-execute:ledger (body params)org-babel-execute:ledger45,1451
(defun org-babel-prep-session:ledger (session params)org-babel-prep-session:ledger64,2294

/home/malk/.emacs.d/elpa/org-20130128/org-inlinetask.el,2186
(defgroup org-inlinetask nilorg-inlinetask89,3406
(defcustom org-inlinetask-min-level 15org-inlinetask-min-level94,3536
(defcustom org-inlinetask-show-first-star nilorg-inlinetask-show-first-star108,4143
(defcustom org-inlinetask-export torg-inlinetask-export114,4361
(defvar org-inlinetask-export-templatesorg-inlinetask-export-templates120,4516
(defvar org-odd-levels-only)org-odd-levels-only177,6583
(defvar org-keyword-time-regexp)org-keyword-time-regexp178,6612
(defvar org-drawer-regexp)org-drawer-regexp179,6645
(defvar org-complex-heading-regexp)org-complex-heading-regexp180,6672
(defvar org-property-end-re)org-property-end-re181,6708
(defcustom org-inlinetask-default-state nilorg-inlinetask-default-state183,6738
(defun org-inlinetask-insert-task (&optional no-state)org-inlinetask-insert-task193,7093
(define-key org-mode-map "\C-c\C-xt" 'org-inlinetask-insert-task)org-mode-map214,7946
(defun org-inlinetask-outline-regexp ()org-inlinetask-outline-regexp216,8013
(defun org-inlinetask-at-task-p ()org-inlinetask-at-task-p224,8335
(defun org-inlinetask-in-task-p ()org-inlinetask-in-task-p231,8616
(defun org-inlinetask-goto-beginning ()org-inlinetask-goto-beginning243,9084
(defun org-inlinetask-goto-end ()org-inlinetask-goto-end252,9433
(defun org-inlinetask-get-task-level ()org-inlinetask-get-task-level274,10086
(defun org-inlinetask-promote ()org-inlinetask-promote282,10364
(defun org-inlinetask-demote ()org-inlinetask-demote308,11302
(defvar org-export-current-backend) ; dynamically bound in org-exp.elorg-export-current-backend331,12048
(defun org-inlinetask-export-handler ()org-inlinetask-export-handler332,12118
(defun org-inlinetask-get-current-indentation ()org-inlinetask-get-current-indentation414,15320
(defvar org-indent-indentation-per-level) ; defined in org-indent.elorg-indent-indentation-per-level425,15642
(defface org-inlinetaskorg-inlinetask427,15712
(defun org-inlinetask-fontify (limit)org-inlinetask-fontify432,15842
(defun org-inlinetask-toggle-visibility ()org-inlinetask-toggle-visibility457,16892
(defun org-inlinetask-remove-END-maybe ()org-inlinetask-remove-END-maybe473,17390

/home/malk/.emacs.d/elpa/org-20130128/ob-ditaa.el,408
(defvar org-ditaa-jar-path) ;; provided by org-exp-blocksorg-ditaa-jar-path45,1461
(defvar org-babel-default-header-args:ditaaorg-babel-default-header-args:ditaa47,1520
(defcustom org-ditaa-jar-option "-jar"org-ditaa-jar-option53,1715
(defun org-babel-execute:ditaa (body params)org-babel-execute:ditaa60,1901
(defun org-babel-prep-session:ditaa (session params)org-babel-prep-session:ditaa84,2920

/home/malk/.emacs.d/elpa/org-20130128/org-capture.el,5136
(defvar org-remember-default-headline)org-remember-default-headline65,2627
(defvar org-remember-templates)org-remember-templates66,2666
(defvar org-table-hlines)org-table-hlines67,2698
(defvar dired-buffers)dired-buffers68,2724
(defvar org-capture-clock-was-started nilorg-capture-clock-was-started70,2748
(defvar org-capture-last-stored-marker (make-marker)org-capture-last-stored-marker73,2844
(defvar org-capture-link-is-already-stored nil)org-capture-link-is-already-stored78,3102
(defgroup org-capture nilorg-capture80,3151
(defcustom org-capture-templates nilorg-capture-templates85,3260
(defcustom org-capture-before-finalize-hook nilorg-capture-before-finalize-hook348,15383
(defcustom org-capture-after-finalize-hook nilorg-capture-after-finalize-hook356,15649
(defcustom org-capture-prepare-finalize-hook nilorg-capture-prepare-finalize-hook363,15846
(defcustom org-capture-bookmark torg-capture-bookmark370,16054
(defvar org-capture-plist nilorg-capture-plist379,16306
(defvar org-capture-current-plist nilorg-capture-current-plist382,16417
(defvar org-capture-clock-keep nilorg-capture-clock-keep390,16812
(defun org-capture-put (&rest stuff)org-capture-put394,16986
(defun org-capture-get (prop &optional local)org-capture-get399,17203
(defun org-capture-member (prop &optional local)org-capture-member406,17586
(defvar org-capture-mode-map (make-sparse-keymap)org-capture-mode-map415,17968
(defvar org-capture-mode-hook nilorg-capture-mode-hook420,18160
(define-minor-mode org-capture-modeorg-capture-mode423,18239
(define-key org-capture-mode-map "\C-c\C-c" 'org-capture-finalize)org-capture-mode-map431,18555
(define-key org-capture-mode-map "\C-c\C-k" 'org-capture-kill)org-capture-mode-map432,18622
(define-key org-capture-mode-map "\C-c\C-w" 'org-capture-refile)org-capture-mode-map433,18685
(defvar org-capture-initial nil)org-capture-initial437,18774
(defvar org-capture-entry nil)org-capture-entry438,18807
(defun org-capture-string (string &optional keys)org-capture-string441,18854
(defcustom org-capture-templates-contexts nilorg-capture-templates-contexts447,19055
(defcustom org-capture-use-agenda-date nilorg-capture-use-agenda-date492,20637
(defun org-capture (&optional goto keys)org-capture500,20911
(defun org-capture-get-template ()org-capture-get-template605,24823
(defun org-capture-finalize (&optional stay-with-capture)org-capture-finalize623,25542
(defun org-capture-refile ()org-capture-refile763,30969
(defun org-capture-kill ()org-capture-kill783,31692
(defun org-capture-goto-last-stored ()org-capture-goto-last-stored792,32002
(defun org-capture-put-target-region-and-position ()org-capture-put-target-region-and-position801,32326
(defvar org-time-was-given) ; dynamically scoped parameterorg-time-was-given811,32703
(defun org-capture-set-target-location (&optional target)org-capture-set-target-location812,32762
(defun org-capture-expand-file (file)org-capture-expand-file945,37552
(defun org-capture-target-buffer (file)org-capture-target-buffer956,37963
(defun org-capture-steal-local-variables (buffer)org-capture-steal-local-variables966,38363
(defun org-capture-place-template ()org-capture-place-template972,38559
(defun org-capture-place-entry ()org-capture-place-entry995,39456
(defun org-capture-place-item ()org-capture-place-item1039,40896
(defun org-capture-place-table-line ()org-capture-place-table-line1097,42834
(defun org-capture-place-plain-text ()org-capture-place-plain-text1178,45711
(defun org-capture-mark-kill-region (beg end)org-capture-mark-kill-region1214,47046
(defun org-capture-position-for-last-stored (where)org-capture-position-for-last-stored1221,47326
(defun org-capture-bookmark-last-stored-position ()org-capture-bookmark-last-stored-position1235,47831
(defun org-capture-narrow (beg end)org-capture-narrow1257,48548
(defun org-capture-empty-lines-before (&optional n)org-capture-empty-lines-before1263,48731
(defun org-capture-empty-lines-after (&optional n)org-capture-empty-lines-after1273,49148
(defvar org-clock-marker) ; Defined in org.elorg-clock-marker1284,49590
(defun org-capture-insert-template-here ()org-capture-insert-template-here1286,49637
(defun org-capture-set-plist (entry)org-capture-set-plist1320,50690
(defun org-capture-goto-target (&optional template-key)org-capture-goto-target1336,51477
(defun org-capture-get-indirect-buffer (&optional buffer prefix)org-capture-get-indirect-buffer1349,51979
(defun org-capture-verify-tree (tree)org-capture-verify-tree1364,52609
(defun org-capture-select-template (&optional keys)org-capture-select-template1371,52813
(defun org-capture-fill-template (&optional template initial annotation)org-capture-fill-template1388,53487
(defun org-capture-escaped-% ()org-capture-escaped-%1608,61825
(defun org-capture-expand-embedded-elisp ()org-capture-expand-embedded-elisp1616,62053
(defun org-capture-inside-embedded-elisp-p ()org-capture-inside-embedded-elisp-p1628,62477
(defun org-capture-import-remember-templates ()org-capture-import-remember-templates1645,63088

/home/malk/.emacs.d/elpa/org-20130128/org-latex.el,10514
(defvar org-export-latex-class nil)org-export-latex-class55,1636
(defvar org-export-latex-class-options nil)org-export-latex-class-options56,1672
(defvar org-export-latex-header nil)org-export-latex-header57,1716
(defvar org-export-latex-append-header nil)org-export-latex-append-header58,1753
(defvar org-export-latex-options-plist nil)org-export-latex-options-plist59,1797
(defvar org-export-latex-todo-keywords-1 nil)org-export-latex-todo-keywords-160,1841
(defvar org-export-latex-complex-heading-re nil)org-export-latex-complex-heading-re61,1887
(defvar org-export-latex-not-done-keywords nil)org-export-latex-not-done-keywords62,1936
(defvar org-export-latex-done-keywords nil)org-export-latex-done-keywords63,1984
(defvar org-export-latex-display-custom-times nil)org-export-latex-display-custom-times64,2028
(defvar org-export-latex-all-targets-re nil)org-export-latex-all-targets-re65,2079
(defvar org-export-latex-add-level 0)org-export-latex-add-level66,2124
(defvar org-export-latex-footmark-seen nilorg-export-latex-footmark-seen67,2162
(defvar org-export-latex-sectioning "")org-export-latex-sectioning69,2261
(defvar org-export-latex-sectioning-depth 0)org-export-latex-sectioning-depth70,2301
(defvar org-export-latex-special-keyword-regexporg-export-latex-special-keyword-regexp71,2346
(defvar org-re-quote)  ; dynamically scoped from org.elorg-re-quote76,2572
(defvar org-commentsp) ; dynamically scoped from org.elorg-commentsp77,2628
(defgroup org-export-latex nilorg-export-latex81,2706
(defcustom org-export-latex-default-class "article"org-export-latex-default-class86,2837
(defcustom org-export-latex-classesorg-export-latex-classes91,2984
(defcustom org-export-latex-inputenc-alist nilorg-export-latex-inputenc-alist212,7551
(defcustom org-export-latex-emphasis-alistorg-export-latex-emphasis-alist228,7982
(defcustom org-export-latex-title-command "\\maketitle"org-export-latex-title-command247,8766
(defcustom org-export-latex-import-inbuffer-stuff nilorg-export-latex-import-inbuffer-stuff255,9073
(defcustom org-export-latex-date-formatorg-export-latex-date-format261,9276
(defcustom org-export-latex-todo-keyword-markup "\\textbf{%s}"org-export-latex-todo-keyword-markup267,9408
(defcustom org-export-latex-tag-markup "\\textbf{%s}"org-export-latex-tag-markup284,10092
(defcustom org-export-latex-timestamp-markup "\\textit{%s}"org-export-latex-timestamp-markup290,10250
(defcustom org-export-latex-timestamp-inactive-markup "\\textit{%s}"org-export-latex-timestamp-inactive-markup295,10412
(defcustom org-export-latex-timestamp-keyword-markup "\\texttt{%s}"org-export-latex-timestamp-keyword-markup301,10610
(defcustom org-export-latex-href-format "\\href{%s}{%s}"org-export-latex-href-format306,10780
(defcustom org-export-latex-hyperref-format "\\hyperref[%s]{%s}"org-export-latex-hyperref-format316,11191
(defcustom org-export-latex-hyperref-options-formatorg-export-latex-hyperref-options-format324,11506
(defcustom org-export-latex-footnote-separator "\\textsuperscript{,}\\,"org-export-latex-footnote-separator336,12046
(defcustom org-export-latex-quotesorg-export-latex-quotes342,12219
(defcustom org-export-latex-tables-verbatim nilorg-export-latex-tables-verbatim369,13322
(defcustom org-export-latex-tables-centered torg-export-latex-tables-centered374,13464
(defcustom org-export-latex-table-caption-above torg-export-latex-table-caption-above379,13619
(defcustom org-export-latex-tables-column-borders nilorg-export-latex-tables-column-borders386,13834
(defcustom org-export-latex-tables-tstart nilorg-export-latex-tables-tstart392,14075
(defcustom org-export-latex-tables-hline "\\hline"org-export-latex-tables-hline401,14365
(defcustom org-export-latex-tables-tend nilorg-export-latex-tables-tend410,14706
(defcustom org-export-latex-low-levels 'itemizeorg-export-latex-low-levels419,15003
(defcustom org-export-latex-list-parametersorg-export-latex-list-parameters446,16306
(defcustom org-export-latex-verbatim-wraporg-export-latex-verbatim-wrap455,16669
(defcustom org-export-latex-listings nilorg-export-latex-listings467,17098
(defcustom org-export-latex-listings-langsorg-export-latex-listings-langs499,18272
(defcustom org-export-latex-listings-w-names torg-export-latex-listings-w-names522,19167
(defcustom org-export-latex-minted-langsorg-export-latex-minted-langs531,19471
(defcustom org-export-latex-listings-options nilorg-export-latex-listings-options556,20303
(defcustom org-export-latex-minted-options nilorg-export-latex-minted-options580,21084
(defvar org-export-latex-custom-lang-environments nilorg-export-latex-custom-lang-environments604,21854
(defcustom org-export-latex-remove-from-headlinesorg-export-latex-remove-from-headlines619,22331
(defcustom org-export-latex-image-default-option "width=.9\\linewidth"org-export-latex-image-default-option632,22802
(defcustom org-latex-default-figure-position "htb"org-latex-default-figure-position637,22949
(defcustom org-export-latex-tabular-environment "tabular"org-export-latex-tabular-environment643,23103
(defcustom org-export-latex-link-with-unknown-path-format "\\texttt{%s}"org-export-latex-link-with-unknown-path-format649,23270
(defcustom org-export-latex-inline-image-extensionsorg-export-latex-inline-image-extensions655,23458
(defcustom org-export-latex-coding-system nilorg-export-latex-coding-system665,23956
(defgroup org-export-pdf nilorg-export-pdf670,24101
(defcustom org-latex-to-pdf-processorg-latex-to-pdf-process676,24264
(defcustom org-export-pdf-logfilesorg-export-pdf-logfiles750,27727
(defcustom org-export-pdf-remove-logfiles torg-export-pdf-remove-logfiles757,27967
(defvar org-export-latex-after-initial-vars-hook nilorg-export-latex-after-initial-vars-hook765,28180
(defvar org-export-latex-after-blockquotes-hook nilorg-export-latex-after-blockquotes-hook770,28388
(defvar org-export-latex-final-hook nilorg-export-latex-final-hook773,28518
(defvar org-export-latex-after-save-hook nilorg-export-latex-after-save-hook776,28604
(defun org-export-as-latex-batch ()org-export-as-latex-batch782,28760
(defun org-export-as-latex-to-buffer (arg)org-export-as-latex-to-buffer793,29111
(defun org-replace-region-by-latex (beg end)org-replace-region-by-latex802,29496
(defun org-export-region-as-latex (beg end &optional body-only buffer)org-export-region-as-latex827,30349
(defun org-export-as-latex (arg &optional ext-plist to-buffer body-only pub-dir)org-export-as-latex859,31709
(defun org-export-as-pdf (arg &optional hidden ext-plistorg-export-as-pdf1114,40964
(defun org-export-latex-get-error (buf)org-export-latex-get-error1181,43368
(defun org-export-as-pdf-and-open (arg)org-export-as-pdf-and-open1200,44202
(defun org-export-latex-parse-global (level odd)org-export-latex-parse-global1215,44658
(defun org-export-latex-parse-content ()org-export-latex-parse-content1264,46226
(defun org-export-latex-parse-subcontent (level odd)org-export-latex-parse-subcontent1272,46493
(defun org-export-latex-global (content)org-export-latex-global1284,46949
(defun org-export-latex-sub (subcontent)org-export-latex-sub1292,47228
(defun org-export-latex-subcontent (subcontent num)org-export-latex-subcontent1299,47540
(defun org-export-latex-set-initial-vars (ext-plist level)org-export-latex-set-initial-vars1417,52745
(defvar org-export-latex-format-toc-functionorg-export-latex-format-toc-function1481,55456
(defun org-export-latex-make-header (title opt-plist)org-export-latex-make-header1486,55697
(defun org-export-latex-format-toc-default (depth)org-export-latex-format-toc-default1555,58484
(defun org-export-latex-first-lines (opt-plist &optional beg end)org-export-latex-first-lines1560,58642
(defvar org-export-latex-header-defs nilorg-export-latex-header-defs1599,59966
(defun org-export-latex-content (content &optional exclude-list)org-export-latex-content1602,60074
(defun org-export-latex-protect-string (s)org-export-latex-protect-string1635,61451
(defun org-export-latex-protect-char-in-string (char-list string)org-export-latex-protect-char-in-string1639,61604
(defun org-export-latex-keywords-maybe (&optional remove-list)org-export-latex-keywords-maybe1650,62006
(defun org-export-latex-fontify-headline (string)org-export-latex-fontify-headline1688,63480
(defun org-export-latex-time-stamps ()org-export-latex-time-stamps1748,65779
(defun org-export-latex-quotation-marks ()org-export-latex-quotation-marks1762,66318
(defun org-export-latex-special-chars (sub-superscript)org-export-latex-special-chars1777,66865
(defun org-inside-latex-math-p ()org-inside-latex-math-p1850,69985
(defun org-export-latex-treat-sub-super-charorg-export-latex-treat-sub-super-char1853,70067
(defun org-export-latex-treat-backslash-char (string-before string-after)org-export-latex-treat-backslash-char1889,71714
(defun org-export-latex-keywords ()org-export-latex-keywords1922,73139
(defun org-export-latex-fixed-width (opt)org-export-latex-fixed-width1934,73540
(defvar org-table-last-alignment) ; defined in org-table.elorg-table-last-alignment1953,74277
(defvar org-table-last-column-widths) ; defined in org-table.elorg-table-last-column-widths1954,74337
(defun org-export-latex-tables (insert)org-export-latex-tables1956,74465
(defun org-export-latex-convert-table.el-table ()org-export-latex-convert-table.el-table2129,82618
(defun org-export-latex-fontify ()org-export-latex-fontify2182,84822
(defun org-export-latex-emph-format (format string)org-export-latex-emph-format2226,86427
(defun org-export-latex-links ()org-export-latex-links2258,87746
(defun org-export-latex-format-image (path caption label attr &optional shortn)org-export-latex-format-image2347,91532
(defun org-export-latex-protect-amp (s)org-export-latex-protect-amp2418,93992
(defun org-remove-initial-hash (s)org-remove-initial-hash2424,94181
(defvar org-latex-entities)   ; defined beloworg-latex-entities2428,94276
(defvar org-latex-entities-regexp)   ; defined beloworg-latex-entities-regexp2429,94322
(defun org-export-latex-preprocess (parameters)org-export-latex-preprocess2431,94376
(defun org-export-latex-fix-inputenc ()org-export-latex-fix-inputenc2655,102830
(defun org-export-latex-lists ()org-export-latex-lists2675,103531
(defconst org-latex-entitiesorg-latex-entities2708,104936
(defconst org-latex-entities-regexporg-latex-entities-regexp2885,107971

/home/malk/.emacs.d/elpa/org-20130128/org-docbook.el,4467
(defvar org-docbook-para-open nil)org-docbook-para-open82,2702
(defvar org-export-docbook-inline-images t)org-export-docbook-inline-images83,2737
(defvar org-export-docbook-link-org-files-as-docbook nil)org-export-docbook-link-org-files-as-docbook84,2781
(defgroup org-export-docbook nilorg-export-docbook90,2915
(defcustom org-export-docbook-extension ".xml"org-export-docbook-extension95,3052
(defcustom org-export-docbook-header "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"org-export-docbook-header100,3182
(defcustom org-export-docbook-doctype nilorg-export-docbook-doctype105,3346
(defcustom org-export-docbook-article-header "<article xmlns=\"http://docbook.org/ns/docbook\"org-export-docbook-article-header129,4079
(defcustom org-export-docbook-section-id-prefix "sec-"org-export-docbook-section-id-prefix135,4350
(defcustom org-export-docbook-footnote-id-prefix "fn-"org-export-docbook-footnote-id-prefix143,4666
(defcustom org-export-docbook-footnote-separator "<superscript>, </superscript>"org-export-docbook-footnote-separator150,4948
(defcustom org-export-docbook-emphasis-alistorg-export-docbook-emphasis-alist156,5131
(defcustom org-export-docbook-default-image-attributesorg-export-docbook-default-image-attributes172,5833
(defcustom org-export-docbook-inline-image-extensionsorg-export-docbook-inline-image-extensions181,6164
(defcustom org-export-docbook-coding-system nilorg-export-docbook-coding-system187,6393
(defcustom org-export-docbook-xslt-stylesheet nilorg-export-docbook-xslt-stylesheet192,6536
(defcustom org-export-docbook-xslt-proc-command nilorg-export-docbook-xslt-proc-command202,6934
(defcustom org-export-docbook-xsl-fo-proc-command nilorg-export-docbook-xsl-fo-proc-command233,8012
(defcustom org-export-docbook-keywords-markup "<literal>%s</literal>"org-export-docbook-keywords-markup250,8589
(defcustom org-export-docbook-timestamp-markup "<emphasis>%s</emphasis>"org-export-docbook-timestamp-markup255,8780
(defvar org-export-docbook-final-hook nilorg-export-docbook-final-hook262,8988
(defun org-export-as-docbook-batch ()org-export-as-docbook-batch268,9134
(defun org-export-as-docbook-to-buffer ()org-export-as-docbook-to-buffer280,9448
(defun org-replace-region-by-docbook (beg end)org-replace-region-by-docbook289,9772
(defun org-export-region-as-docbook (beg end &optional body-only buffer)org-export-region-as-docbook314,10635
(defun org-export-as-docbook-pdf (&optional ext-plist to-buffer body-only pub-dir)org-export-as-docbook-pdf344,11894
(defun org-export-as-docbook-pdf-and-open ()org-export-as-docbook-pdf-and-open386,13727
(defvar org-heading-keyword-regexp-format) ; defined in org.elorg-heading-keyword-regexp-format394,13986
(defun org-export-as-docbook (&optional ext-plist to-buffer body-only pub-dir)org-export-as-docbook397,14065
(defun org-export-docbook-open-para ()org-export-docbook-open-para1092,39720
(defun org-export-docbook-close-para-maybe ()org-export-docbook-close-para-maybe1098,39918
(defun org-export-docbook-close-li (&optional type)org-export-docbook-close-li1104,40109
(defun org-export-docbook-level-start (level title)org-export-docbook-level-start1111,40331
(defun org-docbook-expand (string)org-docbook-expand1148,41636
(defun org-docbook-do-expand (s)org-docbook-do-expand1164,42226
(defun org-export-docbook-format-desc (desc)org-export-docbook-format-desc1187,43171
(defun org-export-docbook-convert-emphasize (string)org-export-docbook-convert-emphasize1192,43327
(defun org-docbook-protect (string)org-docbook-protect1214,44050
(defun org-export-docbook-convert-special-strings (string)org-export-docbook-convert-special-strings1218,44159
(defun org-export-docbook-get-footnotes (lines)org-export-docbook-get-footnotes1222,44282
(defun org-export-docbook-format-image (src)org-export-docbook-format-image1231,44600
(defun org-export-docbook-preprocess (parameters)org-export-docbook-preprocess1256,45505
(defun org-export-docbook-finalize-table (table)org-export-docbook-finalize-table1265,45900
(defun org-export-docbook-convert-sub-super (string)org-export-docbook-convert-sub-super1296,47228
(defun org-export-docbook-protect-tags (string)org-export-docbook-protect-tags1320,48134
(defun org-export-docbook-handle-time-stamps (line)org-export-docbook-handle-time-stamps1331,48540
(defun org-export-docbook-list-line (line pos struct prevs)org-export-docbook-list-line1352,49229

/home/malk/.emacs.d/elpa/org-20130128/ob-asymptote.el,639
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts51,1671
(defvar org-babel-default-header-args:asymptoteorg-babel-default-header-args:asymptote54,1773
(defun org-babel-execute:asymptote (body params)org-babel-execute:asymptote58,1936
(defun org-babel-prep-session:asymptote (session params)org-babel-prep-session:asymptote85,2984
(defun org-babel-variable-assignments:asymptote (params)org-babel-variable-assignments:asymptote90,3187
(defun org-babel-asymptote-var-to-asymptote (pair)org-babel-asymptote-var-to-asymptote95,3422
(defun org-babel-asymptote-define-type (data)org-babel-asymptote-define-type125,4519

/home/malk/.emacs.d/elpa/org-20130128/ob-scala.el,752
(defvar org-babel-tangle-lang-exts) ;; Autoloadedorg-babel-tangle-lang-exts39,1342
(defvar org-babel-default-header-args:scala '())org-babel-default-header-args:scala41,1455
(defvar org-babel-scala-command "scala"org-babel-scala-command42,1504
(defun org-babel-execute:scala (body params)org-babel-execute:scala45,1603
(defun org-babel-scala-table-or-string (results)org-babel-scala-table-or-string67,2537
(defvar org-babel-scala-wrapper-methodorg-babel-scala-wrapper-method74,2794
(defun org-babel-scala-evaluateorg-babel-scala-evaluate89,2995
(defun org-babel-prep-session:scala (session params)org-babel-prep-session:scala114,4004
(defun org-babel-scala-initiate-session (&optional session)org-babel-scala-initiate-session118,4189

/home/malk/.emacs.d/elpa/org-20130128/org-element.el,15040
(defconst org-element-paragraph-separateorg-element-paragraph-separate125,5519
(defconst org-element-all-elementsorg-element-all-elements162,7046
(defconst org-element-greater-elementsorg-element-greater-elements171,7470
(defconst org-element-all-successorsorg-element-all-successors176,7707
(defconst org-element-object-successor-alistorg-element-object-successor-alist183,7993
(defconst org-element-all-objectsorg-element-all-objects194,8521
(defconst org-element-recursive-objectsorg-element-recursive-objects201,8848
(defconst org-element-block-name-alistorg-element-block-name-alist206,9027
(defconst org-element-affiliated-keywordsorg-element-affiliated-keywords217,9541
(defconst org-element--affiliated-reorg-element--affiliated-re224,9877
(defconst org-element-keyword-translation-alistorg-element-keyword-translation-alist237,10342
(defconst org-element-multiple-keywords '("HEADER")org-element-multiple-keywords245,10744
(defconst org-element-parsed-keywords '("AUTHOR" "CAPTION" "DATE" "TITLE")org-element-parsed-keywords257,11213
(defconst org-element-dual-keywords '("CAPTION" "RESULTS")org-element-dual-keywords266,11526
(defconst org-element-object-restrictionsorg-element-object-restrictions278,11956
(defconst org-element-secondary-value-alistorg-element-secondary-value-alist332,14805
(defsubst org-element-type (element)org-element-type352,15527
(defsubst org-element-property (property element)org-element-property364,15942
(defsubst org-element-contents (element)org-element-contents368,16088
(defsubst org-element-restriction (element)org-element-restriction372,16212
(defsubst org-element-put-property (element property value)org-element-put-property379,16504
(defsubst org-element-set-contents (element &rest contents)org-element-set-contents386,16734
(defsubst org-element-set-element (old new)org-element-set-element393,16979
(defsubst org-element-adopt-elements (parent &rest children)org-element-adopt-elements410,17727
(defun org-element-center-block-parser (limit)org-element-center-block-parser469,19858
(defun org-element-center-block-interpreter (center-block contents)org-element-center-block-interpreter509,21276
(defun org-element-drawer-parser (limit)org-element-drawer-parser517,21504
(defun org-element-drawer-interpreter (drawer contents)org-element-drawer-interpreter561,22995
(defun org-element-dynamic-block-parser (limit)org-element-dynamic-block-parser571,23244
(defun org-element-dynamic-block-interpreter (dynamic-block contents)org-element-dynamic-block-interpreter618,24841
(defun org-element-footnote-definition-parser (limit)org-element-footnote-definition-parser630,25233
(defun org-element-footnote-definition-interpreter (footnote-definition contents)org-element-footnote-definition-interpreter672,26633
(defun org-element-headline-parser (limit &optional raw-secondary-p)org-element-headline-parser682,26939
(defun org-element-headline-interpreter (headline contents)org-element-headline-interpreter802,31127
(defun org-element-inlinetask-parser (limit &optional raw-secondary-p)org-element-inlinetask-parser851,32843
(defun org-element-inlinetask-interpreter (inlinetask contents)org-element-inlinetask-interpreter943,36047
(defun org-element-item-parser (limit struct &optional raw-secondary-p)org-element-item-parser984,37335
(defun org-element-item-interpreter (item contents)org-element-item-interpreter1063,40049
(defun org-element-plain-list-parser (limit &optional structure)org-element-plain-list-parser1093,41053
(defun org-element-plain-list-interpreter (plain-list contents)org-element-plain-list-interpreter1131,42352
(defun org-element-quote-block-parser (limit)org-element-quote-block-parser1143,42639
(defun org-element-quote-block-interpreter (quote-block contents)org-element-quote-block-interpreter1184,44012
(defun org-element-section-parser (limit)org-element-section-parser1192,44236
(defun org-element-section-interpreter (section contents)org-element-section-interpreter1216,44980
(defun org-element-special-block-parser (limit)org-element-special-block-parser1224,45158
(defun org-element-special-block-interpreter (special-block contents)org-element-special-block-interpreter1269,46683
(defun org-element-babel-call-parser (limit)org-element-babel-call-parser1293,47565
(defun org-element-babel-call-interpreter (babel-call contents)org-element-babel-call-interpreter1316,48290
(defun org-element-clock-parser (limit)org-element-clock-parser1331,48804
(defun org-element-clock-interpreter (clock contents)org-element-clock-interpreter1364,49832
(defun org-element-comment-parser (limit)org-element-comment-parser1379,50189
(defun org-element-comment-interpreter (comment contents)org-element-comment-interpreter1421,51402
(defun org-element-comment-block-parser (limit)org-element-comment-block-parser1429,51621
(defun org-element-comment-block-interpreter (comment-block contents)org-element-comment-block-interpreter1467,52859
(defun org-element-example-block-parser (limit)org-element-example-block-parser1476,53138
(defun org-element-example-block-interpreter (example-block contents)org-element-example-block-interpreter1543,55549
(defun org-element-export-block-parser (limit)org-element-export-block-parser1556,55986
(defun org-element-export-block-interpreter (export-block contents)org-element-export-block-interpreter1598,57371
(defun org-element-fixed-width-parser (limit)org-element-fixed-width-parser1609,57706
(defun org-element-fixed-width-interpreter (fixed-width contents)org-element-fixed-width-interpreter1645,58743
(defun org-element-horizontal-rule-parser (limit)org-element-horizontal-rule-parser1654,59000
(defun org-element-horizontal-rule-interpreter (horizontal-rule contents)org-element-horizontal-rule-interpreter1675,59676
(defun org-element-keyword-parser (limit)org-element-keyword-parser1683,59847
(defun org-element-keyword-interpreter (keyword contents)org-element-keyword-interpreter1709,60689
(defun org-element-latex-environment-parser (limit)org-element-latex-environment-parser1719,60938
(defun org-element-latex-environment-interpreter (latex-environment contents)org-element-latex-environment-interpreter1753,62031
(defun org-element-paragraph-parser (limit)org-element-paragraph-parser1761,62250
(defun org-element-paragraph-interpreter (paragraph contents)org-element-paragraph-interpreter1855,65339
(defun org-element-planning-parser (limit)org-element-planning-parser1863,65518
(defun org-element-planning-interpreter (planning contents)org-element-planning-interpreter1900,66702
(defun org-element-property-drawer-parser (limit)org-element-property-drawer-parser1918,67304
(defun org-element-property-drawer-interpreter (property-drawer contents)org-element-property-drawer-interpreter1957,68597
(defun org-element-quote-section-parser (limit)org-element-quote-section-parser1971,69002
(defun org-element-quote-section-interpreter (quote-section contents)org-element-quote-section-interpreter1994,69716
(defun org-element-src-block-parser (limit)org-element-src-block-parser2002,69919
(defun org-element-src-block-interpreter (src-block contents)org-element-src-block-interpreter2087,72882
(defun org-element-table-parser (limit)org-element-table-parser2114,73810
(defun org-element-table-interpreter (table contents)org-element-table-interpreter2160,75347
(defun org-element-table-row-parser (limit)org-element-table-row-parser2175,75830
(defun org-element-table-row-interpreter (table-row contents)org-element-table-row-interpreter2205,76710
(defun org-element-verse-block-parser (limit)org-element-verse-block-parser2214,76972
(defun org-element-verse-block-interpreter (verse-block contents)org-element-verse-block-interpreter2251,78198
(defun org-element-bold-parser ()org-element-bold-parser2286,79502
(defun org-element-bold-interpreter (bold contents)org-element-bold-interpreter2310,80206
(defun org-element-text-markup-successor (limit)org-element-text-markup-successor2315,80368
(defun org-element-code-parser ()org-element-code-parser2340,81142
(defun org-element-code-interpreter (code contents)org-element-code-interpreter2361,81743
(defun org-element-entity-parser ()org-element-entity-parser2369,81922
(defun org-element-entity-interpreter (entity contents)org-element-entity-interpreter2400,82926
(defun org-element-latex-or-entity-successor (limit)org-element-latex-or-entity-successor2407,83160
(defun org-element-export-snippet-parser ()org-element-export-snippet-parser2446,84487
(defun org-element-export-snippet-interpreter (export-snippet contents)org-element-export-snippet-interpreter2470,85238
(defun org-element-export-snippet-successor (limit)org-element-export-snippet-successor2477,85502
(defun org-element-footnote-reference-parser ()org-element-footnote-reference-parser2494,85942
(defun org-element-footnote-reference-interpreter (footnote-reference contents)org-element-footnote-reference-interpreter2533,87292
(defun org-element-footnote-reference-successor (limit)org-element-footnote-reference-successor2544,87744
(defun org-element-inline-babel-call-parser ()org-element-inline-babel-call-parser2566,88371
(defun org-element-inline-babel-call-interpreter (inline-babel-call contents)org-element-inline-babel-call-interpreter2587,89048
(defun org-element-inline-babel-call-successor (limit)org-element-inline-babel-call-successor2601,89602
(defun org-element-inline-src-block-parser ()org-element-inline-src-block-parser2619,90119
(defun org-element-inline-src-block-interpreter (inline-src-block contents)org-element-inline-src-block-interpreter2647,91003
(defun org-element-inline-src-block-successor (limit)org-element-inline-src-block-successor2658,91443
(defun org-element-italic-parser ()org-element-italic-parser2672,91861
(defun org-element-italic-interpreter (italic contents)org-element-italic-interpreter2696,92574
(defun org-element-latex-fragment-parser ()org-element-latex-fragment-parser2704,92764
(defun org-element-latex-fragment-interpreter (latex-fragment contents)org-element-latex-fragment-interpreter2737,93886
(defun org-element-line-break-parser ()org-element-line-break-parser2744,94092
(defun org-element-line-break-interpreter (line-break contents)org-element-line-break-interpreter2753,94403
(defun org-element-line-break-successor (limit)org-element-line-break-successor2758,94542
(defun org-element-link-parser ()org-element-link-parser2775,95050
(defun org-element-link-interpreter (link contents)org-element-link-interpreter2851,98027
(defun org-element-link-successor (limit)org-element-link-successor2861,98403
(defun org-element-macro-parser ()org-element-macro-parser2878,98849
(defun org-element-macro-interpreter (macro contents)org-element-macro-interpreter2913,99939
(defun org-element-macro-successor (limit)org-element-macro-successor2918,100092
(defun org-element-radio-target-parser ()org-element-radio-target-parser2934,100475
(defun org-element-radio-target-interpreter (target contents)org-element-radio-target-interpreter2959,101231
(defun org-element-radio-target-successor (limit)org-element-radio-target-successor2964,101410
(defun org-element-statistics-cookie-parser ()org-element-statistics-cookie-parser2978,101775
(defun org-element-statistics-cookie-interpreter (statistics-cookie contents)org-element-statistics-cookie-interpreter2999,102447
(defun org-element-statistics-cookie-successor (limit)org-element-statistics-cookie-successor3004,102648
(defun org-element-strike-through-parser ()org-element-strike-through-parser3018,103038
(defun org-element-strike-through-interpreter (strike-through contents)org-element-strike-through-interpreter3042,103787
(defun org-element-subscript-parser ()org-element-subscript-parser3050,103996
(defun org-element-subscript-interpreter (subscript contents)org-element-subscript-interpreter3078,104907
(defun org-element-sub/superscript-successor  (limit)org-element-sub/superscript-successor3085,105151
(defun org-element-superscript-parser ()org-element-superscript-parser3101,105628
(defun org-element-superscript-interpreter (superscript contents)org-element-superscript-interpreter3128,106538
(defun org-element-table-cell-parser ()org-element-table-cell-parser3138,106808
(defun org-element-table-cell-interpreter (table-cell contents)org-element-table-cell-interpreter3156,107339
(defun org-element-table-cell-successor (limit)org-element-table-cell-successor3161,107529
(defun org-element-target-parser ()org-element-target-parser3173,107816
(defun org-element-target-interpreter (target contents)org-element-target-interpreter3193,108362
(defun org-element-target-successor (limit)org-element-target-successor3198,108537
(defun org-element-timestamp-parser ()org-element-timestamp-parser3212,108864
(defun org-element-timestamp-interpreter (timestamp contents)org-element-timestamp-interpreter3243,109825
(defun org-element-timestamp-successor (limit)org-element-timestamp-successor3256,110320
(defun org-element-underline-parser ()org-element-underline-parser3276,110797
(defun org-element-underline-interpreter (underline contents)org-element-underline-interpreter3300,111527
(defun org-element-verbatim-parser ()org-element-verbatim-parser3308,111720
(defun org-element-verbatim-interpreter (verbatim contents)org-element-verbatim-interpreter3329,112342
(defun org-element--current-elementorg-element--current-element3348,113025
(defun org-element--collect-affiliated-keywordsorg-element--collect-affiliated-keywords3505,119480
(defun org-element-parse-buffer (&optional granularity visible-only)org-element-parse-buffer3596,123325
(defun org-element-parse-secondary-string (string restriction &optional parent)org-element-parse-secondary-string3649,125551
(defun org-element-map (data types fun &optional info first-match no-recursion)org-element-map3665,126170
(defun org-element--parse-elementsorg-element--parse-elements3811,131817
(defun org-element--parse-objects (beg end acc restriction)org-element--parse-objects3880,134412
(defun org-element--get-next-object-candidates (limit restriction objects)org-element--get-next-object-candidates3935,136330
(defun org-element-interpret-data (data &optional parent)org-element-interpret-data3991,138213
(defun org-element--interpret-affiliated-keywords (element)org-element--interpret-affiliated-keywords4057,140536
(defun org-element-normalize-string (s)org-element-normalize-string4111,142603
(defun org-element-normalize-contents (element &optional ignore-first)org-element-normalize-contents4123,143002
(defun org-element-at-point (&optional keep-trail)org-element-at-point4219,146701
(defun org-element-context ()org-element-context4318,150838
(defsubst org-element-nested-p (elem-A elem-B)org-element-nested-p4402,154025
(defun org-element-swap-A-B (elem-A elem-B)org-element-swap-A-B4411,154409

/home/malk/.emacs.d/elpa/org-20130128/org-list.el,10140
(defvar org-M-RET-may-split-line)org-M-RET-may-split-line84,3239
(defvar org-auto-align-tags)org-auto-align-tags85,3273
(defvar org-blank-before-new-entry)org-blank-before-new-entry86,3302
(defvar org-clock-string)org-clock-string87,3338
(defvar org-closed-string)org-closed-string88,3364
(defvar org-deadline-string)org-deadline-string89,3391
(defvar org-description-max-indent)org-description-max-indent90,3420
(defvar org-drawers)org-drawers91,3456
(defvar org-odd-levels-only)org-odd-levels-only92,3477
(defvar org-scheduled-string)org-scheduled-string93,3506
(defvar org-ts-regexp)org-ts-regexp94,3536
(defvar org-ts-regexp-both)org-ts-regexp-both95,3559
(defgroup org-plain-lists nilorg-plain-lists135,5474
(defcustom org-cycle-include-plain-lists torg-cycle-include-plain-lists140,5603
(defcustom org-list-demote-modify-bullet nilorg-list-demote-modify-bullet162,6599
(defcustom org-plain-list-ordered-item-terminator torg-plain-list-ordered-item-terminator204,7538
(defcustom org-alphabetical-lists nilorg-alphabetical-lists212,7881
(defcustom org-list-two-spaces-after-bullet-regexp nilorg-list-two-spaces-after-bullet-regexp221,8218
(defcustom org-empty-line-terminates-plain-lists nilorg-empty-line-terminates-plain-lists233,8749
(defcustom org-list-automatic-rules '((checkbox . t)org-list-automatic-rules239,8949
(defcustom org-list-use-circular-motion nilorg-list-use-circular-motion265,9985
(defvar org-checkbox-statistics-hook nilorg-checkbox-statistics-hook278,10406
(defcustom org-hierarchical-checkbox-statistics torg-hierarchical-checkbox-statistics285,10698
(defcustom org-description-max-indent 20org-description-max-indent293,11037
(defcustom org-list-indent-offset 0org-list-indent-offset300,11275
(defcustom org-list-radio-list-templatesorg-list-radio-list-templates308,11531
(defvar org-list-forbidden-blocks '("example" "verse" "src" "ascii" "beamer"org-list-forbidden-blocks335,12255
(defvar org-list-export-context '(block inlinetask)org-list-export-context340,12452
(defconst org-list-end-re (if org-empty-line-terminates-plain-lists "^[ \t]*\n"org-list-end-re351,12747
(defconst org-list-full-item-reorg-list-full-item-re356,12958
(defun org-item-re ()org-item-re367,13380
(defsubst org-item-beginning-re ()org-item-beginning-re378,13855
(defun org-list-at-regexp-after-bullet-p (regexp)org-list-at-regexp-after-bullet-p382,13977
(defun org-list-in-valid-context-p ()org-list-in-valid-context-p396,14442
(defun org-in-item-p ()org-in-item-p400,14584
(defun org-at-item-p ()org-at-item-p468,17196
(defun org-at-item-bullet-p ()org-at-item-bullet-p474,17387
(defun org-at-item-timer-p ()org-at-item-timer-p480,17572
(defun org-at-item-description-p ()org-at-item-description-p485,17752
(defun org-at-item-checkbox-p ()org-at-item-checkbox-p489,17908
(defun org-at-item-counter-p ()org-at-item-counter-p493,18074
(defun org-list-context ()org-list-context503,18304
(defun org-list-struct ()org-list-struct572,21035
(defun org-list-struct-assoc-end (struct end-list)org-list-struct-assoc-end769,28755
(defun org-list-prevs-alist (struct)org-list-prevs-alist792,29432
(defun org-list-parents-alist (struct)org-list-parents-alist801,29734
(defsubst org-list-get-nth (n key struct)org-list-get-nth844,31357
(defun org-list-set-nth (n key struct new)org-list-set-nth848,31472
(defsubst org-list-get-ind (item struct)org-list-get-ind853,31641
(defun org-list-set-ind (item struct ind)org-list-set-ind857,31761
(defsubst org-list-get-bullet (item struct)org-list-get-bullet862,31923
(defun org-list-set-bullet (item struct bullet)org-list-set-bullet866,32041
(defsubst org-list-get-counter (item struct)org-list-get-counter871,32210
(defsubst org-list-get-checkbox (item struct)org-list-get-checkbox875,32330
(defun org-list-set-checkbox (item struct checkbox)org-list-set-checkbox879,32459
(defsubst org-list-get-tag (item struct)org-list-get-tag884,32638
(defun org-list-get-item-end (item struct)org-list-get-item-end888,32759
(defun org-list-get-item-end-before-blank (item struct)org-list-get-item-end-before-blank892,32882
(defun org-list-get-parent (item struct parents)org-list-get-parent900,33166
(defun org-list-has-child-p (item struct)org-list-has-child-p907,33451
(defun org-list-get-next-item (item struct prevs)org-list-get-next-item919,33831
(defun org-list-get-prev-item (item struct prevs)org-list-get-prev-item925,34073
(defun org-list-get-subtree (item struct)org-list-get-subtree931,34318
(defun org-list-get-all-items (item struct prevs)org-list-get-all-items944,34750
(defun org-list-get-children (item struct parents)org-list-get-children957,35310
(defun org-list-get-top-point (struct)org-list-get-top-point967,35686
(defun org-list-get-bottom-point (struct)org-list-get-bottom-point972,35812
(defun org-list-get-list-begin (item struct prevs)org-list-get-list-begin978,36007
(defalias 'org-list-get-first-item 'org-list-get-list-begin)org-list-get-first-item987,36389
(defun org-list-get-last-item (item struct prevs)org-list-get-last-item989,36451
(defun org-list-get-list-end (item struct prevs)org-list-get-list-end998,36828
(defun org-list-get-list-type (item struct prevs)org-list-get-list-type1004,37113
(defun org-list-get-item-number (item struct prevs parents)org-list-get-item-number1018,37678
(defun org-list-search-generic (search re bound noerr)org-list-search-generic1057,39073
(defun org-list-search-backward (regexp &optional bound noerror)org-list-search-backward1072,39659
(defun org-list-search-forward (regexp &optional bound noerror)org-list-search-forward1079,39978
(defsubst org-list-bullet-string (bullet)org-list-bullet-string1090,40323
(defun org-list-swap-items (beg-A beg-B struct)org-list-swap-items1103,40816
(defun org-list-separating-blank-lines-number (pos struct prevs)org-list-separating-blank-lines-number1185,44111
(defun org-list-insert-item (pos struct prevs &optional checkbox after-bullet)org-list-insert-item1241,46163
(defun org-list-delete-item (item struct)org-list-delete-item1362,51216
(defun org-list-send-item (item dest struct)org-list-send-item1398,52332
(defun org-list-struct-outdent (start end struct parents)org-list-struct-outdent1513,56486
(defun org-list-struct-indent (start end struct parents prevs)org-list-struct-indent1545,57566
(defun org-list-use-alpha-bul-p (first struct prevs)org-list-use-alpha-bul-p1611,59736
(defun org-list-inc-bullet-maybe (bullet)org-list-inc-bullet-maybe1636,60728
(defun org-list-struct-fix-bul (struct prevs)org-list-struct-fix-bul1653,61284
(defun org-list-struct-fix-ind (struct parents &optional bullet-size)org-list-struct-fix-ind1722,63923
(defun org-list-struct-fix-box (struct parents prevs &optional ordered)org-list-struct-fix-box1750,64968
(defun org-list-struct-fix-item-end (struct)org-list-struct-fix-item-end1814,67469
(defun org-list-struct-apply-struct (struct old-struct)org-list-struct-apply-struct1840,68453
(defun org-list-write-struct (struct parents &optional old-struct)org-list-write-struct1957,73155
(defun org-apply-on-list (function init-value &rest args)org-apply-on-list1991,74533
(defun org-list-set-item-visibility (item struct view)org-list-set-item-visibility2017,75443
(defun org-list-item-body-column (item)org-list-item-body-column2042,76365
(defalias 'org-list-get-item-begin 'org-in-item-p)org-list-get-item-begin2059,76889
(defun org-beginning-of-item ()org-beginning-of-item2061,76941
(defun org-beginning-of-item-list ()org-beginning-of-item-list2068,77163
(defun org-end-of-item-list ()org-end-of-item-list2080,77563
(defun org-end-of-item ()org-end-of-item2092,77944
(defun org-previous-item ()org-previous-item2103,78258
(defun org-next-item ()org-next-item2121,78880
(defun org-move-item-down ()org-move-item-down2139,79493
(defun org-move-item-up ()org-move-item-up2160,80398
(defun org-insert-item (&optional checkbox)org-insert-item2179,81202
(defun org-list-repair ()org-list-repair2219,82657
(defun org-cycle-list-bullet (&optional which)org-cycle-list-bullet2227,82948
(defun org-toggle-checkbox (&optional toggle-presence)org-toggle-checkbox2291,85617
(defun org-reset-checkbox-state-subtree ()org-reset-checkbox-state-subtree2404,89928
(defun org-update-checkbox-count (&optional all)org-update-checkbox-count2421,90422
(defun org-get-checkbox-statistics-face ()org-get-checkbox-statistics-face2548,95510
(defun org-update-checkbox-count-maybe (&optional all)org-update-checkbox-count-maybe2561,95994
(defvar org-last-indent-begin-marker (make-marker))org-last-indent-begin-marker2568,96310
(defvar org-last-indent-end-marker (make-marker))org-last-indent-end-marker2569,96362
(defun org-list-indent-item-generic (arg no-subtree struct)org-list-indent-item-generic2570,96412
(defun org-outdent-item ()org-outdent-item2663,99847
(defun org-indent-item ()org-indent-item2680,100458
(defun org-outdent-item-tree ()org-outdent-item-tree2697,101066
(defun org-indent-item-tree ()org-indent-item-tree2714,101685
(defvar org-tab-ind-state)org-tab-ind-state2731,102301
(defun org-cycle-item-indentation ()org-cycle-item-indentation2732,102328
(defun org-sort-list (&optional with-case sorting-type getkey-func compare-func)org-sort-list2777,104253
(defun org-list-parse-list (&optional delete)org-list-parse-list2880,107992
(defun org-list-make-subtree ()org-list-make-subtree2992,111861
(defun org-list-insert-radio-list ()org-list-insert-radio-list3000,112152
(defun org-list-send-list (&optional maybe)org-list-send-list3015,112652
(defsubst org-list-item-trim-br (item)org-list-item-trim-br3065,114468
(defun org-list-to-generic (list params)org-list-to-generic3069,114603
(defun org-list-to-latex (list &optional params)org-list-to-latex3201,119236
(defun org-list-to-html (list &optional params)org-list-to-html3226,120179
(defun org-list-to-texinfo (list &optional params)org-list-to-texinfo3245,120889
(defun org-list-to-subtree (list &optional params)org-list-to-subtree3263,121532

/home/malk/.emacs.d/elpa/org-20130128/org-icalendar.el,3012
(defgroup org-export-icalendar nilorg-export-icalendar35,1151
(defcustom org-combined-agenda-icalendar-file "~/org.ics"org-combined-agenda-icalendar-file40,1300
(defcustom org-icalendar-alarm-time 0org-icalendar-alarm-time47,1634
(defcustom org-icalendar-combined-name "OrgMode"org-icalendar-combined-name59,2063
(defcustom org-icalendar-combined-description nilorg-icalendar-combined-description64,2237
(defcustom org-icalendar-use-plain-timestamp torg-icalendar-use-plain-timestamp70,2426
(defcustom org-icalendar-honor-noexport-tag nilorg-icalendar-honor-noexport-tag75,2584
(defcustom org-icalendar-use-deadline '(event-if-not-todo todo-due)org-icalendar-use-deadline81,2780
(defcustom org-icalendar-use-scheduled '(todo-start)org-icalendar-use-scheduled97,3500
(defcustom org-icalendar-categories '(local-tags category)org-icalendar-categories116,4374
(defcustom org-icalendar-include-todo nilorg-icalendar-include-todo132,5025
(defvar org-icalendar-verify-function nilorg-icalendar-verify-function146,5543
(defcustom org-icalendar-include-bbdb-anniversaries nilorg-icalendar-include-bbdb-anniversaries157,6121
(defcustom org-icalendar-include-sexps torg-icalendar-include-sexps163,6353
(defcustom org-icalendar-include-body 100org-icalendar-include-body169,6591
(defcustom org-icalendar-store-UID nilorg-icalendar-store-UID180,7036
(defcustom org-icalendar-timezone (getenv "TZ")org-icalendar-timezone194,7760
(defvar org-icalendar-use-UTC-date-time nil)org-icalendar-use-UTC-date-time203,8087
(defcustom org-icalendar-date-time-formatorg-icalendar-date-time-format204,8132
(defun org-icalendar-use-UTC-date-timep ()org-icalendar-use-UTC-date-timep225,8886
(defun org-export-icalendar-this-file ()org-export-icalendar-this-file232,9073
(defun org-export-icalendar-all-agenda-files ()org-export-icalendar-all-agenda-files240,9345
(defun org-export-icalendar-combine-agenda-files ()org-export-icalendar-combine-agenda-files248,9671
(defun org-export-icalendar (combine &rest files)org-export-icalendar254,9948
(defvar org-before-save-iCalendar-file-hook nilorg-before-save-iCalendar-file-hook305,12189
(defvar org-after-save-iCalendar-file-hook nilorg-after-save-iCalendar-file-hook309,12347
(defvar org-agenda-default-appointment-duration) ; defined in org-agenda.elorg-agenda-default-appointment-duration315,12606
(defun org-icalendar-print-entries (&optional combine)org-icalendar-print-entries316,12682
(defun org-export-get-categories ()org-export-get-categories566,21921
(defun org-icalendar-cleanup-string (s &optional is-body maxlength)org-icalendar-cleanup-string581,22484
(defun org-icalendar-cleanup-string-rfc2455 (s &optional is-body maxlength)org-icalendar-cleanup-string-rfc2455609,23575
(defun org-icalendar-start-file (name)org-icalendar-start-file635,24680
(defun org-icalendar-finish-file ()org-icalendar-finish-file652,25198
(defun org-icalendar-ts-to-string (s keyword &optional inc)org-icalendar-ts-to-string656,25325

/home/malk/.emacs.d/elpa/org-20130128/org-crypt.el,835
(defgroup org-crypt nilorg-crypt77,3042
(defcustom org-crypt-tag-matcher "crypt"org-crypt-tag-matcher82,3116
(defcustom org-crypt-key ""org-crypt-key89,3343
(defcustom org-crypt-disable-auto-save 'askorg-crypt-disable-auto-save96,3542
(defun org-crypt-check-auto-save ()org-crypt-check-auto-save120,4443
(defun org-crypt-key-for-heading ()org-crypt-key-for-heading149,5652
(defun org-encrypt-string (str crypt-key)org-encrypt-string158,5995
(defun org-encrypt-entry ()org-encrypt-entry167,6470
(defun org-decrypt-entry ()org-decrypt-entry194,7365
(defun org-encrypt-entries ()org-encrypt-entries237,8835
(defun org-decrypt-entries ()org-decrypt-entries246,9076
(defun org-at-encrypted-entry-p ()org-at-encrypted-entry-p255,9307
(defun org-crypt-use-before-save-magic ()org-crypt-use-before-save-magic263,9574

/home/malk/.emacs.d/elpa/org-20130128/org-exp-blocks.el,1380
(defvar org-protecting-blocks nil) ; From org.elorg-protecting-blocks81,2944
(defun org-export-blocks-set (var value)org-export-blocks-set83,2994
(defcustom org-export-blocksorg-export-blocks95,3352
(defun org-export-blocks-add-block (block-spec)org-export-blocks-add-block111,3984
(defcustom org-export-interblocksorg-export-interblocks126,4711
(defcustom org-export-blocks-witheldorg-export-blocks-witheld135,5045
(defcustom org-export-blocks-postblock-hook nilorg-export-blocks-postblock-hook141,5219
(defun org-export-blocks-html-quote (body &optional open close)org-export-blocks-html-quote147,5408
(defun org-export-blocks-latex-quote (body &optional open close)org-export-blocks-latex-quote157,5707
(defvar org-src-preserve-indentation)     ; From org-src.elorg-src-preserve-indentation167,6010
(defun org-export-blocks-preprocess ()org-export-blocks-preprocess168,6070
(defcustom org-ditaa-jar-path (expand-file-nameorg-ditaa-jar-path245,9304
(defvar org-export-current-backend) ; dynamically bound in org-exp.elorg-export-current-backend258,9657
(defun org-export-blocks-format-ditaa (body &rest headers)org-export-blocks-format-ditaa259,9727
(defun org-export-blocks-format-dot (body &rest headers)org-export-blocks-format-dot313,12239
(defun org-export-blocks-format-comment (body &rest headers)org-export-blocks-format-comment371,14850

/home/malk/.emacs.d/elpa/org-20130128/org-exp.el,15071
(defgroup org-export nilorg-export60,2365
(defgroup org-export-general nilorg-export-general65,2466
(defcustom org-export-allow-BIND 'confirmorg-export-allow-BIND70,2600
(defvar org-export-publishing-directory nil)org-export-publishing-directory81,2986
(defcustom org-export-show-temporary-export-buffer torg-export-show-temporary-export-buffer83,3032
(defcustom org-export-copy-to-kill-ring torg-export-copy-to-kill-ring92,3456
(defcustom org-export-kill-product-buffer-when-displayed nilorg-export-kill-product-buffer-when-displayed97,3619
(defcustom org-export-run-in-background nilorg-export-run-in-background105,3913
(defcustom org-export-initial-scope 'bufferorg-export-initial-scope121,4631
(defcustom org-export-select-tags '("export")org-export-select-tags130,4952
(defcustom org-export-exclude-tags '("noexport")org-export-exclude-tags139,5354
(defcustom org-export-html-expand torg-export-html-expand148,5741
(defcustom org-export-with-special-strings torg-export-with-special-strings158,6080
(defcustom org-export-html-link-up ""org-export-html-link-up173,6527
(defcustom org-export-html-link-home ""org-export-html-link-home179,6721
(defcustom org-export-language-setuporg-export-language-setup185,6919
(defcustom org-export-default-language "en"org-export-default-language231,9996
(defcustom org-export-date-timestamp-format "%Y-%m-%d"org-export-date-timestamp-format238,10274
(defvar org-export-page-description ""org-export-page-description244,10458
(defvar org-export-page-keywords ""org-export-page-keywords249,10650
(defcustom org-export-skip-text-before-1st-heading nilorg-export-skip-text-before-1st-heading254,10836
(defcustom org-export-headline-levels 3org-export-headline-levels260,11054
(defcustom org-export-with-section-numbers torg-export-with-section-numbers270,11409
(defcustom org-export-section-number-format '((("1" ".")) . "")org-export-section-number-format277,11638
(defcustom org-export-with-toc torg-export-with-toc297,12434
(defcustom org-export-mark-todo-in-toc nilorg-export-mark-todo-in-toc319,13303
(defcustom org-export-with-todo-keywords torg-export-with-todo-keywords324,13461
(defcustom org-export-with-tasks torg-export-with-tasks330,13656
(defcustom org-export-with-priority nilorg-export-with-priority348,14343
(defcustom org-export-preserve-breaks nilorg-export-preserve-breaks354,14531
(defcustom org-export-with-archived-trees 'headlineorg-export-with-archived-trees363,14891
(defcustom org-export-author-info torg-export-author-info376,15375
(defcustom org-export-email-info nilorg-export-email-info384,15604
(defcustom org-export-creator-info torg-export-creator-info393,15849
(defcustom org-export-time-stamp-file torg-export-time-stamp-file399,16066
(defcustom org-export-with-timestamps torg-export-with-timestamps408,16341
(defcustom org-export-remove-timestamps-from-toc torg-export-remove-timestamps-from-toc413,16492
(defcustom org-export-with-tags 'not-in-tocorg-export-with-tags418,16655
(defcustom org-export-with-drawers nilorg-export-with-drawers430,17116
(defvar org-export-first-hook nilorg-export-first-hook441,17481
(defvar org-export-preprocess-hook nilorg-export-preprocess-hook446,17646
(defvar org-export-preprocess-after-include-files-hook nilorg-export-preprocess-after-include-files-hook455,18071
(defvar org-export-preprocess-after-tree-selection-hook nilorg-export-preprocess-after-tree-selection-hook459,18246
(defvar org-export-preprocess-after-headline-targets-hook nilorg-export-preprocess-after-headline-targets-hook465,18517
(defvar org-export-preprocess-before-selecting-backend-code-hook nilorg-export-preprocess-before-selecting-backend-code-hook470,18723
(defvar org-export-preprocess-after-blockquote-hook nilorg-export-preprocess-after-blockquote-hook474,18901
(defvar org-export-preprocess-after-radio-targets-hook nilorg-export-preprocess-after-radio-targets-hook479,19083
(defvar org-export-preprocess-before-normalizing-links-hook nilorg-export-preprocess-before-normalizing-links-hook483,19232
(defvar org-export-preprocess-before-backend-specifics-hook nilorg-export-preprocess-before-backend-specifics-hook487,19389
(defvar org-export-preprocess-final-hook nilorg-export-preprocess-final-hook490,19535
(defgroup org-export-translation nilorg-export-translation495,19742
(defcustom org-export-with-emphasize torg-export-with-emphasize500,19911
(defcustom org-export-with-footnotes torg-export-with-footnotes511,20376
(defcustom org-export-with-TeX-macros torg-export-with-TeX-macros519,20637
(defcustom org-export-with-LaTeX-fragments torg-export-with-LaTeX-fragments533,21243
(defcustom org-export-with-fixed-width torg-export-with-fixed-width565,22692
(defgroup org-export-tables nilorg-export-tables579,23183
(defcustom org-export-with-tables torg-export-with-tables584,23311
(defcustom org-export-highlight-first-table-line torg-export-highlight-first-table-line598,23697
(defcustom org-export-table-remove-special-lines torg-export-table-remove-special-lines607,24076
(defcustom org-export-table-remove-empty-lines torg-export-table-remove-empty-lines616,24502
(defcustom org-export-prefer-native-exporter-for-tables nilorg-export-prefer-native-exporter-for-tables624,24768
(defconst org-level-max 20)org-level-max640,25421
(defvar org-export-current-backend nilorg-export-current-backend642,25450
(defvar org-current-export-file nil) ; dynamically scoped parameterorg-current-export-file650,25852
(defvar org-current-export-dir nil) ; dynamically scoped parameterorg-current-export-dir651,25920
(defvar org-export-opt-plist nilorg-export-opt-plist652,25987
(defvar org-last-level nil) ; dynamically scoped variableorg-last-level654,26060
(defvar org-min-level nil) ; dynamically scoped variableorg-min-level655,26118
(defvar org-levels-open nil) ; dynamically scoped parameterorg-levels-open656,26175
(defvar org-export-footnotes-data nilorg-export-footnotes-data657,26235
(defvar org-export-footnotes-seen nilorg-export-footnotes-seen659,26340
(defconst org-export-plist-varsorg-export-plist-vars663,26466
(defun org-default-export-plist ()org-default-export-plist726,30128
(defvar org-export-inbuffer-options-extra nilorg-export-inbuffer-options-extra739,30570
(defvar org-export-options-filters nilorg-export-options-filters750,31210
(defun org-infile-export-plist ()org-infile-export-plist759,31597
(defun org-export-interpolate-newlines (s)org-export-interpolate-newlines886,37085
(defvar org-export-allow-BIND-local nil)org-export-allow-BIND-local891,37209
(defun org-export-confirm-letbind ()org-export-confirm-letbind892,37250
(defun org-install-letbind ()org-install-letbind904,37717
(defun org-export-add-options-to-plist (p options)org-export-add-options-to-plist911,37963
(defun org-export-add-subtree-options (p pos)org-export-add-subtree-options927,38447
(defun org-export-directory (type plist)org-export-directory946,39170
(defun org-export-process-option-filters (plist)org-export-process-option-filters953,39345
(defun org-export (&optional arg)org-export960,39544
(defun org-export-process-sentinel (process status)org-export-process-sentinel1112,45309
(defvar org-export-target-aliases nilorg-export-target-aliases1119,45544
(defvar org-export-preferred-target-alist nilorg-export-preferred-target-alist1121,45628
(defvar org-export-id-target-alist nilorg-export-id-target-alist1123,45725
(defvar org-export-code-refs nilorg-export-code-refs1125,45815
(defun org-export-preprocess-string (string &rest parameters)org-export-preprocess-string1128,45897
(defun org-export-kill-licensed-text ()org-export-kill-licensed-text1337,53658
(defvar org-export-define-heading-targets-headline-hook nilorg-export-define-heading-targets-headline-hook1346,53990
(defun org-export-define-heading-targets (target-alist)org-export-define-heading-targets1350,54169
(defun org-export-handle-invisible-targets (target-alist)org-export-handle-invisible-targets1397,56007
(defun org-export-target-internal-links (target-alist)org-export-target-internal-links1422,56996
(defun org-export-remember-html-container-classes ()org-export-remember-html-container-classes1479,59023
(defvar org-export-format-drawer-function nilorg-export-format-drawer-function1492,59501
(defun org-export-remove-or-extract-drawers (all-drawers exp-drawers)org-export-remove-or-extract-drawers1501,59942
(defun org-export-format-drawer (name content)org-export-format-drawer1533,61198
(defun org-export-handle-export-tags (select-tags exclude-tags)org-export-handle-export-tags1547,61771
(defun org-export-remove-tasks (keep)org-export-remove-tasks1603,63921
(defun org-export-remove-archived-trees (export-archived-trees)org-export-remove-archived-trees1633,65018
(defun org-export-remove-headline-metadata (opts)org-export-remove-headline-metadata1652,65749
(defun org-export-remove-timestamps ()org-export-remove-timestamps1670,66403
(defun org-export-remove-clock-lines ()org-export-remove-clock-lines1682,66820
(defvar org-heading-keyword-regexp-format) ; defined in org.elorg-heading-keyword-regexp-format1690,67076
(defun org-export-protect-quoted-subtrees ()org-export-protect-quoted-subtrees1691,67139
(defun org-export-convert-protected-spaces ()org-export-convert-protected-spaces1702,67558
(defun org-export-protect-verbatim ()org-export-protect-verbatim1722,68337
(defun org-export-protect-colon-examples ()org-export-protect-colon-examples1731,68678
(defvar org-export-backendsorg-export-backends1744,69097
(defun org-export-select-backend-specific-text ()org-export-select-backend-specific-text1748,69207
(defun org-export-mark-blockquote-verse-center ()org-export-mark-blockquote-verse-center1802,71549
(defun org-export-mark-list-end ()org-export-mark-list-end1826,72596
(defun org-export-mark-list-properties ()org-export-mark-list-properties1857,73878
(defun org-export-attach-captions-and-attributes (target-alist)org-export-attach-captions-and-attributes1923,76394
(defun org-export-remove-comment-blocks-and-subtrees ()org-export-remove-comment-blocks-and-subtrees1976,78362
(defun org-export-handle-comments (org-commentsp)org-export-handle-comments1994,79067
(defun org-export-handle-metalines ()org-export-handle-metalines2019,80099
(defun org-export-mark-radio-links ()org-export-mark-radio-links2036,80708
(defun org-store-forced-table-alignment ()org-store-forced-table-alignment2051,81245
(defun org-export-remove-special-table-lines ()org-export-remove-special-table-lines2077,82265
(defun org-export-protect-sub-super (s)org-export-protect-sub-super2100,83063
(defun org-export-normalize-links ()org-export-normalize-links2106,83240
(defun org-export-concatenate-multiline-links ()org-export-concatenate-multiline-links2158,85240
(defun org-export-concatenate-multiline-emphasis ()org-export-concatenate-multiline-emphasis2168,85690
(defun org-export-grab-title-from-buffer ()org-export-grab-title-from-buffer2186,86392
(defun org-export-get-title-from-subtree ()org-export-get-title-from-subtree2203,87080
(defun org-solidify-link-text (s &optional alist)org-solidify-link-text2227,87986
(defun org-get-min-level (lines &optional offset)org-get-min-level2237,88264
(defvar org-section-numbers (make-vector org-level-max 0))org-section-numbers2248,88610
(defun org-init-section-numbers ()org-init-section-numbers2250,88670
(defun org-section-number (&optional level)org-section-number2267,89255
(defun org-number-to-counter (n type)org-number-to-counter2303,90468
(defun org-number-to-roman (n)org-number-to-roman2319,91000
(defun org-export-preprocess-apply-macros ()org-export-preprocess-apply-macros2337,91473
(defun org-export-apply-macros-in-string (s)org-export-apply-macros-in-string2397,93794
(defun org-export-handle-include-files ()org-export-handle-include-files2407,94010
(defun org-export-handle-include-files-recurse ()org-export-handle-include-files-recurse2447,95754
(defun org-get-file-contents (file &optional prefix prefix1 markup minlevel parentlevel addlevel lines)org-get-file-contents2459,96195
(defun org-get-and-remove-property (listvar prop)org-get-and-remove-property2510,98080
(defun org-symname-or-string (s)org-symname-or-string2524,98598
(defvar org-export-last-code-line-counter-value 0)org-export-last-code-line-counter-value2531,98743
(defun org-export-replace-src-segments-and-examples ()org-export-replace-src-segments-and-examples2533,98795
(defvar org-export-latex-verbatim-wrap) ;; defined in org-latex.elorg-export-latex-verbatim-wrap2569,100282
(defvar org-export-latex-listings) ;; defined in org-latex.elorg-export-latex-listings2570,100349
(defvar org-export-latex-listings-langs) ;; defined in org-latex.elorg-export-latex-listings-langs2571,100411
(defvar org-export-latex-listings-w-names) ;; defined in org-latex.elorg-export-latex-listings-w-names2572,100479
(defvar org-export-latex-minted-langs) ;; defined in org-latex.elorg-export-latex-minted-langs2573,100549
(defvar org-export-latex-custom-lang-environments) ;; defined in org-latex.elorg-export-latex-custom-lang-environments2574,100615
(defvar org-export-latex-listings-options) ;; defined in org-latex.elorg-export-latex-listings-options2575,100693
(defvar org-export-latex-minted-options) ;; defined in org-latex.elorg-export-latex-minted-options2576,100763
(defun org-remove-formatting-on-newlines-in-region (beg end)org-remove-formatting-on-newlines-in-region2578,100832
(defun org-export-format-source-code-or-exampleorg-export-format-source-code-or-example2587,101129
(defun org-export-number-lines (text &optional skip1 skip2 number contorg-export-number-lines2803,109241
(defun org-search-todo-below (line lines level)org-search-todo-below2933,114219
(defun org-export-visible (type arg)org-export-visible2951,114782
(defvar org-export-htmlized-org-css-url) ;; defined in org-html.elorg-export-htmlized-org-css-url3029,117809
(defun org-export-string (string fmt &optional dir)org-export-string3031,117877
(defun org-export-as-org (arg &optional ext-plist to-buffer body-only pub-dir)org-export-as-org3054,118812
(defvar org-archive-location)  ;; gets loaded with the org-archive require.org-archive-location3146,122226
(defun org-get-current-options ()org-get-current-options3147,122302
(defun org-insert-export-options-template ()org-insert-export-options-template3233,125063
(defvar org-table-colgroup-info nil)org-table-colgroup-info3242,125370
(defun org-table-clean-before-export (lines &optional maybe-quoted)org-table-clean-before-export3244,125408
(defun org-export-cleanup-toc-line (s)org-export-cleanup-toc-line3307,127444
(defun org-get-text-property-any (pos prop &optional object)org-get-text-property-any3325,128158
(defun org-export-get-coderef-format (path desc)org-export-get-coderef-format3330,128373
(defun org-export-push-to-kill-ring (format)org-export-push-to-kill-ring3338,128583

/home/malk/.emacs.d/elpa/org-20130128/ob-gnuplot.el,1300
(defvar org-babel-default-header-args:gnuplotorg-babel-default-header-args:gnuplot53,1800
(defvar org-babel-gnuplot-timestamp-fmt nil)org-babel-gnuplot-timestamp-fmt57,1982
(defun org-babel-gnuplot-process-vars (params)org-babel-gnuplot-process-vars59,2028
(defun org-babel-expand-body:gnuplot (body params)org-babel-expand-body:gnuplot74,2573
(defun org-babel-execute:gnuplot (body params)org-babel-execute:gnuplot130,4965
(defun org-babel-prep-session:gnuplot (session params)org-babel-prep-session:gnuplot163,6188
(defun org-babel-load-session:gnuplot (session body params)org-babel-load-session:gnuplot175,6734
(defun org-babel-variable-assignments:gnuplot (params)org-babel-variable-assignments:gnuplot184,7080
(defvar gnuplot-buffer)gnuplot-buffer190,7326
(defun org-babel-gnuplot-initiate-session (&optional session params)org-babel-gnuplot-initiate-session191,7350
(defun org-babel-gnuplot-quote-timestamp-field (s)org-babel-gnuplot-quote-timestamp-field202,7794
(defvar org-table-number-regexp)org-table-number-regexp206,7995
(defvar org-ts-regexp3)org-ts-regexp3207,8028
(defun org-babel-gnuplot-quote-tsv-field (s)org-babel-gnuplot-quote-tsv-field208,8052
(defun org-babel-gnuplot-table-to-data (table data-file params)org-babel-gnuplot-table-to-data217,8398

/home/malk/.emacs.d/elpa/org-20130128/ob-calc.el,418
(defvar org-babel-default-header-args:calc nilorg-babel-default-header-args:calc40,1320
(defun org-babel-expand-body:calc (body params)org-babel-expand-body:calc43,1428
(defun org-babel-execute:calc (body params)org-babel-execute:calc46,1546
(defvar var-syms) ; Dynamically scoped from org-babel-execute:calcvar-syms93,3116
(defun org-babel-calc-maybe-resolve-var (el)org-babel-calc-maybe-resolve-var94,3183

/home/malk/.emacs.d/elpa/org-20130128/org-plot.el,917
(defvar org-plot/gnuplot-default-optionsorg-plot/gnuplot-default-options42,1381
(defvar org-plot-timestamp-fmt nil)org-plot-timestamp-fmt48,1541
(defun org-plot/add-options-to-plist (p options)org-plot/add-options-to-plist50,1578
(defun org-plot/goto-nearest-table ()org-plot/goto-nearest-table90,2786
(defun org-plot/collect-options (&optional params)org-plot/collect-options97,3081
(defun org-plot-quote-timestamp-field (s)org-plot-quote-timestamp-field107,3486
(defun org-plot-quote-tsv-field (s)org-plot-quote-tsv-field111,3675
(defun org-plot/gnuplot-to-data (table data-file params)org-plot/gnuplot-to-data118,3957
(defun org-plot/gnuplot-to-grid-data (table data-file params)org-plot/gnuplot-to-grid-data134,4470
(defun org-plot/gnuplot-script (data-file num-cols params &optional preface)org-plot/gnuplot-script185,6430
(defun org-plot/gnuplot (&optional params)org-plot/gnuplot275,9824

/home/malk/.emacs.d/elpa/org-20130128/ob-css.el,248
(defvar org-babel-default-header-args:css '())org-babel-default-header-args:css32,1041
(defun org-babel-execute:css (body params)org-babel-execute:css34,1089
(defun org-babel-prep-session:css (session params)org-babel-prep-session:css39,1232

/home/malk/.emacs.d/elpa/org-20130128/org-pcomplete.el,2613
(defgroup org-complete nilorg-complete49,1724
(defvar org-drawer-regexp)org-drawer-regexp54,1830
(defvar org-property-re)org-property-re55,1857
(defun org-thing-at-point ()org-thing-at-point57,1883
(defun org-command-at-point ()org-command-at-point105,3727
(defun org-parse-arguments ()org-parse-arguments118,4192
(defun org-pcomplete-initial ()org-pcomplete-initial136,4740
(defvar org-options-keywords)                ; From org.elorg-options-keywords143,4982
(defvar org-additional-option-like-keywords) ; From org.elorg-additional-option-like-keywords144,5041
(defun pcomplete/org-mode/file-option ()pcomplete/org-mode/file-option145,5100
(defvar org-startup-options)org-startup-options158,5461
(defun pcomplete/org-mode/file-option/startup ()pcomplete/org-mode/file-option/startup159,5490
(defmacro pcomplete/org-mode/file-option/x (option)pcomplete/org-mode/file-option/x172,5980
(defun pcomplete/org-mode/file-option/options ()pcomplete/org-mode/file-option/options184,6347
(defun pcomplete/org-mode/file-option/title ()pcomplete/org-mode/file-option/title188,6499
(defun pcomplete/org-mode/file-option/author ()pcomplete/org-mode/file-option/author192,6645
(defun pcomplete/org-mode/file-option/email ()pcomplete/org-mode/file-option/email196,6794
(defun pcomplete/org-mode/file-option/date ()pcomplete/org-mode/file-option/date200,6940
(defun pcomplete/org-mode/file-option/bind ()pcomplete/org-mode/file-option/bind204,7083
(defvar org-link-abbrev-alist-local)org-link-abbrev-alist-local211,7338
(defvar org-link-abbrev-alist)org-link-abbrev-alist212,7375
(defun pcomplete/org-mode/link ()pcomplete/org-mode/link213,7406
(defvar org-entities)org-entities221,7653
(defun pcomplete/org-mode/tex ()pcomplete/org-mode/tex222,7675
(defvar org-todo-keywords-1)org-todo-keywords-1229,7918
(defun pcomplete/org-mode/todo ()pcomplete/org-mode/todo230,7947
(defvar org-todo-line-regexp)org-todo-line-regexp234,8105
(defun pcomplete/org-mode/searchhead ()pcomplete/org-mode/searchhead235,8135
(defvar org-tag-alist)org-tag-alist250,8605
(defun pcomplete/org-mode/tag ()pcomplete/org-mode/tag251,8628
(defun pcomplete/org-mode/prop ()pcomplete/org-mode/prop269,9173
(defvar org-drawers)org-drawers282,9571
(defun pcomplete/org-mode/drawer ()pcomplete/org-mode/drawer284,9593
(defun pcomplete/org-mode/block-option/src ()pcomplete/org-mode/block-option/src301,10152
(defun pcomplete/org-mode/block-option/clocktable ()pcomplete/org-mode/block-option/clocktable317,10749
(defun org-pcomplete-case-double (list)org-pcomplete-case-double326,11100

/home/malk/.emacs.d/elpa/org-20130128/org-freemind.el,3546
(defgroup org-freemind nilorg-freemind67,2204
(defvar org-freemind-node-style nil "Internal use.")org-freemind-node-style93,2870
(defcustom org-freemind-node-styles nilorg-freemind-node-styles95,2924
(defun org-export-as-freemind (&optional hidden ext-plistorg-export-as-freemind141,5616
(defun org-freemind-show (mm-file)org-freemind-show195,7652
(defconst org-freemind-org-nfix "--org-mode: ")org-freemind-org-nfix227,9304
(defun org-freemind-escape-str-from-org (org-str)org-freemind-escape-str-from-org232,9428
(defun org-freemind-unescape-str-to-org (fm-str)org-freemind-unescape-str-to-org260,10602
(defun org-freemind-convert-links-helper (matched)org-freemind-convert-links-helper284,11594
(defun org-freemind-convert-links-from-org (org-str)org-freemind-convert-links-from-org311,12765
(defun org-freemind-convert-links-to-org (fm-str)org-freemind-convert-links-to-org340,13764
(defvar org-freemind-bol-helper-base-indent nil)org-freemind-bol-helper-base-indent373,14939
(defun org-freemind-bol-helper (matched)org-freemind-bol-helper375,14989
(defun org-freemind-convert-text-p (text)org-freemind-convert-text-p393,15686
(defcustom org-freemind-node-css-styleorg-freemind-node-css-style410,16543
(defun org-freemind-org-text-to-freemind-subnode/note (node-name start end drawers-regexp)org-freemind-org-text-to-freemind-subnode/note420,16956
(defun org-freemind-write-node (mm-buffer drawers-regexporg-freemind-write-node521,21189
(defun org-freemind-check-overwrite (file interactively)org-freemind-check-overwrite599,24217
(defvar org-freemind-node-patternorg-freemind-node-pattern613,24684
(defun org-freemind-look-for-visible-child (node-level)org-freemind-look-for-visible-child621,24859
(defun org-freemind-goto-line (line)org-freemind-goto-line636,25477
(defun org-freemind-write-mm-buffer (org-buffer mm-buffer node-at-line)org-freemind-write-mm-buffer643,25634
(defun org-freemind-get-node-style (node-name)org-freemind-get-node-style814,33604
(defun org-freemind-do-apply-node-style (style-list)org-freemind-do-apply-node-style831,34362
(defun org-freemind-from-org-mode-node (node-line mm-file)org-freemind-from-org-mode-node892,36227
(defun org-freemind-from-org-mode (org-file mm-file)org-freemind-from-org-mode919,37512
(defun org-freemind-from-org-sparse-tree (org-buffer mm-file)org-freemind-from-org-sparse-tree952,39084
(defun org-freemind-lt-symbols (sym-a sym-b)org-freemind-lt-symbols982,40339
(defun org-freemind-lt-xml-attrs (attr-a attr-b)org-freemind-lt-xml-attrs985,40501
(defsubst org-freemind-symbols= (sym-a sym-b)org-freemind-symbols=1000,40830
(defun org-freemind-get-children (parent path)org-freemind-get-children1007,41092
(defun org-freemind-get-richcontent-node (node)org-freemind-get-richcontent-node1058,43289
(defun org-freemind-get-richcontent-note (node)org-freemind-get-richcontent-note1065,43588
(defun org-freemind-test-get-tree-text ()org-freemind-test-get-tree-text1072,43887
(defun org-freemind-get-tree-text (node)org-freemind-get-tree-text1083,44116
(defun org-freemind-get-richcontent-node-text (node)org-freemind-get-richcontent-node-text1119,45318
(defun org-freemind-get-richcontent-note-text (node)org-freemind-get-richcontent-note-text1128,45655
(defun org-freemind-get-icon-names (node)org-freemind-get-icon-names1137,46002
(defun org-freemind-node-to-org (node level skip-levels)org-freemind-node-to-org1145,46269
(defun org-freemind-to-org-mode (mm-file org-file)org-freemind-to-org-mode1191,48290

/home/malk/.emacs.d/elpa/org-20130128/org-mouse.el,4478
(defvar org-agenda-allow-remote-undo)org-agenda-allow-remote-undo142,4252
(defvar org-agenda-undo-list)org-agenda-undo-list143,4290
(defvar org-agenda-custom-commands)org-agenda-custom-commands144,4320
(defvar org-mouse-plain-list-regexp "\\([ \t]*\\)\\([-+*]\\|[0-9]+[.)]\\) "org-mouse-plain-list-regexp152,4728
(defvar org-mouse-direct torg-mouse-direct154,4855
(defgroup org-mouse nilorg-mouse161,5155
(defcustom org-mouse-punctuation ":"org-mouse-punctuation166,5246
(defcustom org-mouse-featuresorg-mouse-features171,5380
(defun org-mouse-re-search-line (regexp)org-mouse-re-search-line184,6042
(defun org-mouse-end-headline ()org-mouse-end-headline189,6213
(defvar org-mouse-context-menu-function nilorg-mouse-context-menu-function198,6475
(defun org-mouse-show-context-menu (event prefix)org-mouse-show-context-menu204,6724
(defun org-mouse-line-position ()org-mouse-line-position229,7772
(defun org-mouse-empty-line ()org-mouse-empty-line241,8175
(defun org-mouse-next-heading ()org-mouse-next-heading245,8329
(defun org-mouse-insert-heading ()org-mouse-insert-heading254,8600
(defun org-mouse-timestamp-today (&optional shift units)org-mouse-timestamp-today267,9033
(defun org-mouse-keyword-menu (keywords function &optional selected itemformat)org-mouse-keyword-menu275,9293
(defun org-mouse-remove-match-and-spaces ()org-mouse-remove-match-and-spaces310,10688
(defvar org-mouse-rest)org-mouse-rest316,10850
(defun org-mouse-replace-match-and-surround (newtext &optional fixedcaseorg-mouse-replace-match-and-surround317,10874
(defun org-mouse-keyword-replace-menu (keywords &optional group itemformatorg-mouse-keyword-replace-menu327,11250
(defun org-mouse-show-headlines ()org-mouse-show-headlines359,12496
(defun org-mouse-show-overview ()org-mouse-show-overview368,12761
(defun org-mouse-set-priority (priority)org-mouse-set-priority374,12949
(defvar org-mouse-priority-regexp "\\[#\\([A-Z]\\)\\]"org-mouse-priority-regexp378,13076
(defun org-mouse-get-priority (&optional default)org-mouse-get-priority383,13270
(defun org-mouse-delete-timestamp ()org-mouse-delete-timestamp391,13590
(defun org-mouse-looking-at (regexp skipchars &optional movechars)org-mouse-looking-at400,13947
(defun org-mouse-priority-list ()org-mouse-priority-list409,14217
(defun org-mouse-todo-menu (state)org-mouse-todo-menu413,14341
(defun org-mouse-tag-menu ()		;todoorg-mouse-tag-menu422,14584
(defun org-mouse-set-tags (tags)org-mouse-set-tags441,15155
(defun org-mouse-insert-checkbox ()org-mouse-insert-checkbox454,15504
(defun org-mouse-agenda-type (type)org-mouse-agenda-type462,15703
(defun org-mouse-list-options-menu (alloptions &optional function)org-mouse-list-options-menu471,15921
(defun org-mouse-clip-text (text maxlength)org-mouse-clip-text491,16511
(defun org-mouse-popup-global-menu ()org-mouse-popup-global-menu496,16657
(defun org-mouse-get-context (contextlist context)org-mouse-get-context555,18760
(defun org-mouse-for-each-item (funct)org-mouse-for-each-item562,18990
(defun org-mouse-bolp ()org-mouse-bolp568,19254
(defun org-mouse-insert-item (text)org-mouse-insert-item574,19463
(defadvice dnd-insert-text (around org-mouse-dnd-insert-text activate)dnd-insert-text595,20088
(defadvice dnd-open-file (around org-mouse-dnd-open-file activate)dnd-open-file600,20243
(defun org-mouse-match-closure (function)org-mouse-match-closure605,20393
(defun org-mouse-yank-link (click)org-mouse-yank-link612,20575
(defun org-mouse-context-menu (&optional event)org-mouse-context-menu621,20886
(defun org-mouse-mark-active ()org-mouse-mark-active851,29453
(defun org-mouse-in-region-p (pos)org-mouse-in-region-p854,29527
(defun org-mouse-down-mouse (event)org-mouse-down-mouse859,29660
(defun org-mouse-move-tree-start (event)org-mouse-move-tree-start917,31852
(defun org-mouse-make-marker (position)org-mouse-make-marker922,31997
(defun org-mouse-move-tree (event)org-mouse-move-tree926,32142
(defun org-mouse-transform-to-outline ()org-mouse-transform-to-outline973,33501
(defvar org-mouse-cmd) ;dynamically scoped from `org-with-remote-undo'.org-mouse-cmd990,34133
(defun org-mouse-do-remotely (command)org-mouse-do-remotely992,34206
(defun org-mouse-agenda-context-menu (&optional event)org-mouse-agenda-context-menu1031,35622
(defun org-mouse-get-gesture (event)org-mouse-get-gesture1084,37764
(defvar org-agenda-mode-map)org-agenda-mode-map1091,37984

/home/malk/.emacs.d/elpa/org-20130128/org-ctags.el,2226
(defgroup org-ctags nilorg-ctags144,6010
(defvar org-ctags-enabled-p torg-ctags-enabled-p149,6127
(defvar org-ctags-tag-regexp "/<<([^>]+)>>/\\1/d,definition/"org-ctags-tag-regexp152,6199
(defcustom org-ctags-path-to-ctagsorg-ctags-path-to-ctags158,6464
(defcustom org-ctags-open-link-functionsorg-ctags-open-link-functions168,6704
(defvar org-ctags-tag-list nilorg-ctags-tag-list186,7348
(defcustom org-ctags-new-topic-templateorg-ctags-new-topic-template190,7471
(defadvice visit-tags-table (after org-ctags-load-tag-list activate compile)visit-tags-table214,8337
(defun org-ctags-enable ()org-ctags-enable220,8571
(defun org-ctags-get-filename-for-tag (tag)org-ctags-get-filename-for-tag230,8916
(defun org-ctags-all-tags-in-current-tags-table ()org-ctags-all-tags-in-current-tags-table257,10041
(defun org-ctags-string-search-and-replace (search replace string)org-ctags-string-search-and-replace274,10653
(defun y-or-n-minibuffer (prompt)y-or-n-minibuffer279,10853
(defun org-ctags-open-file (name &optional title)org-ctags-open-file287,11024
(defadvice find-tag (before org-ctags-set-org-mark-before-finding-tagfind-tag308,11824
(defun org-ctags-find-tag-at-point ()org-ctags-find-tag-at-point317,12110
(defun org-ctags-find-tag (name)org-ctags-find-tag356,13451
(defun org-ctags-visit-buffer-or-file (name &optional create)org-ctags-visit-buffer-or-file375,14081
(defun org-ctags-ask-visit-buffer-or-file (name)org-ctags-ask-visit-buffer-or-file406,15362
(defun org-ctags-append-topic (name &optional narrowp)org-ctags-append-topic413,15632
(defun org-ctags-ask-append-topic (name &optional narrowp)org-ctags-ask-append-topic435,16384
(defun org-ctags-rebuild-tags-file-then-find-tag (name)org-ctags-rebuild-tags-file-then-find-tag445,16770
(defun org-ctags-ask-rebuild-tags-file-then-find-tag (name)org-ctags-ask-rebuild-tags-file-then-find-tag456,17156
(defun org-ctags-fail-silently (name)org-ctags-fail-silently469,17594
(defun org-ctags-create-tags (&optional directory-name)org-ctags-create-tags479,17893
(defvar org-ctags-find-tag-history nilorg-ctags-find-tag-history514,19446
(defun org-ctags-find-tag-interactive ()org-ctags-find-tag-interactive517,19550

/home/malk/.emacs.d/elpa/org-20130128/org-mew.el,360
(defgroup org-mew nilorg-mew35,1260
(defcustom org-mew-link-to-refile-destination torg-mew-link-to-refile-destination40,1361
(defvar mew-init-p)mew-init-p64,2617
(defvar mew-summary-goto-line-then-display)mew-summary-goto-line-then-display65,2637
(defun org-mew-store-link ()org-mew-store-link72,2823
(defun org-mew-open (path)org-mew-open110,4446

/home/malk/.emacs.d/elpa/org-20130128/org-protocol.el,1774
(defgroup org-protocol nilorg-protocol144,5290
(defconst org-protocol-protocol-alist-defaultorg-protocol-protocol-alist-default157,5665
(defconst org-protocol-the-protocol "org-protocol"org-protocol-the-protocol165,6169
(defcustom org-protocol-reverse-list-of-files torg-protocol-reverse-list-of-files174,6584
(defcustom org-protocol-project-alist nilorg-protocol-project-alist183,6983
(defcustom org-protocol-protocol-alist nilorg-protocol-protocol-alist227,8719
(defcustom org-protocol-default-template-key nilorg-protocol-default-template-key269,10678
(defcustom org-protocol-data-separator "/+"org-protocol-data-separator276,10893
(defun org-protocol-sanitize-uri (uri)org-protocol-sanitize-uri284,11082
(defun org-protocol-split-data (data &optional unhexify separator)org-protocol-split-data292,11416
(defun org-protocol-flatten-greedy (param-list &optional strip-path replacement)org-protocol-flatten-greedy308,12109
(defun org-protocol-flatten (l)org-protocol-flatten352,13706
(defun org-protocol-store-link (fname)org-protocol-store-link365,14158
(defun org-protocol-remember (info)org-protocol-remember394,15310
(defun org-protocol-capture (info)org-protocol-capture412,15902
(defun org-protocol-do-capture (info capture-func)org-protocol-do-capture439,16894
(defun org-protocol-open-source (fname)org-protocol-open-source465,17917
(defun org-protocol-check-filename-for-protocol (fname restoffiles client)org-protocol-check-filename-for-protocol527,20431
(defadvice server-visit-files (before org-protocol-detect-protocol-server activate)server-visit-files567,22322
(defun org-protocol-create-for-org ()org-protocol-create-for-org589,23266
(defun org-protocol-create (&optional project-plist)org-protocol-create601,23829

/home/malk/.emacs.d/elpa/org-20130128/org-src.el,4535
(defcustom org-edit-src-region-extra nilorg-edit-src-region-extra50,1848
(defcustom org-coderef-label-format "(ref:%s)"org-coderef-label-format67,2539
(defcustom org-edit-fixed-width-region-mode 'artist-modeorg-edit-fixed-width-region-mode84,3226
(defcustom org-src-preserve-indentation nilorg-src-preserve-indentation94,3565
(defcustom org-edit-src-content-indentation 2org-edit-src-content-indentation106,4158
(defvar org-src-strip-leading-and-trailing-blank-lines nilorg-src-strip-leading-and-trailing-blank-lines115,4552
(defcustom org-edit-src-persistent-message torg-edit-src-persistent-message118,4688
(defcustom org-src-window-setup 'reorganize-frameorg-src-window-setup125,4984
(defvar org-src-mode-hook nilorg-src-mode-hook144,5799
(defcustom org-src-lang-modesorg-src-lang-modes155,6259
(defvar org-src-mode-map (make-sparse-keymap))org-src-mode-map175,7031
(define-key org-src-mode-map "\C-c'" 'org-edit-src-exit)org-src-mode-map176,7078
(define-key org-src-mode-map "\C-x\C-s" 'org-edit-src-save)org-src-mode-map177,7135
(defvar org-edit-src-force-single-line nil)org-edit-src-force-single-line179,7196
(defvar org-edit-src-from-org-mode nil)org-edit-src-from-org-mode180,7240
(defvar org-edit-src-allow-write-back-p t)org-edit-src-allow-write-back-p181,7280
(defvar org-edit-src-picture nil)org-edit-src-picture182,7323
(defvar org-edit-src-beg-marker nil)org-edit-src-beg-marker183,7357
(defvar org-edit-src-end-marker nil)org-edit-src-end-marker184,7394
(defvar org-edit-src-overlay nil)org-edit-src-overlay185,7431
(defvar org-edit-src-block-indentation nil)org-edit-src-block-indentation186,7465
(defvar org-edit-src-saved-temp-window-config nil)org-edit-src-saved-temp-window-config187,7509
(defvar org-src-ask-before-returning-to-edit-buffer torg-src-ask-before-returning-to-edit-buffer189,7561
(defvar org-src-babel-info nil)org-src-babel-info195,7837
(define-minor-mode org-src-modeorg-src-mode197,7870
(defun org-edit-src-code (&optional context code edit-buffer-name)org-edit-src-code205,8221
(defun org-edit-src-continue (e)org-edit-src-continue346,14227
(defun org-src-switch-to-buffer (buffer context)org-src-switch-to-buffer354,14518
(defun org-src-construct-edit-buffer-name (org-buffer-name lang)org-src-construct-edit-buffer-name382,15397
(defun org-src-edit-buffer-p (&optional buffer)org-src-edit-buffer-p386,15578
(defun org-edit-src-find-buffer (beg end)org-edit-src-find-buffer395,15983
(defun org-edit-fixed-width-region ()org-edit-fixed-width-region410,16514
(defun org-edit-src-find-region-and-lang ()org-edit-src-find-region-and-lang500,20066
(defun org-edit-src-get-lang (lang)org-edit-src-get-lang571,22990
(defun org-edit-src-get-label-format (s)org-edit-src-get-label-format585,23409
(defun org-edit-src-get-indentation (pos)org-edit-src-get-indentation591,23591
(defun org-escape-code-in-region (beg end)org-escape-code-in-region597,23750
(defun org-escape-code-in-string (s)org-escape-code-in-string607,24103
(defun org-unescape-code-in-region (beg end)org-unescape-code-in-region613,24350
(defun org-unescape-code-in-string (s)org-unescape-code-in-string623,24721
(defun org-edit-src-exit (&optional context)org-edit-src-exit630,24989
(defmacro org-src-in-org-buffer (&rest body)org-src-in-org-buffer727,28753
(def-edebug-spec org-src-in-org-buffer (body))org-src-in-org-buffer741,29259
(defun org-edit-src-save ()org-edit-src-save743,29307
(defun org-src-tangle (arg)org-src-tangle750,29549
(defun org-src-mode-configure-edit-buffer ()org-src-mode-configure-edit-buffer755,29674
(defun org-src-associate-babel-session (info)org-src-associate-babel-session775,30440
(defun org-src-babel-configure-edit-buffer ()org-src-babel-configure-edit-buffer784,30820
(defmacro org-src-do-at-code-block (&rest body)org-src-do-at-code-block789,31024
(def-edebug-spec org-src-do-at-code-block (body))org-src-do-at-code-block796,31315
(defun org-src-do-key-sequence-at-code-block (&optional key)org-src-do-key-sequence-at-code-block798,31366
(defcustom org-src-tab-acts-natively nilorg-src-tab-acts-natively823,32364
(defun org-src-native-tab-command-maybe ()org-src-native-tab-command-maybe830,32571
(defun org-src-font-lock-fontify-block (lang start end)org-src-font-lock-fontify-block841,33003
(defun org-src-fontify-block ()org-src-fontify-block871,34268
(defun org-src-fontify-buffer ()org-src-fontify-buffer879,34516
(defun org-src-get-lang-mode (lang)org-src-get-lang-mode885,34679

/home/malk/.emacs.d/elpa/org-20130128/org-bibtex.el,2391
(defvar org-bibtex-description nil) ; dynamically scoped from org.elorg-bibtex-description116,4334
(defvar org-id-locations)org-id-locations117,4403
(defvar org-bibtex-typesorg-bibtex-types128,4820
(defvar org-bibtex-fieldsorg-bibtex-fields187,7678
(defvar org-bibtex-entries nilorg-bibtex-entries214,11202
(defcustom org-bibtex-autogen-keys nilorg-bibtex-autogen-keys217,11275
(defcustom org-bibtex-prefix nilorg-bibtex-prefix223,11449
(defcustom org-bibtex-treat-headline-as-title torg-bibtex-treat-headline-as-title230,11665
(defcustom org-bibtex-export-arbitrary-fields nilorg-bibtex-export-arbitrary-fields239,11988
(defcustom org-bibtex-key-property "CUSTOM_ID"org-bibtex-key-property248,12347
(defcustom org-bibtex-tags nilorg-bibtex-tags258,12700
(defcustom org-bibtex-tags-are-keywords nilorg-bibtex-tags-are-keywords264,12871
(defcustom org-bibtex-no-export-tags nilorg-bibtex-no-export-tags279,13463
(defcustom org-bibtex-type-property-name "btype"org-bibtex-type-property-name286,13721
(defun org-bibtex-get (property)org-bibtex-get294,13917
(defun org-bibtex-put (property value)org-bibtex-put302,14227
(defun org-bibtex-headline ()org-bibtex-headline311,14540
(defun org-bibtex-ask (field)org-bibtex-ask376,16791
(defun org-bibtex-autokey ()org-bibtex-autokey389,17358
(defun org-bibtex-fleshout (type &optional optional)org-bibtex-fleshout408,18005
(defun org-bibtex-open (path)org-bibtex-open441,19481
(defun org-bibtex-store-link ()org-bibtex-store-link448,19731
(defun org-create-file-search-in-bibtex ()org-create-file-search-in-bibtex485,21504
(defun org-execute-file-search-in-bibtex (s)org-execute-file-search-in-bibtex507,22485
(defun org-bibtex (&optional filename)org-bibtex533,23643
(defun org-bibtex-check (&optional optional)org-bibtex-check556,24512
(defun org-bibtex-check-all (&optional optional)org-bibtex-check-all566,24937
(defun org-bibtex-create (&optional arg nonew)org-bibtex-create571,25170
(defun org-bibtex-create-in-current-entry (&optional arg)org-bibtex-create-in-current-entry597,26173
(defun org-bibtex-read ()org-bibtex-read603,26378
(defun org-bibtex-write ()org-bibtex-write627,27400
(defun org-bibtex-yank ()org-bibtex-yank659,28560
(defun org-bibtex-export-to-kill-ring ()org-bibtex-export-to-kill-ring668,28859
(defun org-bibtex-search (string)org-bibtex-search674,29046

/home/malk/.emacs.d/elpa/org-20130128/org-taskjuggler.el,3284
(defgroup org-export-taskjuggler nilorg-export-taskjuggler161,6294
(defcustom org-export-taskjuggler-extension ".tjp"org-export-taskjuggler-extension166,6443
(defcustom org-export-taskjuggler-project-tag "taskjuggler_project"org-export-taskjuggler-project-tag172,6599
(defcustom org-export-taskjuggler-resource-tag "taskjuggler_resource"org-export-taskjuggler-resource-tag179,6826
(defcustom org-export-taskjuggler-target-version 2.4org-export-taskjuggler-target-version186,7059
(defcustom org-export-taskjuggler-default-project-version "1.0"org-export-taskjuggler-default-project-version192,7241
(defcustom org-export-taskjuggler-default-project-duration 280org-export-taskjuggler-default-project-duration198,7418
(defcustom org-export-taskjuggler-default-reportsorg-export-taskjuggler-default-reports206,7735
(defcustom org-export-taskjuggler-default-global-propertiesorg-export-taskjuggler-default-global-properties226,8327
(defvar org-export-taskjuggler-final-hook nilorg-export-taskjuggler-final-hook245,8955
(defvar org-export-taskjuggler-old-level)org-export-taskjuggler-old-level251,9140
(defun org-export-as-taskjuggler ()org-export-as-taskjuggler254,9198
(defun org-export-as-taskjuggler-and-open ()org-export-as-taskjuggler-and-open340,12703
(defun org-taskjuggler-targeting-tj3-p ()org-taskjuggler-targeting-tj3-p349,13066
(defun org-taskjuggler-parent-is-ordered-p ()org-taskjuggler-parent-is-ordered-p353,13212
(defun org-taskjuggler-components ()org-taskjuggler-components359,13446
(defun org-taskjuggler-assign-task-ids (tasks)org-taskjuggler-assign-task-ids374,14072
(defun org-taskjuggler-compute-task-leafiness (tasks)org-taskjuggler-compute-task-leafiness407,15366
(defun org-taskjuggler-assign-resource-ids (resources)org-taskjuggler-assign-resource-ids427,16129
(defun org-taskjuggler-resolve-dependencies (tasks)org-taskjuggler-resolve-dependencies438,16554
(defun org-taskjuggler-tokenize-dependencies (dependencies)org-taskjuggler-tokenize-dependencies479,18176
(defun org-taskjuggler-resolve-explicit-dependencies (dependencies tasks)org-taskjuggler-resolve-explicit-dependencies492,18846
(defun org-taskjuggler-find-task-with-id (id tasks)org-taskjuggler-find-task-with-id525,20449
(defun org-taskjuggler-get-unique-id (item unique-ids)org-taskjuggler-get-unique-id535,20806
(defun org-taskjuggler-clean-id (id)org-taskjuggler-clean-id552,21622
(defun org-taskjuggler-open-project (project)org-taskjuggler-open-project561,21921
(defun org-taskjuggler-filter-and-join (items)org-taskjuggler-filter-and-join576,22576
(defun org-taskjuggler-get-attributes (item attributes)org-taskjuggler-get-attributes582,22826
(defun org-taskjuggler-get-attribute (item attribute)org-taskjuggler-get-attribute594,23285
(defun org-taskjuggler-open-resource (resource)org-taskjuggler-open-resource605,23783
(defun org-taskjuggler-clean-effort (effort)org-taskjuggler-clean-effort623,24609
(defun org-taskjuggler-get-priority (priority)org-taskjuggler-get-priority633,24992
(defun org-taskjuggler-open-task (task)org-taskjuggler-open-task639,25253
(defun org-taskjuggler-close-maybe (level)org-taskjuggler-close-maybe681,27026
(defun org-taskjuggler-insert-reports ()org-taskjuggler-insert-reports688,27296

/home/malk/.emacs.d/elpa/org-20130128/ob-haskell.el,1281
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts53,1854
(defvar org-babel-default-header-args:haskell '())org-babel-default-header-args:haskell56,1953
(defvar org-babel-haskell-lhs2tex-command "lhs2tex")org-babel-haskell-lhs2tex-command58,2005
(defvar org-babel-haskell-eoe "\"org-babel-haskell-eoe\"")org-babel-haskell-eoe60,2059
(defun org-babel-execute:haskell (body params)org-babel-execute:haskell62,2119
(defun org-babel-haskell-read-string (string)org-babel-haskell-read-string92,3501
(defun org-babel-haskell-initiate-session (&optional session params)org-babel-haskell-initiate-session98,3688
(defun org-babel-load-session:haskell (session body params)org-babel-load-session:haskell106,4037
(defun org-babel-prep-session:haskell (session params)org-babel-prep-session:haskell116,4434
(defun org-babel-variable-assignments:haskell (params)org-babel-variable-assignments:haskell127,4842
(defun org-babel-haskell-table-or-string (results)org-babel-haskell-table-or-string135,5147
(defun org-babel-haskell-var-to-haskell (var)org-babel-haskell-var-to-haskell141,5406
(defvar org-src-preserve-indentation)org-src-preserve-indentation149,5733
(defun org-babel-haskell-export-to-lhs (&optional arg)org-babel-haskell-export-to-lhs152,5880

/home/malk/.emacs.d/elpa/org-20130128/org-eshell.el,116
(defun org-eshell-open (link)org-eshell-open33,1048
(defun org-eshell-store-link ()org-eshell-store-link53,1801

/home/malk/.emacs.d/elpa/org-20130128/org-html.el,8225
(defgroup org-export-html nilorg-export-html39,1322
(defcustom org-export-html-footnotes-section "<div id=\"footnotes\">org-export-html-footnotes-section44,1456
(defcustom org-export-html-footnote-format "<sup>%s</sup>"org-export-html-footnote-format57,1865
(defcustom org-export-html-footnote-separator "<sup>, </sup>"org-export-html-footnote-separator64,2066
(defcustom org-export-html-coding-system nilorg-export-html-coding-system70,2227
(defcustom org-export-html-extension "html"org-export-html-extension75,2399
(defcustom org-export-html-xml-declarationorg-export-html-xml-declaration80,2530
(defcustom org-export-html-style-include-scripts torg-export-html-style-include-scripts94,3100
(defvar org-export-html-scriptsorg-export-html-scripts101,3356
(defconst org-export-html-style-defaultorg-export-html-style-default150,5083
(defcustom org-export-html-style-include-default torg-export-html-style-include-default206,7080
(defcustom org-export-html-style ""org-export-html-style217,7505
(defcustom org-export-html-style-extra ""org-export-html-style-extra249,8616
(defcustom org-export-html-mathjax-optionsorg-export-html-mathjax-options260,9084
(defun org-export-html-mathjax-config (template options in-buffer)org-export-html-mathjax-config294,10601
(defcustom org-export-html-mathjax-templateorg-export-html-mathjax-template322,11762
(defcustom org-export-html-tag-class-prefix ""org-export-html-tag-class-prefix419,15254
(defcustom org-export-html-todo-kwd-class-prefix ""org-export-html-todo-kwd-class-prefix428,15645
(defcustom org-export-html-headline-anchor-format "<a name=\"%s\" id=\"%s\"></a>"org-export-html-headline-anchor-format437,16054
(defcustom org-export-html-preamble torg-export-html-preamble446,16399
(defcustom org-export-html-preamble-format '(("en" ""))org-export-html-preamble-format464,17148
(defcustom org-export-html-postamble 'autoorg-export-html-postamble484,17749
(defcustom org-export-html-postamble-formatorg-export-html-postamble-format505,18662
(defcustom org-export-html-home/up-formatorg-export-html-home/up-format531,19511
(defcustom org-export-html-toplevel-hlevel 2org-export-html-toplevel-hlevel545,20044
(defcustom org-export-html-link-org-files-as-html torg-export-html-link-org-files-as-html556,20578
(defcustom org-export-html-inline-images 'maybeorg-export-html-inline-images568,21121
(defcustom org-export-html-inline-image-extensionsorg-export-html-inline-image-extensions579,21617
(defcustom org-export-html-table-tagorg-export-html-table-tag585,21837
(defcustom org-export-table-header-tags '("<th scope=\"%s\"%s>" . "</th>")org-export-table-header-tags593,22146
(defcustom org-export-table-data-tags '("<td%s>" . "</td>")org-export-table-data-tags603,22728
(defcustom org-export-table-row-tags '("<tr>" . "</tr>")org-export-table-row-tags612,23213
(defcustom org-export-html-table-align-individual-fields torg-export-html-table-align-individual-fields639,24245
(defcustom org-export-html-table-use-header-tags-for-first-column nilorg-export-html-table-use-header-tags-for-first-column648,24599
(defcustom org-export-html-validation-linkorg-export-html-validation-link654,24826
(defvar org-export-html-with-timestamp nilorg-export-html-with-timestamp662,25132
(defvar org-export-html-html-helper-timestamporg-export-html-html-helper-timestamp666,25273
(defcustom org-export-html-protect-char-alistorg-export-html-protect-char-alist670,25455
(defgroup org-export-htmlize nilorg-export-htmlize680,25761
(defcustom org-export-htmlize-output-type 'inline-cssorg-export-htmlize-output-type685,25903
(defcustom org-export-htmlize-css-font-prefix "org-"org-export-htmlize-css-font-prefix704,26991
(defcustom org-export-htmlized-org-css-url nilorg-export-htmlized-org-css-url709,27159
(defvar org-export-html-content-div "content"org-export-html-content-div726,28065
(defcustom org-export-html-divs '("preamble" "content" "postamble")org-export-html-divs732,28274
(defcustom org-export-html-date-format-string "%Y-%m-%dT%R%z"org-export-html-date-format-string744,28722
(defvar org-export-html-after-blockquotes-hook nilorg-export-html-after-blockquotes-hook754,28970
(defvar org-export-html-final-hook nilorg-export-html-final-hook757,29098
(defun org-export-html-preprocess (parameters)org-export-html-preprocess762,29215
(defun org-export-as-html-and-open (arg)org-export-as-html-and-open790,30405
(defun org-export-as-html-batch ()org-export-as-html-batch802,30902
(defun org-export-as-html-to-buffer (arg)org-export-as-html-to-buffer812,31265
(defun org-replace-region-by-html (beg end)org-replace-region-by-html821,31644
(defun org-export-region-as-html (beg end &optional body-only buffer)org-export-region-as-html845,32436
(defvar html-table-tag nil) ; dynamically scoped into this.html-table-tag874,33756
(defvar org-par-open nil)org-par-open875,33816
(defconst org-html-cvt-link-fnorg-html-cvt-link-fn878,33868
(defun org-html-cvt-org-as-html (opt-plist type path)org-html-cvt-org-as-html886,34155
(defun org-html-should-inline-p (filename descp)org-html-should-inline-p906,34664
(defun org-html-make-link (opt-plist type path fragment desc attrorg-html-make-link921,35305
(defun org-html-handle-links (org-line opt-plist)org-html-handle-links999,37490
(defvar org-heading-keyword-regexp-format) ; defined in org.elorg-heading-keyword-regexp-format1169,42498
(defun org-export-as-html (arg &optional ext-plist to-buffer body-only pub-dir)org-export-as-html1172,42577
(defun org-export-html-format-href (s)org-export-html-format-href2012,72796
(defun org-export-html-format-desc (s)org-export-html-format-desc2021,73074
(defun org-export-html-format-image (src par-open)org-export-html-format-image2028,73286
(defun org-export-html-get-bibliography ()org-export-html-get-bibliography2055,74331
(defvar org-table-number-regexp) ; defined in org-table.elorg-table-number-regexp2072,74938
(defun org-format-table-html (lines olines &optional no-css)org-format-table-html2073,74997
(defvar org-table-number-fraction) ; defined in org-table.elorg-table-number-fraction2089,75720
(defun org-format-org-table-html (lines &optional splice no-css)org-format-org-table-html2090,75781
(defun org-export-splice-attributes (tag attributes)org-export-splice-attributes2235,81305
(defun org-format-table-table-html (lines)org-format-table-table-html2251,81866
(defun org-format-table-table-html-using-table-generate-source (linesorg-format-table-table-html-using-table-generate-source2299,83376
(defun org-export-splice-style (style extra)org-export-splice-style2330,84589
(defun org-html-handle-time-stamps (s)org-html-handle-time-stamps2340,84921
(defvar htmlize-buffer-places)  ; from htmlize.elhtmlize-buffer-places2366,85792
(defun org-export-htmlize-region-for-paste (beg end)org-export-htmlize-region-for-paste2367,85842
(defun org-export-htmlize-generate-css ()org-export-htmlize-generate-css2380,86426
(defun org-html-protect (s)org-html-protect2414,87828
(defun org-html-expand (string)org-html-expand2425,88198
(defun org-html-do-expand (s)org-html-do-expand2442,88822
(defun org-export-html-convert-special-strings (string)org-export-html-convert-special-strings2466,89789
(defun org-export-html-convert-sub-super (string)org-export-html-convert-sub-super2478,90251
(defun org-export-html-convert-emphasize (string)org-export-html-convert-emphasize2500,91122
(defun org-open-par ()org-open-par2521,91780
(defun org-close-par-maybe ()org-close-par-maybe2526,91930
(defun org-close-li (&optional type)org-close-li2531,92073
(defvar body-only) ; dynamically scoped into this.body-only2536,92218
(defun org-html-level-start (level title umax with-toc head-count &optional opt-plist)org-html-level-start2537,92269
(defun org-export-html-get-tag-class-name (tag)org-export-html-get-tag-class-name2630,95776
(defun org-export-html-get-todo-kwd-class-name (kwd)org-export-html-get-todo-kwd-class-name2638,96091
(defun org-html-level-close (level max-outline-level)org-html-level-close2646,96425
(defun org-html-export-list-line (org-line pos struct prevs)org-html-export-list-line2653,96625

/home/malk/.emacs.d/elpa/org-20130128/ob-picolisp.el,557
(defvar org-babel-tangle-lang-exts) ;; Autoloadedorg-babel-tangle-lang-exts63,2499
(defvar org-babel-picolisp-eoe "org-babel-picolisp-eoe"org-babel-picolisp-eoe74,2928
(defcustom org-babel-picolisp-cmd "pil"org-babel-picolisp-cmd77,3040
(defun org-babel-expand-body:picolisp (body params &optional processed-params)org-babel-expand-body:picolisp83,3190
(defun org-babel-execute:picolisp (body params)org-babel-execute:picolisp99,3832
(defun org-babel-picolisp-initiate-session (&optional session-name)org-babel-picolisp-initiate-session176,7150

/home/malk/.emacs.d/elpa/org-20130128/org-install.el,0

/home/malk/.emacs.d/elpa/org-20130128/ob-sass.el,254
(defvar org-babel-default-header-args:sass '())org-babel-default-header-args:sass44,1480
(defun org-babel-execute:sass (body params)org-babel-execute:sass46,1529
(defun org-babel-prep-session:sass (session params)org-babel-prep-session:sass64,2378

/home/malk/.emacs.d/elpa/org-20130128/ob-octave.el,2306
(defvar org-babel-default-header-args:matlab '())org-babel-default-header-args:matlab41,1249
(defvar org-babel-default-header-args:octave '())org-babel-default-header-args:octave42,1299
(defvar org-babel-matlab-shell-command "matlab -nosplash"org-babel-matlab-shell-command44,1350
(defvar org-babel-octave-shell-command "octave -q"org-babel-octave-shell-command46,1465
(defvar org-babel-matlab-with-emacs-link nilorg-babel-matlab-with-emacs-link49,1574
(defvar org-babel-matlab-emacs-link-wrapper-methodorg-babel-matlab-emacs-link-wrapper-method54,1774
(defvar org-babel-octave-wrapper-methodorg-babel-octave-wrapper-method61,1958
(defvar org-babel-octave-eoe-indicator "\'org_babel_eoe\'")org-babel-octave-eoe-indicator67,2126
(defvar org-babel-octave-eoe-output "ans = org_babel_eoe")org-babel-octave-eoe-output69,2187
(defun org-babel-execute:matlab (body params)org-babel-execute:matlab71,2247
(defun org-babel-execute:octave (body params &optional matlabp)org-babel-execute:octave75,2391
(defun org-babel-prep-session:matlab (session params)org-babel-prep-session:matlab108,3657
(defun org-babel-variable-assignments:octave (params)org-babel-variable-assignments:octave112,3811
(defalias 'org-babel-variable-assignments:matlaborg-babel-variable-assignments:matlab121,4110
(defun org-babel-octave-var-to-octave (var)org-babel-octave-var-to-octave124,4202
(defun org-babel-prep-session:octave (session params &optional matlabp)org-babel-prep-session:octave137,4631
(defun org-babel-matlab-initiate-session (&optional session params)org-babel-matlab-initiate-session147,5138
(defun org-babel-octave-initiate-session (&optional session params matlabp)org-babel-octave-initiate-session153,5421
(defun org-babel-octave-evaluateorg-babel-octave-evaluate169,6150
(defun org-babel-octave-evaluate-external-process (body result-type matlabp)org-babel-octave-evaluate-external-process179,6617
(defun org-babel-octave-evaluate-sessionorg-babel-octave-evaluate-session194,7216
(defun org-babel-octave-import-elisp-from-file (file-name)org-babel-octave-import-elisp-from-file254,9377
(defun org-babel-octave-read-string (string)org-babel-octave-read-string267,9906
(defun org-babel-octave-graphical-output-file (params)org-babel-octave-graphical-output-file273,10089

/home/malk/.emacs.d/elpa/org-20130128/org-attach.el,2271
(defgroup org-attach nilorg-attach45,1605
(defcustom org-attach-directory "data/"org-attach-directory50,1720
(defcustom org-attach-auto-tag "ATTACH"org-attach-auto-tag57,1953
(defcustom org-attach-file-list-property "Attachments"org-attach-file-list-property64,2162
(defcustom org-attach-method 'cporg-attach-method74,2570
(defcustom org-attach-expert nilorg-attach-expert91,3151
(defcustom org-attach-allow-inheritance torg-attach-allow-inheritance96,3300
(defvar org-attach-inherited nilorg-attach-inherited101,3443
(defcustom org-attach-store-link-p nilorg-attach-store-link-p104,3554
(defun org-attach ()org-attach114,3869
(defun org-attach-dir (&optional create-if-not-exists-p)org-attach-dir182,6962
(defun org-attach-check-absolute-path (dir)org-attach-check-absolute-path223,8666
(defun org-attach-set-directory ()org-attach-set-directory234,9267
(defun org-attach-set-inherit ()org-attach-set-inherit243,9608
(defun org-attach-commit ()org-attach-commit252,10018
(defun org-attach-tag (&optional off)org-attach-tag268,10639
(defun org-attach-untag ()org-attach-untag275,10868
(defun org-attach-store-link (file)org-attach-store-link279,10947
(defun org-attach-attach (file &optional visit-dir method)org-attach-attach287,11231
(defun org-attach-attach-cp ()org-attach-attach-cp315,12465
(defun org-attach-attach-mv ()org-attach-attach-mv319,12620
(defun org-attach-attach-ln ()org-attach-attach-ln323,12785
(defun org-attach-attach-lns ()org-attach-attach-lns329,13091
(defun org-attach-new (file)org-attach-new337,13409
(defun org-attach-delete-one (&optional file)org-attach-delete-one349,13903
(defun org-attach-delete-all (&optional force)org-attach-delete-all366,14421
(defun org-attach-sync ()org-attach-sync383,15115
(defun org-attach-file-list (dir)org-attach-file-list400,15777
(defun org-attach-reveal (&optional if-exists)org-attach-reveal407,16047
(defun org-attach-reveal-in-emacs ()org-attach-reveal-in-emacs413,16284
(defun org-attach-open (&optional in-emacs)org-attach-open420,16527
(defun org-attach-open-in-emacs ()org-attach-open-in-emacs435,17175
(defun org-attach-expand (file)org-attach-expand441,17326
(defun org-attach-expand-link (file)org-attach-expand-link446,17532

/home/malk/.emacs.d/elpa/org-20130128/ob-fortran.el,891
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts37,1155
(defvar org-babel-default-header-args:fortran '())org-babel-default-header-args:fortran40,1255
(defvar org-babel-fortran-compiler "gfortran"org-babel-fortran-compiler42,1307
(defun org-babel-execute:fortran (body params)org-babel-execute:fortran46,1440
(defun org-babel-expand-body:fortran (body params)org-babel-expand-body:fortran78,2816
(defun org-babel-fortran-ensure-main-wrap (body params)org-babel-fortran-ensure-main-wrap107,3883
(defun org-babel-prep-session:fortran (session params)org-babel-prep-session:fortran115,4281
(defun org-babel-load-session:fortran (session body params)org-babel-load-session:fortran120,4503
(defun org-babel-fortran-var-to-fortran (pair)org-babel-fortran-var-to-fortran127,4751
(defun org-babel-fortran-transform-list (val)org-babel-fortran-transform-list154,5704

/home/malk/.emacs.d/elpa/org-20130128/org-mks.el,71
(defun org-mks (table title &optional prompt specials)org-mks35,1085

/home/malk/.emacs.d/elpa/org-20130128/org-publish.el,5746
(defvar org-publish-initial-buffer nilorg-publish-initial-buffer52,1746
(defvar org-publish-temp-files nilorg-publish-temp-files55,1838
(defvar org-publish-cache nilorg-publish-cache59,1993
(defgroup org-publish nilorg-publish63,2137
(defcustom org-publish-project-alist nilorg-publish-project-alist68,2267
(defcustom org-publish-use-timestamps-flag torg-publish-use-timestamps-flag210,9155
(defcustom org-publish-timestamp-directory (convert-standard-filenameorg-publish-timestamp-directory216,9378
(defcustom org-publish-list-skipped-files torg-publish-list-skipped-files222,9585
(defcustom org-publish-before-export-hook nilorg-publish-before-export-hook227,9730
(defcustom org-publish-after-export-hook nilorg-publish-after-export-hook234,10002
(defcustom org-publish-sitemap-sort-files 'alphabeticallyorg-publish-sitemap-sort-files240,10180
(defcustom org-publish-sitemap-sort-folders 'firstorg-publish-sitemap-sort-folders254,10790
(defcustom org-publish-sitemap-sort-ignore-case nilorg-publish-sitemap-sort-ignore-case267,11276
(defcustom org-publish-sitemap-date-format "%Y-%m-%d"org-publish-sitemap-date-format276,11547
(defcustom org-publish-sitemap-file-entry-format "%t"org-publish-sitemap-file-entry-format283,11741
(defun org-publish-sanitize-plist (plist)org-publish-sanitize-plist298,12170
(defun org-publish-timestamp-filename (filename &optional pub-dir pub-func)org-publish-timestamp-filename312,12615
(defun org-publish-needed-p (filename &optional pub-dir pub-func true-pub-dir base-dir)org-publish-needed-p318,12914
(defun org-publish-update-timestamp (filename &optional pub-dir pub-func base-dir)org-publish-update-timestamp337,13809
(defun org-publish-remove-all-timestamps ()org-publish-remove-all-timestamps344,14147
(defun org-publish-expand-projects (projects-alist)org-publish-expand-projects382,15537
(defvar org-sitemap-sort-files)org-sitemap-sort-files395,16012
(defvar org-sitemap-sort-folders)org-sitemap-sort-folders396,16044
(defvar org-sitemap-ignore-case)org-sitemap-ignore-case397,16078
(defvar org-sitemap-requested)org-sitemap-requested398,16111
(defvar org-sitemap-date-format)org-sitemap-date-format399,16142
(defvar org-sitemap-file-entry-format)org-sitemap-file-entry-format400,16175
(defun org-publish-compare-directory-files (a b)org-publish-compare-directory-files401,16214
(defun org-publish-get-base-files-1 (base-dir &optional recurse match skip-file skip-dir)org-publish-get-base-files-1441,17899
(defun org-publish-get-base-files (project &optional exclude-regexp)org-publish-get-base-files466,19067
(defun org-publish-get-project-from-filename (filename &optional up)org-publish-get-project-from-filename521,21295
(defun org-publish-org-to (format plist filename pub-dir)org-publish-org-to558,22621
(defmacro org-publish-with-aux-preprocess-maybe (&rest body)org-publish-with-aux-preprocess-maybe600,24129
(def-edebug-spec org-publish-with-aux-preprocess-maybe (body))org-publish-with-aux-preprocess-maybe608,24527
(defvar project-plist)project-plist610,24591
(defun org-publish-org-to-latex (plist filename pub-dir)org-publish-org-to-latex611,24614
(defun org-publish-org-to-pdf (plist filename pub-dir)org-publish-org-to-pdf617,24855
(defun org-publish-org-to-html (plist filename pub-dir)org-publish-org-to-html623,25102
(defun org-publish-org-to-org (plist filename pub-dir)org-publish-org-to-org629,25340
(defun org-publish-org-to-ascii (plist filename pub-dir)org-publish-org-to-ascii634,25533
(defun org-publish-org-to-latin1 (plist filename pub-dir)org-publish-org-to-latin1640,25774
(defun org-publish-org-to-utf8 (plist filename pub-dir)org-publish-org-to-utf8646,26019
(defun org-publish-attachment (plist filename pub-dir)org-publish-attachment652,26258
(defun org-publish-file (filename &optional project no-cache)org-publish-file667,26872
(defun org-publish-projects (projects)org-publish-projects718,28830
(defun org-publish-org-sitemap (project &optional sitemap-filename)org-publish-org-sitemap756,30611
(defun org-publish-format-file-entry (fmt file project-plist)org-publish-format-file-entry833,33824
(defun org-publish-find-title (file &optional reset)org-publish-find-title840,34118
(defun org-publish-find-date (file)org-publish-find-date861,34903
(defalias 'org-publish-project 'org-publish)org-publish-project883,35642
(defun org-publish (project &optional force)org-publish886,35703
(defun org-publish-all (&optional force)org-publish-all907,36357
(defun org-publish-current-file (&optional force)org-publish-current-file920,36792
(defun org-publish-current-project (&optional force)org-publish-current-project930,37122
(defun org-publish-aux-preprocess ()org-publish-aux-preprocess947,37713
(defun org-publish-index-generate-theindex (directory)org-publish-index-generate-theindex974,38718
(defun org-publish-write-cache-file (&optional free-cache)org-publish-write-cache-file1043,41268
(defun org-publish-initialize-cache (project-name)org-publish-initialize-cache1065,42077
(defun org-publish-reset-cache ()org-publish-reset-cache1097,43244
(defun org-publish-cache-file-needs-publishing (filename &optional pub-dir pub-func base-dir)org-publish-cache-file-needs-publishing1104,43478
(defun org-publish-cache-set-file-property (filename property value &optional project-name)org-publish-cache-set-file-property1135,44883
(defun org-publish-cache-get-file-propertyorg-publish-cache-get-file-property1149,45463
(defun org-publish-cache-get (key)org-publish-cache-get1169,46238
(defun org-publish-cache-set (key value)org-publish-cache-set1177,46538
(defun org-publish-cache-ctime-of-src (file)org-publish-cache-ctime-of-src1184,46800

/home/malk/.emacs.d/elpa/org-20130128/org-rmail.el,341
(defvar rmail-current-message)  ; From rmail.elrmail-current-message40,1550
(defvar rmail-header-style)     ; From rmail.elrmail-header-style41,1598
(defun org-rmail-store-link ()org-rmail-store-link48,1794
(defun org-rmail-open (path)org-rmail-open86,3253
(defun org-rmail-follow-link (folder article)org-rmail-follow-link95,3580

/home/malk/.emacs.d/elpa/org-20130128/ob-java.el,287
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts33,1087
(defvar org-babel-java-command "java"org-babel-java-command36,1185
(defvar org-babel-java-compiler "javac"org-babel-java-compiler39,1255
(defun org-babel-execute:java (body params)org-babel-execute:java42,1328

/home/malk/.emacs.d/elpa/org-20130128/ob-perl.el,1010
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts34,1070
(defvar org-babel-default-header-args:perl '())org-babel-default-header-args:perl37,1166
(defvar org-babel-perl-command "perl"org-babel-perl-command39,1215
(defun org-babel-execute:perl (body params)org-babel-execute:perl42,1307
(defun org-babel-prep-session:perl (session params)org-babel-prep-session:perl58,2090
(defun org-babel-variable-assignments:perl (params)org-babel-variable-assignments:perl62,2257
(defun org-babel-perl-var-to-perl (var)org-babel-perl-var-to-perl73,2570
(defvar org-babel-perl-buffers '(:default . nil))org-babel-perl-buffers81,2876
(defun org-babel-perl-initiate-session (&optional session params)org-babel-perl-initiate-session83,2927
(defvar org-babel-perl-wrapper-methodorg-babel-perl-wrapper-method87,3060
(defvar org-babel-perl-pp-wrapper-methodorg-babel-perl-pp-wrapper-method96,3185
(defun org-babel-perl-evaluate (session body &optional result-type)org-babel-perl-evaluate99,3234

/home/malk/.emacs.d/elpa/org-20130128/org-mac-message.el,716
(defgroup org-mac-flagged-mail nilorg-mac-flagged-mail49,1868
(defcustom org-mac-mail-account "customize"org-mac-mail-account54,2007
(defun org-mac-message-open (message-id)org-mac-message-open76,2834
(defun as-get-selected-mail ()as-get-selected-mail82,3101
(defun as-get-flagged-mail ()as-get-flagged-mail98,3672
(defun org-mac-message-get-links (&optional select-or-flag)org-mac-message-get-links147,5795
(defun org-mac-message-insert-selected ()org-mac-message-insert-selected179,7222
(defalias 'org-mac-message-insert-link 'org-mac-message-insert-selected)org-mac-message-insert-link187,7565
(defun org-mac-message-insert-flagged (org-buffer org-heading)org-mac-message-insert-flagged189,7639

/home/malk/.emacs.d/elpa/org-20130128/ob-sqlite.el,784
(defvar org-babel-default-header-args:sqlite '())org-babel-default-header-args:sqlite39,1331
(defvar org-babel-header-args:sqliteorg-babel-header-args:sqlite41,1382
(defun org-babel-expand-body:sqlite (body params)org-babel-expand-body:sqlite55,1708
(defvar org-babel-sqlite3-command "sqlite3")org-babel-sqlite3-command60,1902
(defun org-babel-execute:sqlite (body params)org-babel-execute:sqlite62,1948
(defun org-babel-sqlite-expand-vars (body vars)org-babel-sqlite-expand-vars119,4008
(defun org-babel-sqlite-table-or-scalar (result)org-babel-sqlite-table-or-scalar142,4589
(defun org-babel-sqlite-offset-colnames (table headers-p)org-babel-sqlite-offset-colnames152,4919
(defun org-babel-prep-session:sqlite (session params)org-babel-prep-session:sqlite158,5128

/home/malk/.emacs.d/elpa/org-20130128/ob-latex.el,1256
(defvar org-babel-tangle-lang-exts)org-babel-tangle-lang-exts39,1443
(defvar org-format-latex-header)org-format-latex-header42,1541
(defvar org-format-latex-header-extra)org-format-latex-header-extra43,1574
(defvar org-export-latex-packages-alist)org-export-latex-packages-alist44,1613
(defvar org-export-latex-default-packages-alist)org-export-latex-default-packages-alist45,1654
(defvar org-export-pdf-logfiles)org-export-pdf-logfiles46,1703
(defvar org-latex-to-pdf-process)org-latex-to-pdf-process47,1736
(defvar org-export-pdf-remove-logfiles)org-export-pdf-remove-logfiles48,1770
(defvar org-format-latex-options)org-format-latex-options49,1810
(defvar org-export-latex-packages-alist)org-export-latex-packages-alist50,1844
(defvar org-babel-default-header-args:latexorg-babel-default-header-args:latex52,1886
(defun org-babel-expand-body:latex (body params)org-babel-expand-body:latex56,2048
(defun org-babel-execute:latex (body params)org-babel-execute:latex67,2526
(defun convert-pdf (pdffile out-file im-in-options im-out-options)convert-pdf141,5599
(defun org-babel-latex-tex-to-pdf (file)org-babel-latex-tex-to-pdf148,5909
(defun org-babel-prep-session:latex (session params)org-babel-prep-session:latex192,7542

/home/malk/.emacs.d/elpa/org-20130128/org-timer.el,2277
(defvar org-timer-start-time nilorg-timer-start-time36,1244
(defvar org-timer-pause-time nilorg-timer-pause-time39,1310
(defconst org-timer-re "\\([-+]?[0-9]+\\):\\([0-9]\\{2\\}\\):\\([0-9]\\{2\\}\\)"org-timer-re42,1381
(defcustom org-timer-format "%s "org-timer-format45,1515
(defcustom org-timer-default-timer 0org-timer-default-timer52,1741
(defcustom org-timer-display 'mode-lineorg-timer-display59,1918
(defvar org-timer-start-hook nilorg-timer-start-hook75,2435
(defvar org-timer-stop-hook nilorg-timer-stop-hook78,2516
(defvar org-timer-pause-hook nilorg-timer-pause-hook81,2597
(defvar org-timer-continue-hook nilorg-timer-continue-hook84,2678
(defvar org-timer-set-hook nilorg-timer-set-hook87,2764
(defvar org-timer-done-hook nilorg-timer-done-hook90,2840
(defvar org-timer-cancel-hook nilorg-timer-cancel-hook93,2923
(defun org-timer-start (&optional offset)org-timer-start97,3023
(defun org-timer-pause-or-continue (&optional stop)org-timer-pause-or-continue133,4516
(defun org-timer-stop ()org-timer-stop159,5379
(defun org-timer (&optional restart no-insert-p)org-timer169,5622
(defun org-timer-value-string ()org-timer-value-string186,6356
(defvar org-timer-timer-is-countdown nil)org-timer-timer-is-countdown189,6471
(defun org-timer-seconds ()org-timer-seconds190,6513
(defun org-timer-change-times-in-region (beg end delta)org-timer-change-times-in-region198,6787
(defun org-timer-item (&optional arg)org-timer-item224,7695
(defun org-timer-fix-incomplete (hms)org-timer-fix-incomplete249,8659
(defun org-timer-hms-to-secs (hms)org-timer-hms-to-secs260,9156
(defun org-timer-secs-to-hms (s)org-timer-secs-to-hms274,9707
(defvar org-timer-mode-line-timer nil)org-timer-mode-line-timer284,10011
(defvar org-timer-mode-line-string nil)org-timer-mode-line-string285,10050
(defun org-timer-set-mode-line (value)org-timer-set-mode-line287,10091
(defun org-timer-update-mode-line ()org-timer-update-mode-line339,12306
(defvar org-timer-current-timer nil)org-timer-current-timer347,12557
(defun org-timer-cancel-timer ()org-timer-cancel-timer348,12594
(defun org-timer-show-remaining-time ()org-timer-show-remaining-time359,12949
(defun org-timer-set-timer (&optional opt)org-timer-set-timer374,13417

/home/malk/.emacs.d/elpa/rainbow-delimiters-20120428.45/rainbow-delimiters-autoloads.el,84
(defvar global-rainbow-delimiters-mode nil "\global-rainbow-delimiters-mode26,693

/home/malk/.emacs.d/elpa/rainbow-delimiters-20120428.45/rainbow-delimiters.el,2927
(defgroup rainbow-delimiters nilrainbow-delimiters159,6586
(defgroup rainbow-delimiters-faces nilrainbow-delimiters-faces166,6897
(defgroup rainbow-delimiters-toggle-delimiter-highlighting nilrainbow-delimiters-toggle-delimiter-highlighting178,7385
(defcustom rainbow-delimiters-highlight-parens-p trainbow-delimiters-highlight-parens-p185,7674
(defcustom rainbow-delimiters-highlight-brackets-p trainbow-delimiters-highlight-brackets-p194,7983
(defcustom rainbow-delimiters-highlight-braces-p trainbow-delimiters-highlight-braces-p203,8281
(defface rainbow-delimiters-unmatched-facerainbow-delimiters-unmatched-face216,8611
(defface rainbow-delimiters-depth-1-facerainbow-delimiters-depth-1-face223,8902
(defface rainbow-delimiters-depth-2-facerainbow-delimiters-depth-2-face230,9188
(defface rainbow-delimiters-depth-3-facerainbow-delimiters-depth-3-face236,9405
(defface rainbow-delimiters-depth-4-facerainbow-delimiters-depth-4-face242,9622
(defface rainbow-delimiters-depth-5-facerainbow-delimiters-depth-5-face248,9839
(defface rainbow-delimiters-depth-6-facerainbow-delimiters-depth-6-face254,10056
(defface rainbow-delimiters-depth-7-facerainbow-delimiters-depth-7-face260,10273
(defface rainbow-delimiters-depth-8-facerainbow-delimiters-depth-8-face266,10490
(defface rainbow-delimiters-depth-9-facerainbow-delimiters-depth-9-face272,10707
(defconst rainbow-delimiters-max-face-count 9rainbow-delimiters-max-face-count281,11023
(defsubst rainbow-delimiters-depth-face (depth)rainbow-delimiters-depth-face288,11219
(defvar rainbow-delimiters-syntax-table nilrainbow-delimiters-syntax-table312,12275
(defun rainbow-delimiters-make-syntax-table (syntax-table)rainbow-delimiters-make-syntax-table321,12725
(defsubst rainbow-delimiters-depth (loc)rainbow-delimiters-depth332,13177
(defsubst rainbow-delimiters-propertize-delimiter (loc depth)rainbow-delimiters-propertize-delimiter378,15038
(defsubst rainbow-delimiters-unpropertize-delimiter (loc)rainbow-delimiters-unpropertize-delimiter397,15884
(defsubst rainbow-delimiters-char-ineligible-p (loc)rainbow-delimiters-char-ineligible-p405,16192
(defsubst rainbow-delimiters-apply-color (delim depth loc)rainbow-delimiters-apply-color423,16988
(defconst rainbow-delimiters-delim-regex "\\(\(\\|\)\\|\\[\\|\\]\\|\{\\|\}\\)"rainbow-delimiters-delim-regex440,17684
(defsubst rainbow-delimiters-propertize-region (start end)rainbow-delimiters-propertize-region444,17877
(defun rainbow-delimiters-unpropertize-region (start end)rainbow-delimiters-unpropertize-region481,19832
(define-minor-mode rainbow-delimiters-moderainbow-delimiters-mode494,20273
(defun rainbow-delimiters-mode-enable ()rainbow-delimiters-mode-enable507,20951
(defun rainbow-delimiters-mode-disable ()rainbow-delimiters-mode-disable511,21039
(define-globalized-minor-mode global-rainbow-delimiters-modeglobal-rainbow-delimiters-mode515,21128

/home/malk/.emacs.d/elpa/rainbow-delimiters-20120428.45/rainbow-delimiters-pkg.el,183
(define-package "rainbow-delimiters" "20120428.45" "Highlight nested parens, brackets, braces a different color at each depth. [source: github]" (quote nil))"rainbow-delimiters"1,0

/home/malk/.emacs.d/elpa/powerline-20121214.9/powerline-autoloads.el,2289
(defpowerline powerline-major-mode (propertize (format-mode-line mode-name) 'help-echo "Major mode\nmouse-1: Display major mode menu\nmouse-2: Show help for major mode\nmouse-3: Toggle minor modes" 'local-map (let ((map (make-sparse-keymap))) (define-key map [mode-line down-mouse-1] `(menu-item ,(purecopy "Menu Bar") ignore :filter (lambda (_) (mouse-menu-major-mode-map)))) (define-key map [mode-line mouse-2] 'describe-mode) (define-key map [mode-line down-mouse-3] mode-line-mode-menu) map)))powerline-major-mode42,898
(defpowerline powerline-minor-modes (mapconcat (lambda (mm) (propertize mm 'help-echo "Minor mode\n mouse-1: Display minor mode menu\n mouse-2: Show help for minor mode\n mouse-3: Toggle minor modes" 'local-map (let ((map (make-sparse-keymap))) (define-key map [mode-line down-mouse-1] (powerline-mouse 'minor 'menu mm)) (define-key map [mode-line mouse-2] (powerline-mouse 'minor 'help mm)) (define-key map [mode-line down-mouse-3] (powerline-mouse 'minor 'menu mm)) (define-key map [header-line down-mouse-3] (powerline-mouse 'minor 'menu mm)) map))) (split-string (format-mode-line minor-mode-alist)) " "))powerline-minor-modes44,1397
(defpowerline powerline-narrow (let (real-point-min real-point-max) (save-excursion (save-restriction (widen) (setq real-point-min (point-min) real-point-max (point-max)))) (when (or (/= real-point-min (point-min)) (/= real-point-max (point-max))) (propertize "Narrow" 'help-echo "mouse-1: Remove narrowing from the current buffer" 'local-map (make-mode-line-mouse-map 'mouse-1 'mode-line-widen)))))powerline-narrow46,2008
(defpowerline powerline-vc (when (and (buffer-file-name (current-buffer)) vc-mode) (format-mode-line '(vc-mode vc-mode))))powerline-vc48,2409
(defpowerline powerline-buffer-size (propertize (if powerline-buffer-size-suffix "%I" "%i") 'local-map (make-mode-line-mouse-map 'mouse-1 (lambda nil (interactive) (setq powerline-buffer-size-suffix (not powerline-buffer-size-suffix)) (redraw-modeline)))))powerline-buffer-size50,2533
(defpowerline powerline-buffer-id (format-mode-line mode-line-buffer-identification))powerline-buffer-id52,2791
(defpowerline powerline-process (cond ((listp mode-line-process) (format-mode-line mode-line-process)) (t mode-line-process)))powerline-process54,2878

/home/malk/.emacs.d/elpa/powerline-20121214.9/powerline-pkg.el,110
(define-package "powerline" "20121214.9" "Rewrite of Powerline [source: github]" (quote nil))"powerline"1,0

/home/malk/.emacs.d/elpa/powerline-20121214.9/powerline.el,2676
(defface powerline-active1 '((t (:background "grey22" :inherit mode-line)))powerline-active115,296
(defface powerline-active2 '((t (:background "grey40" :inherit mode-line)))powerline-active219,416
(defface powerline-inactive1powerline-inactive123,536
(defface powerline-inactive2powerline-inactive228,669
(defcustom powerline-buffer-size-suffix tpowerline-buffer-size-suffix33,802
(defun create-or-get-powerline-cache ()create-or-get-powerline-cache38,916
(defun memoize (func)memoize49,1376
(defun memoize-wrap-frame-local (func)memoize-wrap-frame-local57,1680
(defun pl/arrow-row-right (dots width)pl/arrow-row-right72,2210
(defun pl/arrow-row-left (dots width)pl/arrow-row-left79,2424
(defun pl/size-up (unitsize width)pl/size-up87,2638
(defun pl/hex-color (color)pl/hex-color92,2774
(defmacro pl/arrow-xpm (dir)pl/arrow-xpm107,3245
(defun powerline-reset ()powerline-reset137,4486
(defun pl/make-xpm (name color1 color2 data)pl/make-xpm144,4643
(defun pl/percent-xpmpl/percent-xpm179,5850
(defun powerline-hud (face1 face2 &optional width)powerline-hud200,6557
(defun powerline-mouse (click-group click-type string)powerline-mouse219,7186
(defun powerline-concat (&rest strings)powerline-concat240,7841
(defmacro defpowerline (name body)defpowerline248,8020
(defun powerline-raw (str &optional face pad)powerline-raw259,8329
(defun powerline-fill (face reserve)powerline-fill269,8668
(defun powerline-fill-center (face reserve)powerline-fill-center278,8981
(defpowerline powerline-major-modepowerline-major-mode288,9280
(defpowerline powerline-minor-modespowerline-minor-modes300,10008
(defpowerline powerline-narrowpowerline-narrow322,11255
(defpowerline powerline-vcpowerline-vc336,11789
(defpowerline powerline-buffer-sizepowerline-buffer-size343,11948
(defpowerline powerline-buffer-idpowerline-buffer-id355,12339
(defpowerline powerline-processpowerline-process359,12443
(defvar pl/minibuffer-selected-window-list '())pl/minibuffer-selected-window-list364,12579
(defun pl/minibuffer-selected-window ()pl/minibuffer-selected-window366,12628
(defun pl/minibuffer-setup ()pl/minibuffer-setup371,12821
(defun pl/minibuffer-exit ()pl/minibuffer-exit377,13058
(defun powerline-selected-window-active ()powerline-selected-window-active383,13234
(defun powerline-center-theme ()powerline-center-theme393,13565
(defun powerline-default-theme ()powerline-default-theme452,16328
(defun powerline-nano-theme ()powerline-nano-theme510,18676
(defun pl/render (item)pl/render541,20087
(defun powerline-render (values)powerline-render546,20215
(defun powerline-width (values)powerline-width549,20285

/home/malk/.emacs.d/elpa/yasnippet-20130112.1823/yasnippet-pkg.el,126
(define-package "yasnippet" "20130112.1823" "Yet another snippet extension for Emacs. [source: github]" 'nil)"yasnippet"1,0

/home/malk/.emacs.d/elpa/yasnippet-20130112.1823/dropdown-list.el,1097
(defface dropdown-list-facedropdown-list-face63,2251
(defface dropdown-list-selection-facedropdown-list-selection-face67,2385
(defvar dropdown-list-overlays nil)dropdown-list-overlays71,2515
(defun dropdown-list-hide ()dropdown-list-hide73,2552
(defun dropdown-list-put-overlay (beg end &optional prop value prop2 value2)dropdown-list-put-overlay77,2666
(defun dropdown-list-line (start replacement &optional no-insert)dropdown-list-line85,2920
(defun dropdown-list-start-column (display-width)dropdown-list-start-column117,4405
(defun dropdown-list-move-to-start-line (candidate-count)dropdown-list-move-to-start-line125,4742
(defun dropdown-list-at-point (candidates &optional selidx)dropdown-list-at-point139,5339
(defun dropdown-list (candidates)dropdown-list166,6712
(defun define-key* (keymap key command)define-key*205,8581
(defun combine-command (command defs)combine-command210,8828
(defvar command-selector-last-command nil "$$$$$ FIXME - no doc string")command-selector-last-command224,9356
(defun command-selector (&rest candidates)command-selector226,9430

/home/malk/.emacs.d/elpa/yasnippet-20130112.1823/yasnippet-autoloads.el,54
(defvar yas-global-mode nil "\yas-global-mode26,628

/home/malk/.emacs.d/elpa/yasnippet-20130112.1823/yasnippet.el,20251
(defgroup yasnippet nilyasnippet153,5357
(defvar yas--load-file-name load-file-nameyas--load-file-name157,5435
(defcustom yas-snippet-dirs (remove nilyas-snippet-dirs160,5549
(defun yas-snippet-dirs ()yas-snippet-dirs184,6720
(defvaralias 'yas/root-directory 'yas-snippet-dirs)yas/root-directory188,6876
(defcustom yas-prompt-functions '(yas-x-promptyas-prompt-functions190,6929
(defcustom yas-indent-line 'autoyas-indent-line221,7933
(defcustom yas-also-auto-indent-first-line nilyas-also-auto-indent-first-line238,8494
(defcustom yas-snippet-revival tyas-snippet-revival245,8708
(defcustom yas-triggers-in-field nilyas-triggers-in-field250,8842
(defcustom yas-fallback-behavior 'call-other-commandyas-fallback-behavior258,9063
(defcustom yas-choose-keys-first nilyas-choose-keys-first275,9732
(defcustom yas-choose-tables-first nilyas-choose-tables-first284,9989
(defcustom yas-use-menu 'abbreviateyas-use-menu294,10291
(defcustom yas-trigger-symbol (or (and (eq window-system 'mac)yas-trigger-symbol314,10956
(defcustom yas-wrap-around-region nilyas-wrap-around-region322,11304
(defcustom yas-good-grace tyas-good-grace330,11553
(defcustom yas-visit-from-menu nilyas-visit-from-menu337,11737
(defcustom yas-expand-only-for-last-commands nilyas-expand-only-for-last-commands344,11944
(defface yas-field-highlight-faceyas-field-highlight-face360,12546
(defface yas--field-debug-faceyas--field-debug-face365,12701
(defvar yas-keymap  (let ((map (make-sparse-keymap)))yas-keymap373,12852
(defvar yas-key-syntaxes (list "w" "w_" "w_." "w_.()" "^ ")yas-key-syntaxes383,13467
(defvar yas-after-exit-snippet-hookyas-after-exit-snippet-hook398,14077
(defvar yas-before-expand-snippet-hookyas-before-expand-snippet-hook411,14433
(defvar yas-buffer-local-conditionyas-buffer-local-condition415,14530
(defvar yas--version "0.8.0 (beta)")yas--version478,16566
(defvar yas--menu-table (make-hash-table)yas--menu-table480,16604
(defvar yas--known-modesyas--known-modes483,16704
(defvar yas--escaped-charactersyas--escaped-characters487,16831
(defconst yas--field-regexpyas--field-regexp491,16958
(defconst yas--multi-dollar-lisp-expression-regexpyas--multi-dollar-lisp-expression-regexp495,17065
(defconst yas--backquote-lisp-expression-regexpyas--backquote-lisp-expression-regexp499,17206
(defconst yas--transform-mirror-regexpyas--transform-mirror-regexp503,17337
(defconst yas--simple-mirror-regexpyas--simple-mirror-regexp507,17490
(defvar yas--snippet-id-seed 0yas--snippet-id-seed511,17589
(defun yas--snippet-next-id ()yas--snippet-next-id514,17662
(defvar last-buffer-undo-list nil)last-buffer-undo-list523,17871
(defvar yas--minor-mode-menu nilyas--minor-mode-menu525,17907
(defun yas--init-minor-keymap ()yas--init-minor-keymap528,17972
(defvar yas-minor-mode-map (yas--init-minor-keymap)yas-minor-mode-map646,24031
(defvar yas--tables (make-hash-table)yas--tables649,24138
(defvar yas--parents (make-hash-table)yas--parents652,24236
(defvar yas--direct-keymaps (list)yas--direct-keymaps663,24630
(defun yas-direct-keymaps-reload ()yas-direct-keymaps-reload675,25138
(defun yas--modes-to-activate ()yas--modes-to-activate685,25520
(defvar yas-minor-mode-hook nilyas-minor-mode-hook700,26058
(define-minor-mode yas-minor-modeyas-minor-mode704,26156
(defvar yas-dont-activate '(minibufferp)yas-dont-activate746,27683
(defun yas-minor-mode-on ()yas-minor-mode-on768,28495
(define-globalized-minor-mode yas-global-mode yas-minor-mode yas-minor-mode-onyas-global-mode782,28911
(defun yas--global-mode-reload-with-jit-maybe ()yas--global-mode-reload-with-jit-maybe786,29034
(defvar yas--font-lock-keywordsyas--font-lock-keywords795,29280
(defun yas--init-major-keymap ()yas--init-major-keymap812,29906
(defvar snippet-mode-mapsnippet-mode-map828,30534
(define-derived-mode snippet-mode text-mode "Snippet"snippet-mode833,30640
(defun yas--populate-template (template &rest args)yas--populate-template860,31328
(defun yas--get-template-by-uuid (mode uuid)yas--get-template-by-uuid908,32908
(defun yas--remove-template-by-uuid (table uuid)yas--remove-template-by-uuid968,34988
(defun yas--add-template (table template)yas--add-template995,36132
(defun yas--update-template (table template)yas--update-template1020,37103
(defun yas--update-template-menu (table template)yas--update-template-menu1035,37523
(defun yas--namehash-templates-alist (namehash)yas--namehash-templates-alist1079,39473
(defun yas--fetch (table key)yas--fetch1087,39676
(defun yas--eval-condition (condition)yas--eval-condition1100,40092
(defun yas--filter-templates-by-condition (templates)yas--filter-templates-by-condition1111,40394
(defun yas--require-template-specific-condition-p ()yas--require-template-specific-condition-p1127,41057
(defun yas--template-can-expand-p (condition requirement)yas--template-can-expand-p1143,41773
(defun yas--all-parents (mode)yas--all-parents1152,42090
(defun yas--table-templates (table)yas--table-templates1158,42288
(defun yas--current-key ()yas--current-key1168,42651
(defun yas--table-all-keys (table)yas--table-all-keys1195,43445
(defun yas--table-mode (table)yas--table-mode1204,43773
(defun yas--real-mode? (mode)yas--real-mode?1210,43879
(defun yas--eval-lisp (form)yas--eval-lisp1220,44268
(defun yas--eval-lisp-no-saves (form)yas--eval-lisp-no-saves1240,45146
(defun yas--read-lisp (string &optional nil-on-error)yas--read-lisp1248,45441
(defun yas--read-keybinding (keybinding)yas--read-keybinding1258,45811
(defvar yas-extra-modes nilyas-extra-modes1272,46371
(defun yas-extra-modes ()yas-extra-modes1279,46614
(defvaralias 'yas/mode-symbol 'yas-extra-modes)yas/mode-symbol1281,46711
(defun yas--table-get-create (mode)yas--table-get-create1283,46760
(defun yas--get-snippet-tables ()yas--get-snippet-tables1295,47201
(defun yas--menu-keymap-get-create (mode &optional parents)yas--menu-keymap-get-create1305,47545
(defmacro yas--called-interactively-p (&optional kind)yas--called-interactively-p1319,48129
(defun yas--call-with-temporary-redefinitions (functionyas--call-with-temporary-redefinitions1329,48445
(defmacro yas--with-temporary-redefinitions (fdefinitions &rest body)yas--with-temporary-redefinitions1349,49502
(defun yas--parse-template (&optional file)yas--parse-template1368,50297
(defun yas--calculate-group (file)yas--calculate-group1446,53405
(defun yas--subdirs (directory &optional filep)yas--subdirs1463,54275
(defun yas--make-menu-binding (template)yas--make-menu-binding1477,54900
(defun yas--expand-or-visit-from-menu (mode uuid)yas--expand-or-visit-from-menu1481,55111
(defvar yas--x-pretty-prompt-templates nilyas--x-pretty-prompt-templates1499,55897
(defun yas--prompt-for-template (templates &optional prompt)yas--prompt-for-template1503,56006
(defun yas--prompt-for-keys (keys &optional prompt)yas--prompt-for-keys1522,56746
(defun yas--prompt-for-table (tables &optional prompt)yas--prompt-for-table1531,57042
(defun yas-x-prompt (prompt choices &optional display-fn)yas-x-prompt1542,57406
(defun yas--x-pretty-prompt-templates (prompt templates)yas--x-pretty-prompt-templates1572,58727
(defun yas-ido-prompt (prompt choices &optional display-fn)yas-ido-prompt1603,60086
(defun yas-dropdown-prompt (prompt choices &optional display-fn)yas-dropdown-prompt1610,60372
(defun yas-completing-prompt (prompt choices &optional display-fn completion-fn)yas-completing-prompt1628,60934
(defun yas-no-prompt (prompt choices &optional display-fn)yas-no-prompt1653,61885
(defun yas--define-snippets-1 (snippet snippet-table)yas--define-snippets-11662,62087
(defun yas-define-snippets (mode snippets)yas-define-snippets1702,63665
(defun yas--load-yas-setup-file (file)yas--load-yas-setup-file1739,64786
(defun yas--define-parents (mode parents)yas--define-parents1742,64850
(defun yas-load-directory (top-level-dir &optional use-jit)yas-load-directory1749,65089
(defun yas--load-directory-1 (directory mode-sym parents &optional no-compiled-snippets)yas--load-directory-11791,67069
(defun yas--load-directory-2 (directory mode-sym)yas--load-directory-21800,67623
(defun yas--load-snippet-dirs (&optional nojit)yas--load-snippet-dirs1823,68430
(defun yas-reload-all (&optional interactive)yas-reload-all1839,69143
(defun yas--load-pending-jits ()yas--load-pending-jits1896,71498
(defun yas--quote-string (string)yas--quote-string1908,71991
(defun yas--initialize ()yas--initialize1920,72330
(defun yas-compile-directory (top-level-dir)yas-compile-directory1924,72446
(defun yas-recompile-all ()yas-recompile-all1975,74596
(defvar yas--scheduled-jit-loads (make-hash-table)yas--scheduled-jit-loads1984,74761
(defun yas--schedule-jit (mode form)yas--schedule-jit1987,74894
(defun yas-about ()yas-about1997,75100
(defun yas--template-menu-binding-pair-get-create (template &optional type)yas--template-menu-binding-pair-get-create2035,76702
(defun yas--template-menu-managed-by-yas-define-menu (template)yas--template-menu-managed-by-yas-define-menu2049,77405
(defun yas--show-menu-p (mode)yas--show-menu-p2054,77602
(defun yas--delete-from-keymap (keymap uuid)yas--delete-from-keymap2065,77926
(defun yas-define-menu (mode menu &optional omit-items)yas-define-menu2090,78895
(defun yas--define-menu-1 (table menu-keymap menu uuidhash &optional group-list)yas--define-menu-12125,80432
(defun yas--define (mode key template &optional name condition group)yas--define2153,81931
(defun yas-hippie-try-expand (first-time?)yas-hippie-try-expand2163,82408
(defvar yas--condition-cache-timestamp nil)yas--condition-cache-timestamp2180,82747
(defmacro yas-define-condition-cache (func doc &rest body)yas-define-condition-cache2181,82791
(defalias 'yas-expand 'yas-expand-from-trigger-key)yas-expand2204,83823
(defun yas-expand-from-trigger-key (&optional field)yas-expand-from-trigger-key2205,83875
(defun yas-expand-from-keymap ()yas-expand-from-keymap2231,85097
(defun yas--expand-or-prompt-for-template (templates &optional start end)yas--expand-or-prompt-for-template2249,85903
(defun yas--fallback (&optional from-trigger-key-p)yas--fallback2271,86946
(defun yas--keybinding-beyond-yasnippet ()yas--keybinding-beyond-yasnippet2298,88145
(defun yas--fallback-translate-input (keys)yas--fallback-translate-input2306,88408
(defun yas--all-templates (tables)yas--all-templates2333,89415
(defun yas-insert-snippet (&optional no-condition)yas-insert-snippet2351,90154
(defun yas-visit-snippet-file ()yas-visit-snippet-file2377,91461
(defun yas--visit-snippet-file-1 (template)yas--visit-snippet-file-12395,92212
(defun yas--guess-snippet-directories-1 (table)yas--guess-snippet-directories-12425,93770
(defun yas--guess-snippet-directories (&optional table)yas--guess-snippet-directories2433,94071
(defun yas--make-directory-maybe (table-and-dirs &optional main-table-string)yas--make-directory-maybe2460,95185
(defun yas-new-snippet (&optional no-template)yas-new-snippet2480,96297
(defun yas--compute-major-mode-and-parents (file)yas--compute-major-mode-and-parents2506,97250
(defvar yas--editing-template nilyas--editing-template2536,98902
(defvar yas--current-template nilyas--current-template2539,99018
(defvar yas--guessed-modes nilyas--guessed-modes2542,99116
(defun yas--read-table ()yas--read-table2545,99213
(defun yas-load-snippet-buffer (table &optional interactive)yas-load-snippet-buffer2566,100071
(defun yas-tryout-snippet (&optional debug)yas-tryout-snippet2622,103095
(defun yas-active-keys ()yas-active-keys2659,105137
(defun yas--template-fine-group (template)yas--template-fine-group2665,105357
(defun yas-describe-tables (&optional choose)yas-describe-tables2669,105506
(defun yas--describe-pretty-table (table &optional original-buffer)yas--describe-pretty-table2722,107901
(defvar yas-modified-p nilyas-modified-p2777,110567
(defvar yas-moving-away-p nilyas-moving-away-p2780,110662
(defvar yas-text nilyas-text2783,110738
(defun yas-substr (str pattern &optional subexp)yas-substr2786,110794
(defun yas-choose-value (&rest possibilities)yas-choose-value2797,111163
(defun yas-key-to-value (alist)yas-key-to-value2811,111746
(defun yas-throw (text)yas-throw2819,111990
(defun yas-verify-value (possibilities)yas-verify-value2823,112122
(defun yas-field-value (number)yas-field-value2830,112416
(defun yas-text ()yas-text2840,112753
(defun yas-selected-text ()yas-selected-text2846,112915
(defun yas--get-field-once (number &optional transform-fn)yas--get-field-once2852,113122
(defun yas-default-from-field (number)yas-default-from-field2858,113318
(defun yas-inside-string ()yas-inside-string2862,113414
(defun yas-unimplemented (&optional missing-feature)yas-unimplemented2866,113591
(defvar yas--active-field-overlay nilyas--active-field-overlay2877,114060
(defvar yas--field-protection-overlays nilyas--field-protection-overlays2880,114141
(defconst yas--prefix nilyas--prefix2883,114237
(defvar yas-selected-text nilyas-selected-text2886,114326
(defvar yas--start-column nilyas--start-column2889,114421
(defun yas--apply-transform (field-or-mirror field &optional empty-on-nil-p)yas--apply-transform2949,116182
(defsubst yas--replace-all (from to &optional text)yas--replace-all2973,117297
(defun yas--snippet-find-field (snippet number)yas--snippet-find-field2983,117624
(defun yas--snippet-sort-fields (snippet)yas--snippet-sort-fields2988,117799
(defun yas--snippet-field-compare (field1 field2)yas--snippet-field-compare2994,118022
(defun yas--field-probably-deleted-p (snippet field)yas--field-probably-deleted-p3012,118602
(defun yas--snippets-at-point (&optional all-snippets)yas--snippets-at-point3033,119319
(defun yas-next-field-or-maybe-expand ()yas-next-field-or-maybe-expand3046,119948
(defun yas-next-field (&optional arg)yas-next-field3059,120397
(defun yas--place-overlays (snippet field)yas--place-overlays3093,121904
(defun yas--move-to-field (snippet field)yas--move-to-field3098,122112
(defun yas-prev-field ()yas-prev-field3121,123030
(defun yas-abort-snippet (&optional snippet)yas-abort-snippet3126,123159
(defun yas-exit-snippet (snippet)yas-exit-snippet3133,123375
(defun yas-exit-all-snippets ()yas-exit-all-snippets3142,123749
(defmacro yas--inhibit-overlay-hooks (&rest body)yas--inhibit-overlay-hooks3153,124018
(defvar yas-snippet-beg nil "Beginning position of the last snippet committed.")yas-snippet-beg3159,124212
(defvar yas-snippet-end nil "End position of the last snippet committed.")yas-snippet-end3160,124293
(defun yas--commit-snippet (snippet)yas--commit-snippet3162,124369
(defun yas--safely-run-hooks (hook-var)yas--safely-run-hooks3207,126007
(defun yas--check-commit-snippet ()yas--check-commit-snippet3214,126189
(defun yas--markers-to-points (snippet)yas--markers-to-points3259,128159
(defun yas--points-to-markers (snippet)yas--points-to-markers3283,129527
(defun yas--field-contains-point-p (field &optional point)yas--field-contains-point-p3302,130690
(defun yas--field-text-for-display (field)yas--field-text-for-display3308,130896
(defun yas--undo-in-progress ()yas--undo-in-progress3312,131067
(defun yas--make-control-overlay (snippet start end)yas--make-control-overlay3318,131231
(defun yas-skip-and-clear-or-delete-char (&optional field)yas-skip-and-clear-or-delete-char3331,131691
(defun yas--skip-and-clear (field)yas--skip-and-clear3348,132400
(defun yas--mark-this-and-children-modified (field)yas--mark-this-and-children-modified3358,132846
(defun yas--make-move-active-field-overlay (snippet field)yas--make-move-active-field-overlay3368,133229
(defvar yas--inhibit-overlay-hooks nilyas--inhibit-overlay-hooks3390,134338
(defun yas--on-field-overlay-modification (overlay after? beg end &optional length)yas--on-field-overlay-modification3393,134461
(defun yas--make-move-field-protection-overlays (snippet field)yas--make-move-field-protection-overlays3435,136416
(defvar yas--protection-violation nilyas--protection-violation3467,137898
(defun yas--on-protection-overlay-modification (overlay after? beg end &optional length)yas--on-protection-overlay-modification3475,138201
(defun yas-expand-snippet (content &optional start end expand-env)yas-expand-snippet3513,139806
(defun yas--take-care-of-redo (beg end snippet)yas--take-care-of-redo3618,144685
(defun yas--snippet-revive (beg end snippet)yas--snippet-revive3627,145017
(defun yas--snippet-create (begin end)yas--snippet-create3653,146066
(defun yas--fom-start (fom)yas--fom-start3692,147382
(defun yas--fom-end (fom)yas--fom-end3700,147581
(defun yas--fom-next (fom)yas--fom-next3708,147774
(defun yas--fom-parent-field (fom)yas--fom-parent-field3716,147968
(defun yas--calculate-adjacencies (snippet)yas--calculate-adjacencies3724,148169
(defun yas--calculate-mirrors-in-fields (snippet mirror)yas--calculate-mirrors-in-fields3756,149697
(defun yas--advance-end-maybe (fom newend)yas--advance-end-maybe3773,150460
(defun yas--advance-start-maybe (fom newstart)yas--advance-start-maybe3793,151197
(defun yas--advance-end-of-parents-maybe (field newend)yas--advance-end-of-parents-maybe3801,151502
(defvar yas--dollar-regions nilyas--dollar-regions3811,151937
(defvar yas--backquote-markers-and-strings nilyas--backquote-markers-and-strings3815,152061
(defun yas--snippet-parse-create (snippet)yas--snippet-parse-create3820,152242
(defun yas--indent-according-to-mode (snippet-markers)yas--indent-according-to-mode3872,153669
(defvar yas--indent-original-column nil)yas--indent-original-column3906,155191
(defun yas--indent (snippet)yas--indent3907,155232
(defun yas--collect-snippet-markers (snippet)yas--collect-snippet-markers3935,156505
(defun yas--real-line-beginning ()yas--real-line-beginning3950,157132
(defun yas--escape-string (escaped)yas--escape-string3959,157367
(defun yas--protect-escapes (&optional text escaped)yas--protect-escapes3962,157465
(defun yas--restore-escapes (&optional text escaped)yas--restore-escapes3976,158057
(defun yas--save-backquotes ()yas--save-backquotes3990,158639
(defun yas--restore-backquotes ()yas--restore-backquotes4005,159404
(defun yas--scan-sexps (from count)yas--scan-sexps4018,159881
(defun yas--make-marker (pos)yas--make-marker4025,160045
(defun yas--field-parse-create (snippet &optional parent-field)yas--field-parse-create4031,160242
(defun yas--transform-mirror-parse-create (snippet)yas--transform-mirror-parse-create4106,164188
(defun yas--simple-mirror-parse-create (snippet)yas--simple-mirror-parse-create4129,165445
(defun yas--delete-regions (regions)yas--delete-regions4167,167422
(defun yas--calculate-mirror-depth (mirror &optional traversed)yas--calculate-mirror-depth4175,167700
(defun yas--update-mirrors (snippet)yas--update-mirrors4195,168627
(defun yas--mirror-update-display (mirror field)yas--mirror-update-display4233,170731
(defun yas--field-update-display (field snippet)yas--field-update-display4254,171868
(defun yas--post-command-handler ()yas--post-command-handler4276,172847
(defun yas--expand-from-trigger-key-doc ()yas--expand-from-trigger-key-doc4307,174243
(defun yas--expand-from-keymap-doc ()yas--expand-from-keymap-doc4326,175232
(defun yas--template-pretty-list (templates)yas--template-pretty-list4346,176371
(define-button-type 'help-snippet-defhelp-snippet-def4355,176693
(defun yas--snippet-description-finish-runonce ()yas--snippet-description-finish-runonce4360,176898
(defun yas--create-snippet-xrefs ()yas--create-snippet-xrefs4365,177131
(defun yas--expand-uuid (mode-symbol uuid &optional start end expand-env)yas--expand-uuid4376,177612
(defvar yas-verbosity 4yas-verbosity4388,178093
(defun yas--message (level message &rest args)yas--message4391,178198
(defun yas--format (format-control &rest format-args)yas--format4396,178403
(defadvice c-neutralize-syntax-in-CPPc-neutralize-syntax-in-CPP4474,181981
(defvar yas--exported-syms '(;; `defcustom'syas--exported-syms4492,182634
(defvar yas--dont-backport '(yas-active-keys)yas--dont-backport4605,187648

/home/malk/.emacs.d/elpa/clojure-test-mode-20130101.2149/clojure-test-mode.el,2227
(defface clojure-test-failure-faceclojure-test-failure-face116,3548
(defface clojure-test-error-faceclojure-test-error-face124,3835
(defface clojure-test-success-faceclojure-test-success-face132,4072
(defvar clojure-test-count 0)clojure-test-count144,4369
(defvar clojure-test-failure-count 0)clojure-test-failure-count145,4399
(defvar clojure-test-error-count 0)clojure-test-error-count146,4437
(defconst clojure-test-ignore-resultsclojure-test-ignore-results150,4485
(defun clojure-test-nrepl-connected-p ()clojure-test-nrepl-connected-p156,4638
(defun clojure-test-make-handler (callback)clojure-test-make-handler159,4717
(defun clojure-test-eval (string &optional handler)clojure-test-eval171,5301
(defun clojure-test-load-reporting ()clojure-test-load-reporting176,5509
(defun clojure-test-get-results (buffer result)clojure-test-get-results224,8004
(defun clojure-test-extract-results (buffer results)clojure-test-extract-results232,8289
(defun clojure-test-extract-result (result)clojure-test-extract-result238,8505
(defun clojure-test-echo-results ()clojure-test-echo-results253,9239
(defun clojure-test-highlight-problem (line event message)clojure-test-highlight-problem264,9657
(defun clojure-test-find-next-problem (here)clojure-test-find-next-problem277,10149
(defun clojure-test-find-previous-problem (here)clojure-test-find-previous-problem291,10813
(defun clojure-test-implementation-for (namespace)clojure-test-implementation-for307,11563
(defun clojure-test-run-tests ()clojure-test-run-tests317,12010
(defun clojure-test-run-test ()clojure-test-run-test333,12659
(defun clojure-test-show-result ()clojure-test-show-result353,13713
(defun clojure-test-load-current-buffer ()clojure-test-load-current-buffer362,14072
(defun clojure-test-clear (&optional callback)clojure-test-clear368,14317
(defun clojure-test-next-problem ()clojure-test-next-problem377,14587
(defun clojure-test-previous-problem ()clojure-test-previous-problem387,14887
(defun clojure-test-jump-to-implementation ()clojure-test-jump-to-implementation397,15207
(defvar clojure-test-mode-mapclojure-test-mode-map404,15501
(define-minor-mode clojure-test-modeclojure-test-mode419,16198

/home/malk/.emacs.d/elpa/clojure-test-mode-20130101.2149/clojure-test-mode-autoloads.el,73
(defun clojure-test-maybe-enable nil "\clojure-test-maybe-enable17,393

/home/malk/.emacs.d/elpa/clojure-test-mode-20130101.2149/clojure-test-mode-pkg.el,172
(define-package "clojure-test-mode" "20130101.2149" "Minor mode for Clojure tests [source: github]" (quote ((clojure-mode "1.7") (nrepl "0.1.5"))))"clojure-test-mode"1,0

/home/malk/.emacs.d/elpa/hungry-delete-20120128.1856/hungry-delete-autoloads.el,0

/home/malk/.emacs.d/elpa/hungry-delete-20120128.1856/hungry-delete-pkg.el,125
(define-package "hungry-delete" "20120128.1856" "hungry delete minor mode [source: github]" (quote nil))"hungry-delete"1,0

/home/malk/.emacs.d/elpa/hungry-delete-20120128.1856/hungry-delete.el,1033
(defvar hungry-delete-mode-map (make-keymap)hungry-delete-mode-map44,1468
(define-key hungry-delete-mode-map [remap delete-char] 'hungry-delete-forward)hungry-delete-mode-map46,1555
(define-key hungry-delete-mode-map [remap delete-backward-char] 'hungry-delete-backward)hungry-delete-mode-map47,1634
(define-key hungry-delete-mode-map [remap backward-delete-char-untabify] 'hungry-delete-backward)hungry-delete-mode-map48,1723
(defmacro hungry-delete-skip-ws-forward (&optional limit)hungry-delete-skip-ws-forward50,1822
(defmacro hungry-delete-skip-ws-backward (&optional limit)hungry-delete-skip-ws-backward71,2663
(defun hungry-delete-forward ()hungry-delete-forward91,3390
(defun hungry-delete-backward ()hungry-delete-backward104,3782
(define-minor-mode hungry-delete-modehungry-delete-mode117,4187
(defun turn-on-hungry-delete-mode ()turn-on-hungry-delete-mode125,4420
(define-globalized-minor-mode global-hungry-delete-mode hungry-delete-mode turn-on-hungry-delete-mode)global-hungry-delete-mode132,4702

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-util.el,7695
(defalias 'w3m-make-local-hook (if (featurep 'xemacs)w3m-make-local-hook80,2739
(defmacro w3m-static-if (cond then &rest else)w3m-static-if86,2858
(defmacro w3m-static-when (cond &rest body)w3m-static-when92,3102
(defmacro w3m-static-unless (cond &rest body)w3m-static-unless98,3290
(defmacro w3m-static-cond (&rest clauses)w3m-static-cond104,3441
(defmacro w3m-condition-case (var bodyform &rest handlers)w3m-condition-case114,3776
(defmacro w3m-add-text-properties (start end props &optional object)w3m-add-text-properties126,4077
(defun w3m-add-face-property (start end name &optional object)w3m-add-face-property138,4534
(defun w3m-remove-face-property (start end name &optional object)w3m-remove-face-property153,5223
(defmacro w3m-get-text-property-around (prop)w3m-get-text-property-around175,6063
(defmacro w3m-action (&optional position)w3m-action192,6688
(defmacro w3m-anchor (&optional position)w3m-anchor201,7097
(defmacro w3m-image (&optional position)w3m-image210,7521
(defmacro w3m-image-alt (&optional position)w3m-image-alt219,7926
(defmacro w3m-anchor-title (&optional position)w3m-anchor-title228,8347
(defmacro w3m-submit (&optional position)w3m-submit237,8780
(defmacro w3m-anchor-sequence (&optional position)w3m-anchor-sequence246,9189
(def-edebug-spec w3m-parse-attributesw3m-parse-attributes264,9877
(defmacro w3m-parse-attributes (attributes &rest forms)w3m-parse-attributes266,9973
(defun w3m-get-buffer-create (name)w3m-get-buffer-create336,12322
(defun w3m-kill-buffer (buffer)w3m-kill-buffer344,12596
(defun w3m-kill-all-buffer ()w3m-kill-all-buffer357,13056
(defun w3m-current-title ()w3m-current-title364,13244
(defun w3m-buffer-title (buffer)w3m-buffer-title379,13680
(defun w3m-buffer-number (buffer)w3m-buffer-number384,13813
(defun w3m-buffer-set-number (buffer number)w3m-buffer-set-number392,14113
(defun w3m-buffer-name-add-title ()w3m-buffer-name-add-title408,14656
(defun w3m-generate-new-buffer (name)w3m-generate-new-buffer418,15014
(defun w3m-buffer-name-lessp (x y)w3m-buffer-name-lessp430,15460
(defun w3m-list-buffers (&optional nosort)w3m-list-buffers449,16029
(defmacro w3m-popup-frame-parameters ()w3m-popup-frame-parameters484,17195
(defun w3m-device-on-window-system-p ()w3m-device-on-window-system-p501,17758
(defmacro w3m-popup-frame-p ()w3m-popup-frame-p507,17952
(defmacro w3m-use-tab-p ()w3m-use-tab-p512,18140
(defun w3m-lefttab-exist-p (&optional buffer)w3m-lefttab-exist-p520,18356
(defun w3m-righttab-exist-p (&optional buffer)w3m-righttab-exist-p523,18471
(defmacro w3m-popup-window-p ()w3m-popup-window-p533,18722
(defvar w3m-initial-frames nilw3m-initial-frames540,18948
(defun w3m-popup-buffer (buffer)w3m-popup-buffer546,19241
(defun w3m-add-w3m-initial-frames (&optional frame)w3m-add-w3m-initial-frames615,21914
(defun w3m-delete-w3m-initial-frames (frame)w3m-delete-w3m-initial-frames646,23134
(defun w3m-delete-frames-and-windows (&optional exception)w3m-delete-frames-and-windows662,23834
(defmacro w3m-goto-next-defun (name property)w3m-goto-next-defun732,25977
(defun w3m-goto-next-anchor-or-image (&optional pos)w3m-goto-next-anchor-or-image750,26730
(defconst w3m-url-fallback-base "http:///")w3m-url-fallback-base776,27635
(defconst w3m-url-invalid-regexp "\\`http:///")w3m-url-invalid-regexp777,27679
(defmacro w3m-substitute-key-definitions (new-map old-map &rest keys)w3m-substitute-key-definitions779,27728
(defun w3m-url-valid (url)w3m-url-valid793,28136
(defmacro w3m-set-match-data (list)w3m-set-match-data797,28236
(defun w3m-search-tag-1 (regexp)w3m-search-tag-1809,28621
(defmacro w3m-search-tag (&rest names)w3m-search-tag840,29468
(defun w3m-beginning-of-tag (&optional tag include-whitespace)w3m-beginning-of-tag852,29929
(defun w3m-end-of-tag (&optional tag include-whitespace)w3m-end-of-tag956,33583
(defun w3m-string-match-url-components-1 (string)w3m-string-match-url-components-11051,36916
(defconst w3m-url-components-regexpw3m-url-components-regexp1097,38204
(defmacro w3m-string-match-url-components (string)w3m-string-match-url-components1104,38516
(defun w3m-time-newer-p (a b)w3m-time-newer-p1113,38911
(defun w3m-time-lapse-seconds (start end)w3m-time-lapse-seconds1123,39233
(defalias 'w3m-float-timew3m-float-time1130,39462
(defun w3m-url-local-p (url)w3m-url-local-p1151,40191
(defconst w3m-url-authinfo-regexpw3m-url-authinfo-regexp1156,40344
(defun w3m-url-authinfo (url)w3m-url-authinfo1160,40523
(defun w3m-url-strip-authinfo (url)w3m-url-strip-authinfo1166,40722
(defun w3m-url-strip-fragment (url)w3m-url-strip-fragment1174,40952
(defun w3m-url-strip-query (url)w3m-url-strip-query1180,41118
(defun w3m-get-server-hostname (url)w3m-get-server-hostname1186,41304
(defun w3m-which-command (command)w3m-which-command1195,41618
(defun w3m-cancel-refresh-timer (&optional buffer)w3m-cancel-refresh-timer1211,42158
(defun w3m-assoc-ignore-case (name alist)w3m-assoc-ignore-case1241,43195
(defun w3m-prin1 (object &optional stream)w3m-prin11253,43542
(defun w3m-modify-plist (plist &rest properties)w3m-modify-plist1269,44036
(def-edebug-spec w3m-insert-string (form))w3m-insert-string1282,44540
(defmacro w3m-insert-string (string)w3m-insert-string1283,44583
(defun w3m-custom-hook-initialize (symbol value)w3m-custom-hook-initialize1294,44978
(defun w3m-run-mode-hooks (&rest funcs)w3m-run-mode-hooks1304,45287
(defmacro w3m-keep-region-active ()w3m-keep-region-active1310,45495
(defmacro w3m-deactivate-region ()w3m-deactivate-region1320,45906
(defmacro w3m-region-active-p ()w3m-region-active-p1326,46052
(defun w3m-replace-regexps-in-string (string &rest regexps)w3m-replace-regexps-in-string1347,46879
(defun w3m-make-menu-item (japan english)w3m-make-menu-item1443,50266
(defvar w3m-make-menu-commands-keys nil)w3m-make-menu-commands-keys1453,50472
(defun w3m-make-menu-commands (menu-commands)w3m-make-menu-commands1455,50514
(defun w3m-unseen-buffer-p (buffer)w3m-unseen-buffer-p1482,51377
(defun w3m-visited-file-modtime ()w3m-visited-file-modtime1487,51499
(defmacro w3m-interactive-p ()w3m-interactive-p1504,52149
(defalias 'w3m-force-mode-line-updatew3m-force-mode-line-update1515,52437
(defmacro w3m-flet (bindings &rest body)w3m-flet1521,52623
(defmacro w3m-labels (bindings &rest body)w3m-labels1537,53141
(defun w3m-widget-type-convert-widget (widget)w3m-widget-type-convert-widget1550,53701
(defconst w3m-puny-code-regex "xn--\\([-0-9a-zA-z]+\\)")w3m-puny-code-regex1559,54015
(defconst w3m-puny-code-nonascii "[^\000-\177]")w3m-puny-code-nonascii1560,54072
(defconst w3m-puny-base 36)w3m-puny-base1562,54122
(defconst w3m-puny-tmin 1)w3m-puny-tmin1563,54150
(defconst w3m-puny-tmax 26)w3m-puny-tmax1564,54177
(defconst w3m-puny-damp 700)w3m-puny-damp1565,54205
(defconst w3m-puny-skew 38)w3m-puny-skew1566,54234
(defconst w3m-puny-initial-bias 72)w3m-puny-initial-bias1567,54262
(defconst w3m-puny-initial-n 128)w3m-puny-initial-n1568,54298
(defconst w3m-puny-delimiter ?-)w3m-puny-delimiter1569,54332
(defun w3m-puny-adapt (delta numpoints firsttime)w3m-puny-adapt1571,54366
(defun w3m-puny-decode-digit (cp)w3m-puny-decode-digit1582,54828
(defun w3m-puny-encode-digit (d)w3m-puny-encode-digit1591,54997
(defun w3m-puny-decode1 (input)w3m-puny-decode11596,55093
(defun w3m-puny-decode (input)w3m-puny-decode1646,56602
(defun w3m-puny-decode-url (url)w3m-puny-decode-url1654,56793
(defun w3m-puny-encode1 (input)w3m-puny-encode11673,57473
(defun w3m-puny-encode (input)w3m-puny-encode1733,59228
(defun w3m-puny-encode-url (url)w3m-puny-encode-url1739,59398

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-antenna.el,3583
(defgroup w3m-antenna nilw3m-antenna51,1538
(define-widget 'w3m-antenna-string 'stringw3m-antenna-string56,1657
(defun w3m-antenna-string-create (widget)w3m-antenna-string-create64,1900
(defvar w3m-antenna-alist nilw3m-antenna-alist97,3017
(defmacro w3m-antenna-site-key (site)w3m-antenna-site-key110,3382
(defmacro w3m-antenna-site-title (site)w3m-antenna-site-title112,3436
(defmacro w3m-antenna-site-class (site)w3m-antenna-site-class114,3494
(defmacro w3m-antenna-site-url (site)w3m-antenna-site-url116,3552
(defmacro w3m-antenna-site-last-modified (site)w3m-antenna-site-last-modified118,3608
(defmacro w3m-antenna-site-size (site)w3m-antenna-site-size120,3674
(defmacro w3m-antenna-site-size-detected (site)w3m-antenna-site-size-detected122,3731
(defcustom w3m-antenna-filew3m-antenna-file125,3798
(defcustom w3m-antenna-refresh-interval nilw3m-antenna-refresh-interval131,3969
(defcustom w3m-antenna-sitesw3m-antenna-sites140,4293
(defcustom w3m-antenna-html-skeltonw3m-antenna-html-skelton182,5859
(defcustom w3m-antenna-make-summary-functionw3m-antenna-make-summary-function194,6295
(defcustom w3m-antenna-sort-changed-sites-functionw3m-antenna-sort-changed-sites-function205,6723
(defcustom w3m-antenna-sort-unchanged-sites-functionw3m-antenna-sort-unchanged-sites-function217,7200
(defun w3m-antenna-alist ()w3m-antenna-alist229,7681
(defun w3m-antenna-hns-last-modified (url handler)w3m-antenna-hns-last-modified241,8028
(defun w3m-antenna-check-hns (site handler)w3m-antenna-check-hns271,9124
(defun w3m-antenna-check-rss (site handler url)w3m-antenna-check-rss281,9495
(defun w3m-antenna-check-another-page (site handler url)w3m-antenna-check-another-page337,11244
(defun w3m-antenna-check-anchor (site handler regexp number)w3m-antenna-check-anchor350,11812
(defun w3m-antenna-check-page (site handler &optional url)w3m-antenna-check-page374,12624
(defun w3m-antenna-site-update (site url time size)w3m-antenna-site-update403,13768
(defun w3m-antenna-check-site (site handler)w3m-antenna-check-site421,14434
(defun w3m-antenna-mapcar (function sequence handler)w3m-antenna-mapcar438,15190
(defun w3m-antenna-mapcar-after (result buffer)w3m-antenna-mapcar-after457,15834
(defun w3m-antenna-check-all-sites (&optional handler)w3m-antenna-check-all-sites471,16355
(defun w3m-antenna-make-summary (site)w3m-antenna-make-summary487,16876
(defun w3m-antenna-make-summary-like-natsumican (site)w3m-antenna-make-summary-like-natsumican498,17235
(defun w3m-antenna-sort-sites-by-time (sites)w3m-antenna-sort-sites-by-time513,17716
(defun w3m-antenna-sort-sites-by-title (sites)w3m-antenna-sort-sites-by-title522,17991
(defun w3m-antenna-make-contents (changed-sites unchanged-sites)w3m-antenna-make-contents528,18143
(defun w3m-about-antenna (url &optional no-decode no-cachew3m-about-antenna563,19366
(defun w3m-antenna (&optional no-cache)w3m-antenna587,20251
(defvar w3m-antenna-tmp-url nil)w3m-antenna-tmp-url592,20434
(defvar w3m-antenna-tmp-title nil)w3m-antenna-tmp-title593,20467
(defun w3m-antenna-add-current-url (&optional arg)w3m-antenna-add-current-url595,20503
(defun w3m-antenna-add (url &optional title)w3m-antenna-add602,20787
(defvar w3m-antenna-mode-mapw3m-antenna-mode-map615,21212
(defvar w3m-antenna-mode nil "Non-nil if w3m antenna mode is enabled.")w3m-antenna-mode622,21423
(defun w3m-antenna-mode (&optional arg)w3m-antenna-mode629,21787
(defun w3m-antenna-mode-setter (url)w3m-antenna-mode-setter642,22110
(defun w3m-antenna-edit ()w3m-antenna-edit652,22448

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-pkg.el,98
(define-package "w3m" "20121225.147" "an Emacs interface to w3m [source: github]" 'nil)"w3m"1,0

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-filter.el,1569
(defcustom w3m-filter-configurationw3m-filter-configuration41,1209
(defcustom w3m-filter-rules nilw3m-filter-rules212,7561
(defcustom w3m-filter-google-use-utf8w3m-filter-google-use-utf8232,8259
(defcustom w3m-filter-google-use-ruled-line  tw3m-filter-google-use-ruled-line240,8540
(defcustom w3m-filter-google-separator "<hr>"w3m-filter-google-separator245,8667
(defcustom w3m-filter-amazon-regxpw3m-filter-amazon-regxp250,8795
(defcustom w3m-filter-amazon-short-url-bottom nilw3m-filter-amazon-short-url-bottom268,9182
(defun w3m-filter (url)w3m-filter274,9327
(defun w3m-filter-delete-regions (url start end)w3m-filter-delete-regions289,9800
(defun w3m-filter-replace-regexp (url regexp to-string)w3m-filter-replace-regexp300,10138
(defun w3m-filter-google-click-tracking (url)w3m-filter-google-click-tracking307,10378
(defun w3m-filter-google-shrink-table-width (url)w3m-filter-google-shrink-table-width320,10991
(defun w3m-filter-add-name-anchors (url)w3m-filter-add-name-anchors362,12412
(defun w3m-filter-asahi-shimbun (url)w3m-filter-asahi-shimbun386,13337
(defun w3m-filter-google (url)w3m-filter-google400,13870
(defun w3m-filter-amazon (url)w3m-filter-amazon432,15072
(defun w3m-filter-mixi (url)w3m-filter-mixi458,16001
(defun w3m-filter-alc (url)w3m-filter-alc472,16503
(defun w3m-filter-imepita (url)w3m-filter-imepita551,19510
(defun w3m-filter-iframe (url)w3m-filter-iframe563,19872
(defun w3m-filter-allatanys (url)w3m-filter-allatanys568,20100
(defun w3m-filter-wikipedia (url)w3m-filter-wikipedia596,21031

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-dtree.el,876
(defcustom w3m-dtree-default-allfiles nilw3m-dtree-default-allfiles37,1269
(defcustom w3m-dtree-directory-depth 8w3m-dtree-directory-depth42,1388
(defcustom w3m-dtree-indent-strings ["|-" "+-" "|  " "   "]w3m-dtree-indent-strings49,1599
(defcustom w3m-dtree-stop-strings ["|=" "+="]w3m-dtree-stop-strings89,2910
(defun w3m-dtree-expand-file-name (path)w3m-dtree-expand-file-name113,3794
(defun w3m-dtree-directory-name (path)w3m-dtree-directory-name121,4056
(defmacro w3m-dtree-has-child (path)w3m-dtree-has-child133,4363
(defun w3m-dtree-create-sub (path allfiles dirprefix fileprefix indent depth)w3m-dtree-create-sub138,4561
(defun w3m-dtree-create (path allfiles dirprefix fileprefix)w3m-dtree-create183,6269
(defun w3m-about-dtree (url &optional nodecode allfiles &rest args)w3m-about-dtree205,7118
(defun w3m-dtree (allfiles path)w3m-dtree226,7883

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-form.el,8510
(defcustom w3m-form-use-fancy-faces tw3m-form-use-fancy-faces49,1485
(defcustom w3m-form-treat-textarea-size tw3m-form-treat-textarea-size54,1601
(defcustom w3m-form-use-textarea-backup tw3m-form-use-textarea-backup59,1743
(defcustom w3m-form-textarea-file-expire-date 3w3m-form-textarea-file-expire-date66,2000
(defcustom w3m-form-textarea-file-coding-systemw3m-form-textarea-file-coding-system73,2245
(defcustom w3m-form-textarea-directoryw3m-form-textarea-directory87,2602
(defcustom w3m-form-textarea-edit-mode 'text-modew3m-form-textarea-edit-mode93,2804
(defface w3m-formw3m-form104,3231
(defvar w3m-form-input-textarea-buffer nil)w3m-form-input-textarea-buffer114,3565
(defvar w3m-form-input-textarea-form nil)w3m-form-input-textarea-form115,3609
(defvar w3m-form-input-textarea-hseq nil)w3m-form-input-textarea-hseq116,3651
(defvar w3m-form-input-textarea-point nil)w3m-form-input-textarea-point117,3693
(defvar w3m-form-input-textarea-wincfg nil)w3m-form-input-textarea-wincfg118,3736
(defvar w3m-form-input-textarea-file nil)w3m-form-input-textarea-file119,3780
(defvar w3m-form-input-textarea-coding-system nil)w3m-form-input-textarea-coding-system120,3822
(defvar w3m-form-use-textarea-backup-p nil)w3m-form-use-textarea-backup-p121,3873
(defvar w3m-form-textarea-files nil)w3m-form-textarea-files131,4406
(defvar w3m-form-textarea-post-files nil)w3m-form-textarea-post-files134,4498
(defvar w3m-form-input-textarea-mode nilw3m-form-input-textarea-mode137,4600
(defvar w3m-form-input-select-buffer nil)w3m-form-input-select-buffer141,4753
(defvar w3m-form-input-select-form nil)w3m-form-input-select-form142,4795
(defvar w3m-form-input-select-name nil)w3m-form-input-select-name143,4835
(defvar w3m-form-input-select-id nil)w3m-form-input-select-id144,4875
(defvar w3m-form-input-select-point nil)w3m-form-input-select-point145,4913
(defvar w3m-form-input-select-candidates nil)w3m-form-input-select-candidates146,4954
(defvar w3m-form-input-select-wincfg nil)w3m-form-input-select-wincfg147,5000
(defvar w3m-form-input-select-urlid nil)w3m-form-input-select-urlid148,5042
(defvar w3m-form-input-map-buffer nil)w3m-form-input-map-buffer158,5550
(defvar w3m-form-input-map-wincfg nil)w3m-form-input-map-wincfg159,5589
(defvar w3m-form-input-map-point nil)w3m-form-input-map-point160,5628
(defvar w3m-form-input-map-urlname nil)w3m-form-input-map-urlname161,5666
(defvar w3m-form-new-session nilw3m-form-new-session167,5931
(defvar w3m-form-download nilw3m-form-download171,6111
(defun w3m-form-normalize-action (action url)w3m-form-normalize-action177,6310
(defun w3m-form-new (method action &optional baseurl charlst enctype)w3m-form-new187,6683
(defun w3m-form-p (obj)w3m-form-p198,6950
(defun w3m-form-set-method (form method)w3m-form-set-method204,7108
(defsetf w3m-form-method w3m-form-set-method)w3m-form-method208,7219
(defmacro w3m-form-method (form)w3m-form-method210,7266
(defmacro w3m-form-action (form)w3m-form-action212,7318
(defmacro w3m-form-charlst (form)w3m-form-charlst214,7370
(defmacro w3m-form-enctype (form)w3m-form-enctype216,7423
(defmacro w3m-form-plist (form)w3m-form-plist218,7476
(defun w3m-form-put-property (form name property value)w3m-form-put-property220,7527
(defmacro w3m-form-get-property (form name property)w3m-form-get-property227,7779
(defmacro w3m-form-put (form id name value)w3m-form-put233,7960
(defmacro w3m-form-get (form id)w3m-form-get235,8069
(defun w3m-form-get-by-name (form name)w3m-form-get-by-name237,8153
(defun w3m-form-put-by-name (form id name value)w3m-form-put-by-name248,8451
(defun w3m-form-goto-next-field ()w3m-form-goto-next-field263,8839
(defun w3m-form-get-coding-system (coding)w3m-form-get-coding-system275,9231
(defun w3m-form-make-form-data (form)w3m-form-make-form-data286,9606
(defun w3m-form-resume (forms)w3m-form-resume358,12036
(defun w3m-fontify-forms ()w3m-fontify-forms444,14954
(defmacro w3m-form-mee-attr-unquote (x)w3m-form-mee-attr-unquote472,15885
(defun w3m-form-mee-new (x)w3m-form-mee-new482,16177
(defun w3m-form-mee-select-value (value)w3m-form-mee-select-value511,17228
(defun w3m-fontify-textareas ()w3m-fontify-textareas537,18205
(defun w3m-form-parse-and-fontify (&optional reuse-forms)w3m-form-parse-and-fontify599,20387
(defun w3m-form-replace (string &optional invisible)w3m-form-replace933,32134
(defun w3m-form-input (form id name type width maxlength value)w3m-form-input960,32976
(defun w3m-form-input-password (form id name)w3m-form-input-password974,33560
(defun w3m-form-input-checkbox (form id name value)w3m-form-input-checkbox988,33991
(defun w3m-form-field-parse (fid)w3m-form-field-parse997,34308
(defun w3m-form-input-radio (form id name value)w3m-form-input-radio1007,34571
(defun w3m-form-input-file (form id name value)w3m-form-input-file1029,35334
(defcustom w3m-form-input-textarea-buffer-lines 10w3m-form-input-textarea-buffer-lines1039,35600
(defcustom w3m-form-input-textarea-mode-hook nilw3m-form-input-textarea-mode-hook1044,35738
(defcustom w3m-form-input-textarea-set-hook nilw3m-form-input-textarea-set-hook1049,35872
(defun w3m-form-text-chop (text)w3m-form-text-chop1054,36005
(defun w3m-form-search-textarea (hseq direction)w3m-form-search-textarea1064,36359
(defun w3m-form-textarea-replace (hseq string)w3m-form-textarea-replace1082,36983
(defun w3m-form-textarea-info ()w3m-form-textarea-info1091,37274
(defvar w3m-form-input-textarea-map nil)w3m-form-input-textarea-map1103,37698
(defun w3m-form-input-textarea-filename (url id)w3m-form-input-textarea-filename1115,38186
(defun w3m-form-input-textarea-save (&optional buffer file no-check)w3m-form-input-textarea-save1135,39045
(defun w3m-form-input-textarea-set ()w3m-form-input-textarea-set1160,39974
(defun w3m-form-input-textarea-exit ()w3m-form-input-textarea-exit1188,40985
(defun w3m-form-input-textarea-mode (&optional arg)w3m-form-input-textarea-mode1213,41946
(defun w3m-form-input-textarea-mode-setup (caller-buffer)w3m-form-input-textarea-mode-setup1231,42520
(defun w3m-form-input-textarea (form hseq)w3m-form-input-textarea1285,44627
(defun w3m-form-use-textarea-backup-p ()w3m-form-use-textarea-backup-p1374,48137
(defun w3m-form-textarea-same-check (str1 str2)w3m-form-textarea-same-check1388,48515
(defun w3m-form-textarea-file-cleanup ()w3m-form-textarea-file-cleanup1396,48836
(defun w3m-form-textarea-files-remove ()w3m-form-textarea-files-remove1427,49999
(defun w3m-form-set-number (w3mbuf newname)w3m-form-set-number1441,50482
(defun w3m-form-kill-buffer (w3mbuf)w3m-form-kill-buffer1459,51154
(defcustom w3m-form-input-select-buffer-lines 10w3m-form-input-select-buffer-lines1477,51714
(defcustom w3m-form-input-select-mode-hook nilw3m-form-input-select-mode-hook1482,51848
(defcustom w3m-form-input-select-set-hook nilw3m-form-input-select-set-hook1487,51978
(defcustom w3m-form-mouse-face 'highlightw3m-form-mouse-face1492,52107
(defvar w3m-form-input-select-keymap nil)w3m-form-input-select-keymap1497,52224
(defun w3m-form-input-select-set-mouse (event)w3m-form-input-select-set-mouse1524,53411
(defun w3m-form-input-select-set ()w3m-form-input-select-set1530,53592
(defun w3m-form-input-select-exit ()w3m-form-input-select-exit1556,54479
(defun w3m-form-input-select-mode ()w3m-form-input-select-mode1570,54939
(defun w3m-form-input-select (form id name)w3m-form-input-select1587,55488
(defcustom w3m-form-input-map-buffer-lines 10w3m-form-input-map-buffer-lines1659,57881
(defcustom w3m-form-input-map-mode-hook nilw3m-form-input-map-mode-hook1664,58016
(defcustom w3m-form-input-map-set-hook nilw3m-form-input-map-set-hook1669,58140
(defvar w3m-form-input-map-keymap nil)w3m-form-input-map-keymap1674,58263
(defun w3m-form-input-map-set-mouse (event)w3m-form-input-map-set-mouse1701,59375
(defun w3m-form-input-map-set ()w3m-form-input-map-set1707,59554
(defun w3m-form-input-map-exit ()w3m-form-input-map-exit1724,60155
(defun w3m-form-input-map-mode ()w3m-form-input-map-mode1738,60607
(defun w3m-form-input-map (form name)w3m-form-input-map1755,61142
(defun w3m-form-submit-get-textarea-files (form)w3m-form-submit-get-textarea-files1814,63082
(defun w3m-form-submit (form &optional id name value new-session download)w3m-form-submit1827,63503
(defun w3m-form-real-reset (form sexp)w3m-form-real-reset1875,65218
(defun w3m-form-reset (form)w3m-form-reset1881,65434

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-symbol.el,736
(defgroup w3m-symbol nilw3m-symbol39,1218
(defvar w3m-symbol-custom-typew3m-symbol-custom-type43,1279
(defcustom w3m-default-symbolw3m-default-symbol62,1891
(defcustom w3m-Chinese-BIG5-symbolw3m-Chinese-BIG5-symbol75,2281
(defcustom w3m-Chinese-CNS-symbolw3m-Chinese-CNS-symbol88,2943
(defcustom w3m-Chinese-GB-symbolw3m-Chinese-GB-symbol101,3603
(defcustom w3m-Japanese-symbolw3m-Japanese-symbol114,4225
(defcustom w3m-Korean-symbolw3m-Korean-symbol127,4842
(defcustom w3m-mule-unicode-symbolw3m-mule-unicode-symbol140,5491
(defcustom w3m-symbol nilw3m-symbol166,6506
(defun w3m-use-symbol ()w3m-use-symbol182,7147
(defun w3m-symbol ()w3m-symbol189,7318
(defun w3m-replace-symbol ()w3m-replace-symbol211,8064

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-lnum.el,3236
(defface w3m-lnumw3m-lnum51,1937
(defface w3m-lnum-minibuffer-promptw3m-lnum-minibuffer-prompt60,2216
(defface w3m-lnum-matchw3m-lnum-match68,2490
(defcustom w3m-lnum-mode-hook nilw3m-lnum-mode-hook79,2949
(defcustom w3m-lnum-quick-browsing 'quick-numbersw3m-lnum-quick-browsing84,3072
(defcustom w3m-lnum-context-alistw3m-lnum-context-alist95,3487
(defvar w3m-lnum-actions-custom-typew3m-lnum-actions-custom-type102,3724
(defcustom w3m-lnum-actions-generalw3m-lnum-actions-general110,3969
(defcustom w3m-lnum-actions-image-alistw3m-lnum-actions-image-alist118,4249
(defcustom w3m-lnum-actions-link-alistw3m-lnum-actions-link-alist134,4954
(defcustom w3m-lnum-actions-button-alistw3m-lnum-actions-button-alist175,6415
(defcustom w3m-lnum-actions-form-alistw3m-lnum-actions-form-alist187,6835
(defvar w3m-lnum-mode-map nilw3m-lnum-mode-map206,7497
(defvar w3m-lnum-mode nilw3m-lnum-mode227,8394
(defun w3m-lnum-remove-overlays (&optional start end)w3m-lnum-remove-overlays236,8754
(defun w3m-lnum-mode (&optional arg)w3m-lnum-mode247,9231
(defmacro w3m-lnum-set-overlay (pos index pmax)w3m-lnum-set-overlay279,10379
(defun w3m-lnum-set-numbering (&optional next-func reg dont-clear-p)w3m-lnum-set-numbering300,11306
(defun w3m-lnum (arg &optional filter dont-clear-p)w3m-lnum362,13473
(defmacro w3m-lnum-prompt-str (num fun start def-anchor filterw3m-lnum-prompt-str374,14056
(defmacro w3m-read-event (prompt key)w3m-read-event395,14825
(defun w3m-lnum-read-interactive (prompt fun type last-index &optionalw3m-lnum-read-interactive413,15333
(defmacro w3m-with-lnum (type filter &rest body)w3m-with-lnum559,20240
(defun w3m-lnum-highlight-anchor (arg)w3m-lnum-highlight-anchor577,21020
(defmacro w3m-lnum-get-match-info (condition found-tag)w3m-lnum-get-match-info609,21991
(defun w3m-lnum-get-anchor-info (&optional num)w3m-lnum-get-anchor-info623,22500
(defun w3m-lnum-get-action (&optional prompt type)w3m-lnum-get-action633,22898
(defun w3m-lnum-goto ()w3m-lnum-goto664,24018
(defmacro w3m-lnum-visit (info &optional new-session edit)w3m-lnum-visit673,24316
(defun w3m-lnum-follow (arg)w3m-lnum-follow691,24851
(defmacro w3m-lnum-make-action (text cmd)w3m-lnum-make-action751,26998
(defun w3m-lnum-universal-dispatch (info label action-alist)w3m-lnum-universal-dispatch755,27171
(defun w3m-lnum-universal ()w3m-lnum-universal846,30640
(defun w3m-lnum-toggle-inline-image (&optional arg)w3m-lnum-toggle-inline-image905,32520
(defun w3m-lnum-view-image ()w3m-lnum-view-image931,33359
(defun w3m-lnum-save-image ()w3m-lnum-save-image945,33866
(defmacro w3m-lnum-zoom-image (rate &optional in)w3m-lnum-zoom-image956,34278
(defun w3m-lnum-zoom-in-image (&optional rate)w3m-lnum-zoom-in-image987,35494
(defun w3m-lnum-zoom-out-image (&optional rate)w3m-lnum-zoom-out-image997,35933
(defun w3m-lnum-external-view-this-url ()w3m-lnum-external-view-this-url1008,36387
(defun w3m-lnum-edit-this-url ()w3m-lnum-edit-this-url1020,36808
(defun w3m-lnum-print-this-url ()w3m-lnum-print-this-url1031,37171
(defun w3m-lnum-download-this-url ()w3m-lnum-download-this-url1048,37734
(defun w3m-lnum-bookmark-add-this-url ()w3m-lnum-bookmark-add-this-url1063,38222

/home/malk/.emacs.d/elpa/w3m-20121225.147/mime-w3m.el,929
(defcustom mime-w3m-display-inline-images 'defaultmime-w3m-display-inline-images52,1747
(defcustom mime-w3m-safe-url-regexp "\\`cid:"mime-w3m-safe-url-regexp71,2392
(defcustom mime-w3m-after-cursor-move-hookmime-w3m-after-cursor-move-hook83,3004
(defcustom mime-w3m-setup-hook nilmime-w3m-setup-hook91,3275
(defvar mime-w3m-message-structure nil)mime-w3m-message-structure96,3400
(defun mime-w3m-insinuate ()mime-w3m-insinuate99,3498
(defun mime-w3m-setup ()mime-w3m-setup129,4395
(def-edebug-spec mime-w3m-save-background-color t)mime-w3m-save-background-color139,4791
(defmacro mime-w3m-save-background-color (&rest body)mime-w3m-save-background-color140,4842
(defun mime-w3m-preview-text/html (entity situation)mime-w3m-preview-text/html149,5119
(defun mime-w3m-check-current-position ()mime-w3m-check-current-position191,6645
(defun mime-w3m-cid-retrieve (url &rest args)mime-w3m-cid-retrieve201,7054

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-namazu.el,1114
(defgroup w3m-namazu nilw3m-namazu58,1678
(defcustom w3m-namazu-command "namazu"w3m-namazu-command63,1779
(defcustom w3m-namazu-argumentsw3m-namazu-arguments68,1911
(defcustom w3m-namazu-page-maxw3m-namazu-page-max81,2350
(defconst w3m-namazu-default-index-customize-specw3m-namazu-default-index-customize-spec89,2588
(defcustom w3m-namazu-index-alistw3m-namazu-index-alist96,2833
(defcustom w3m-namazu-default-indexw3m-namazu-default-index117,3479
(defcustom w3m-namazu-output-coding-systemw3m-namazu-output-coding-system129,3981
(defcustom w3m-namazu-input-coding-systemw3m-namazu-input-coding-system139,4279
(defun w3m-namazu-call-process (index query whence)w3m-namazu-call-process148,4501
(defun w3m-about-namazu (url &optional no-decode no-cache &rest args)w3m-about-namazu167,5241
(defun w3m-namazu-complete-index (index predicate flag)w3m-namazu-complete-index215,6874
(defvar w3m-namazu-index-history nil)w3m-namazu-index-history241,7731
(defvar w3m-namazu-query-history nil)w3m-namazu-query-history242,7769
(defun w3m-namazu (index query &optional reload)w3m-namazu245,7823

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-ems.el,5924
(defsubst w3m-find-coding-system (obj)w3m-find-coding-system102,3333
(defun w3m-detect-coding-region (start end &optional priority-list)w3m-detect-coding-region106,3448
(defun w3m-mule-unicode-p ()w3m-mule-unicode-p121,4128
(defalias 'w3m-make-ccl-coding-systemw3m-make-ccl-coding-system127,4339
(defun w3m-ucs-to-char (codepoint)w3m-ucs-to-char229,7947
(defalias 'w3m-display-graphic-p 'display-images-p)w3m-display-graphic-p234,8116
(defun w3m-display-inline-images-p ()w3m-display-inline-images-p236,8169
(defcustom w3m-image-animate-seconds 10w3m-image-animate-seconds242,8358
(defun w3m-image-animate (image)w3m-image-animate250,8658
(defun w3m-create-image (url &optional no-cache referer size handler)w3m-create-image265,9197
(defun w3m-create-resized-image (url rate &optional referer size handler)w3m-create-resized-image318,11141
(defun w3m-insert-image (beg end image &rest args)w3m-insert-image347,12129
(defun w3m-remove-image (beg end)w3m-remove-image376,13335
(defun w3m-image-type-available-p (image-type)w3m-image-type-available-p384,13684
(defface w3m-form-buttonw3m-form-button390,13892
(defface w3m-form-button-mousew3m-form-button-mouse402,14378
(defface w3m-form-button-pressedw3m-form-button-pressed414,14894
(defvar w3m-form-button-keymapw3m-form-button-keymap426,15411
(define-widget 'w3m-form-button 'push-buttonw3m-form-button432,15609
(defun w3m-form-make-button (start end properties)w3m-form-make-button438,15824
(defun w3m-setup-widget-faces ()w3m-setup-widget-faces468,16837
(defun w3m-menu-on-forefront (arg &optional curbuf)w3m-menu-on-forefront477,17180
(defcustom w3m-use-toolbarw3m-use-toolbar493,17789
(defcustom w3m-toolbar-icon-preferred-image-typesw3m-toolbar-icon-preferred-image-types504,18125
(defcustom w3m-toolbar-use-single-image-per-icon nilw3m-toolbar-use-single-image-per-icon519,18617
(defcustom w3m-toolbar-configurationsw3m-toolbar-configurations531,19031
(defun w3m-toolbar-define-keys (keymap defs)w3m-toolbar-define-keys562,20305
(defun w3m-find-image (name &optional directory)w3m-find-image580,20901
(defun w3m-toolbar-make-buttons (buttons &optional force)w3m-toolbar-make-buttons609,22054
(defun w3m-toolbar-set-configurations (&optional curbuf)w3m-toolbar-set-configurations645,23336
(defun w3m-setup-toolbar ()w3m-setup-toolbar675,24419
(defalias 'w3m-update-toolbar 'ignore)w3m-update-toolbar682,24661
(defun w3m-update-toolbars ()w3m-update-toolbars684,24701
(defcustom w3m-tab-width 16w3m-tab-width692,24968
(defface w3m-tab-unselectedw3m-tab-unselected702,25190
(defface w3m-tab-unselected-retrievingw3m-tab-unselected-retrieving713,25580
(defface w3m-tab-unselected-unseenw3m-tab-unselected-unseen725,26048
(defface w3m-tab-selectedw3m-tab-selected736,26471
(defface w3m-tab-selected-retrievingw3m-tab-selected-retrieving748,26874
(defface w3m-tab-backgroundw3m-tab-background761,27340
(defface w3m-tab-selected-backgroundw3m-tab-selected-background771,27695
(defface w3m-tab-mousew3m-tab-mouse782,28083
(defvar w3m-modeline-spinner-map nilw3m-modeline-spinner-map791,28401
(defvar w3m-spinner-map-help-echo "mouse-2 kills the current process"w3m-spinner-map-help-echo794,28489
(defun w3m-setup-header-line ()w3m-setup-header-line797,28621
(defun w3m-tab-drag-mouse-function (event buffer)w3m-tab-drag-mouse-function855,30489
(defun w3m-tab-click-mouse-function (event buffer)w3m-tab-click-mouse-function876,31122
(defun w3m-tab-double-click-mouse1-function (event buffer)w3m-tab-double-click-mouse1-function882,31322
(defun w3m-tab-double-click-mouse2-function (event buffer)w3m-tab-double-click-mouse2-function891,31620
(defvar w3m-tab-line-format nilw3m-tab-line-format897,31834
(defvar w3m-tab-timer nilw3m-tab-timer902,32027
(defcustom w3m-tab-track-mouse tw3m-tab-track-mouse909,32322
(defcustom w3m-tab-mouse-position-adjuster '(0.5 . -4)w3m-tab-mouse-position-adjuster920,32733
(defun w3m-tab-mouse-track-selected-tab (event orderw3m-tab-mouse-track-selected-tab938,33514
(defun w3m-tab-next-buffer (&optional n event)w3m-tab-next-buffer999,35718
(defun w3m-tab-previous-buffer (&optional n event)w3m-tab-previous-buffer1015,36315
(defun w3m-tab-move-right (&optional n event)w3m-tab-move-right1021,36548
(defun w3m-tab-move-left (&optional n event)w3m-tab-move-left1042,37354
(defvar w3m-tab-map nil)w3m-tab-map1048,37598
(defvar w3m-tab-spinner-map nil)w3m-tab-spinner-map1051,37666
(defun w3m-tab-make-keymap ()w3m-tab-make-keymap1054,37750
(defvar w3m-tab-half-spacew3m-tab-half-space1117,41397
(defvar w3m-tab-separator-map nil)w3m-tab-separator-map1121,41503
(defvar w3m-tab-separatorw3m-tab-separator1135,42175
(defun w3m-tab-line ()w3m-tab-line1144,42444
(defcustom w3m-space-before-modeline-icon ""w3m-space-before-modeline-icon1277,46336
(defvar w3m-spinner-image-file nilw3m-spinner-image-file1284,46588
(defvar w3m-spinner-image-frames 3w3m-spinner-image-frames1287,46683
(defvar w3m-spinner-image-index 0w3m-spinner-image-index1290,46775
(defvar w3m-modeline-process-status-on-icon nil)w3m-modeline-process-status-on-icon1295,46985
(defvar w3m-modeline-image-status-on-icon nil)w3m-modeline-image-status-on-icon1296,47034
(defvar w3m-modeline-status-off-icon nil)w3m-modeline-status-off-icon1297,47081
(defvar w3m-modeline-ssl-image-status-on-icon nil)w3m-modeline-ssl-image-status-on-icon1298,47123
(defvar w3m-modeline-ssl-status-off-icon nil)w3m-modeline-ssl-status-off-icon1299,47174
(defun w3m-initialize-graphic-icons (&optional force)w3m-initialize-graphic-icons1301,47221
(defun w3m-make-spinner-image ()w3m-make-spinner-image1387,50371
(defun w3m-decode-coding-string-with-priority (str coding)w3m-decode-coding-string-with-priority1403,50987
(defun w3m-form-coding-system-accept-region-p (&optional from to coding-system)w3m-form-coding-system-accept-region-p1420,51519

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-fb.el,961
(defconst w3m-fb-version "1.0.0"w3m-fb-version34,1117
(defvar w3m-fb-delete-frame-functionsw3m-fb-delete-frame-functions53,1608
(defvar w3m-fb-list-buffers-frame nilw3m-fb-list-buffers-frame63,1895
(defgroup w3m-fb nilw3m-fb70,2108
(defcustom w3m-fb-delete-frame-kill-buffers tw3m-fb-delete-frame-kill-buffers74,2184
(defvar w3m-fb-buffer-list nilw3m-fb-buffer-list89,2605
(defvar w3m-fb-inhibit-buffer-selection nilw3m-fb-inhibit-buffer-selection92,2698
(defun w3m-fb-delete-frame-buffers (&optional frame)w3m-fb-delete-frame-buffers97,2823
(defun w3m-fb-set-frame-parameter (frame parameter value)w3m-fb-set-frame-parameter112,3373
(defun w3m-fb-add ()w3m-fb-add116,3551
(defun w3m-fb-remove ()w3m-fb-remove122,3785
(defun w3m-fb-associate ()w3m-fb-associate132,4111
(defun w3m-fb-dissociate ()w3m-fb-dissociate155,4970
(defun w3m-fb-select-buffer ()w3m-fb-select-buffer160,5136
(define-minor-mode w3m-fb-modew3m-fb-mode180,5794

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-proc.el,4362
(defvar w3m-process-inhibit-quit tw3m-process-inhibit-quit68,2399
(defvar w3m-process-timeout 300w3m-process-timeout70,2511
(defvar w3m-process-kill-surely (featurep 'meadow)w3m-process-kill-surely72,2612
(defconst w3m-process-max 5 "The maximum limit of the working processes.")w3m-process-max75,2706
(defvar w3m-process-queue nil "Queue of processes.")w3m-process-queue76,2781
(defvar w3m-process-exit-status nil "The last exit status of a process.")w3m-process-exit-status78,2835
(defvar w3m-process-authinfo-alist nil)w3m-process-authinfo-alist79,2909
(defvar w3m-process-accept-alist nil)w3m-process-accept-alist80,2949
(defvar w3m-process-user nil)w3m-process-user82,2988
(defvar w3m-process-passwd nil)w3m-process-passwd83,3018
(defvar w3m-process-realm nil)w3m-process-realm84,3050
(defvar w3m-process-object nil)w3m-process-object85,3081
(defvar w3m-process-modeline-string nilw3m-process-modeline-string91,3307
(defvar w3m-process-proxy-user nil "User name of the proxy server.")w3m-process-proxy-user95,3465
(defvar w3m-process-proxy-passwd nil "Password of the proxy server.")w3m-process-proxy-passwd96,3534
(defvar w3m-process-ssl-passphrase nilw3m-process-ssl-passphrase97,3604
(defmacro w3m-process-with-coding-system (&rest body)w3m-process-with-coding-system100,3688
(defmacro w3m-process-with-environment (alist &rest body)w3m-process-with-environment111,4178
(defun w3m-process-p (object)w3m-process-p139,5440
(defmacro w3m-process-new (command arguments buffer &optional process handlers)w3m-process-new146,5708
(defmacro w3m-process-command (object)w3m-process-command154,5933
(defmacro w3m-process-arguments (object)w3m-process-arguments156,5996
(defmacro w3m-process-buffer (object)w3m-process-buffer158,6061
(defmacro w3m-process-process (object)w3m-process-process160,6126
(defmacro w3m-process-handlers (object)w3m-process-handlers162,6192
(defmacro w3m-process-handler-new (buffer parent-buffer functions)w3m-process-handler-new166,6327
(defmacro w3m-process-handler-buffer (handler)w3m-process-handler-buffer168,6445
(defmacro w3m-process-handler-parent-buffer (handler)w3m-process-handler-parent-buffer170,6514
(defmacro w3m-process-handler-functions (handler)w3m-process-handler-functions172,6590
(defmacro w3m-process-handler-result (handler)w3m-process-handler-result174,6662
(defun w3m-process-push (handler command arguments)w3m-process-push177,6732
(defun w3m-process-kill-process (process)w3m-process-kill-process190,7305
(defun w3m-process-start-process (object &optional no-sentinel)w3m-process-start-process201,7685
(defun w3m-process-kill-stray-processes ()w3m-process-kill-stray-processes233,9088
(defun w3m-process-start-queued-processes ()w3m-process-start-queued-processes241,9399
(defun w3m-process-stop (buffer)w3m-process-stop253,9853
(defun w3m-process-shutdown ()w3m-process-shutdown303,11421
(defmacro w3m-process-with-null-handler (&rest body)w3m-process-with-null-handler314,11803
(defun w3m-process-error-handler (error-data process)w3m-process-error-handler330,12418
(defvar w3m-process-waited nilw3m-process-waited335,12638
(defun w3m-process-wait-process (process seconds)w3m-process-wait-process338,12746
(defmacro w3m-process-with-wait-handler (&rest body)w3m-process-with-wait-handler358,13505
(defmacro w3m-process-do (spec &rest body)w3m-process-do430,16755
(defmacro w3m-process-do-with-temp-buffer (spec &rest body)w3m-process-do-with-temp-buffer456,17846
(defun w3m-process-start (handler command arguments)w3m-process-start500,19395
(defun w3m-process-start-after (exit-status)w3m-process-start-after511,19843
(defvar w3m-process-background nilw3m-process-background525,20262
(defun w3m-process-sentinel (process event &optional ignore-queue)w3m-process-sentinel528,20359
(defun w3m-process-filter (process string)w3m-process-filter584,22472
(defun w3m-process-modeline-format (str)w3m-process-modeline-format684,26282
(defun w3m-process-set-authinfo (url realm username password)w3m-process-set-authinfo700,26895
(defun w3m-process-read-user (url &optional realm ignore-history)w3m-process-read-user716,27623
(defun w3m-process-read-passwd (url &optional realm username ignore-history)w3m-process-read-passwd737,28307
(defun w3m-process-y-or-n-p (url prompt)w3m-process-y-or-n-p759,29021

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-autoloads.el,49
(defvar w3m-fb-mode nil "\w3m-fb-mode338,11290

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-image.el,1015
(defcustom w3m-imagick-convert-program (if noninteractivew3m-imagick-convert-program60,1728
(defcustom w3m-imagick-identify-program (if noninteractivew3m-imagick-identify-program74,2144
(defcustom w3m-resize-images (and w3m-imagick-convert-program t)w3m-resize-images89,2595
(defun w3m-imagick-convert-program-available-p ()w3m-imagick-convert-program-available-p98,2918
(defun w3m-imagick-convert-buffer (from-type to-type &rest args)w3m-imagick-convert-buffer134,4168
(defun w3m-imagick-convert-data (data from-type to-type &rest args)w3m-imagick-convert-data171,5292
(defun w3m-imagick-start-convert-data (handlerw3m-imagick-start-convert-data180,5584
(defun w3m-imagick-start-convert-buffer (handler from-type to-type &rest args)w3m-imagick-start-convert-buffer192,5980
(defun w3m-resize-image (data width height handler)w3m-resize-image225,6976
(defun w3m-resize-image-by-rate (data rate handler)w3m-resize-image-by-rate238,7387
(defun w3m-favicon-usable-p ()w3m-favicon-usable-p250,7815

/home/malk/.emacs.d/elpa/w3m-20121225.147/mew-w3m.el,1307
(defgroup mew-w3m nilmew-w3m87,2955
(defcustom mew-use-w3m-minor-mode nilmew-use-w3m-minor-mode91,3046
(defcustom mew-w3m-auto-insert-image nilmew-w3m-auto-insert-image99,3325
(defcustom mew-w3m-cid-retrieve-hook nilmew-w3m-cid-retrieve-hook105,3550
(defcustom mew-w3m-region-cite-mark "&gt;&nbsp;"mew-w3m-region-cite-mark110,3659
(defconst mew-w3m-safe-url-regexp "\\`cid:")mew-w3m-safe-url-regexp117,3902
(defmacro mew-w3m-add-text-properties (props)mew-w3m-add-text-properties129,4299
(defun mew-w3m-minor-mode-setter ()mew-w3m-minor-mode-setter134,4432
(defvar mew-w3m-use-safe-url-regexp t)mew-w3m-use-safe-url-regexp140,4630
(defun mew-w3m-view-inline-image (&optional allimage)mew-w3m-view-inline-image142,4670
(defun mew-w3m-region (start end &optional url charset)mew-w3m-region164,5580
(defun mew-mime-text/html-w3m (&rest args)mew-mime-text/html-w3m216,7471
(defvar w3m-mew-support-cid (and (boundp 'mew-version-number)w3m-mew-support-cid290,10269
(defun mew-w3m-cid-retrieve (url &rest args)mew-w3m-cid-retrieve293,10378
(defun mew-w3m-ext-url-show (dummy url)mew-w3m-ext-url-show322,11507
(defun mew-w3m-ext-url-fetch (dummy url)mew-w3m-ext-url-fetch326,11600
(defun w3m-mail-compose-with-mew (source url charset content-typew3m-mail-compose-with-mew339,11956

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-perldoc.el,599
(defgroup w3m-perldoc nilw3m-perldoc37,1209
(defcustom w3m-perldoc-command "perldoc"w3m-perldoc-command42,1313
(defcustom w3m-perldoc-pod2html-command "pod2html"w3m-perldoc-pod2html-command47,1449
(defcustom w3m-perldoc-pod2html-argumentsw3m-perldoc-pod2html-arguments52,1596
(defcustom w3m-perldoc-input-coding-systemw3m-perldoc-input-coding-system66,2039
(defcustom w3m-perldoc-output-coding-systemw3m-perldoc-output-coding-system76,2328
(defun w3m-about-perldoc (url &optional no-decode no-cache &rest args)w3m-about-perldoc83,2522
(defun w3m-perldoc (docname)w3m-perldoc117,3981

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-bookmark.el,3263
(defcustom w3m-bookmark-filew3m-bookmark-file42,1332
(defcustom w3m-bookmark-file-coding-system 'euc-japanw3m-bookmark-file-coding-system48,1486
(defcustom w3m-bookmark-default-sectionw3m-bookmark-default-section58,1936
(defcustom w3m-bookmark-mode-hook nilw3m-bookmark-mode-hook65,2142
(defcustom w3m-bookmark-menu-open-new-session nilw3m-bookmark-menu-open-new-session70,2268
(defconst w3m-bookmark-initial-formatw3m-bookmark-initial-format87,2745
(defvar w3m-bookmark-section-history nil)w3m-bookmark-section-history94,2963
(defvar w3m-bookmark-title-history nil)w3m-bookmark-title-history95,3005
(defvar w3m-bookmark-buffer-file-name nilw3m-bookmark-buffer-file-name97,3046
(defvar w3m-bookmark-mode-mapw3m-bookmark-mode-map101,3225
(defvar w3m-bookmark-mode nil "Non-nil if w3m bookmark mode is enabled.")w3m-bookmark-mode112,3616
(defun w3m-bookmark-mode (&optional arg)w3m-bookmark-mode119,3989
(defun w3m-bookmark-mode-setter (url)w3m-bookmark-mode-setter134,4450
(defun w3m-bookmark-file-modtime ()w3m-bookmark-file-modtime144,4795
(defun w3m-bookmark-buffer (&optional no-verify-modtime)w3m-bookmark-buffer150,5050
(defun w3m-bookmark-verify-modtime ()w3m-bookmark-verify-modtime184,6435
(defun w3m-bookmark-sections ()w3m-bookmark-sections199,6940
(defun w3m-bookmark-save-buffer ()w3m-bookmark-save-buffer214,7365
(defun w3m-bookmark-safe-string (string format)w3m-bookmark-safe-string237,8212
(defun w3m-bookmark-write-file (url title section)w3m-bookmark-write-file253,8740
(defun w3m-bookmark-add (url &optional title)w3m-bookmark-add282,9886
(defun w3m-bookmark-add-this-url ()w3m-bookmark-add-this-url306,10763
(defun w3m-bookmark-add-current-url (&optional arg)w3m-bookmark-add-current-url320,11211
(defun w3m-bookmark-add-all-urls ()w3m-bookmark-add-all-urls329,11516
(defun w3m-bookmark-add-current-url-group ()w3m-bookmark-add-current-url-group346,12019
(defun w3m-bookmark-view (&optional reload)w3m-bookmark-view360,12394
(defun w3m-bookmark-view-new-session (&optional reload)w3m-bookmark-view-new-session371,12732
(defun w3m-about-bookmark (&rest args)w3m-about-bookmark381,13121
(defun w3m-bookmark-current-number ()w3m-bookmark-current-number396,13631
(defun w3m-bookmark-kill-entry (num)w3m-bookmark-kill-entry403,13919
(defun w3m-bookmark-kill-entries (entries)w3m-bookmark-kill-entries417,14374
(defun w3m-bookmark-undo (&optional arg)w3m-bookmark-undo435,14933
(defun w3m-bookmark-edit ()w3m-bookmark-edit446,15238
(defvar w3m-bookmark-menu-itemsw3m-bookmark-menu-items452,15394
(defun w3m-setup-bookmark-menu ()w3m-setup-bookmark-menu482,16833
(defun w3m-bookmark-menubar-update ()w3m-bookmark-menubar-update495,17448
(defun w3m-bookmark-iterator ()w3m-bookmark-iterator515,18221
(defun w3m-bookmark-menu-open-item (url)w3m-bookmark-menu-open-item542,19138
(defvar w3m-bookmark-menu-items-pre nil)w3m-bookmark-menu-items-pre548,19318
(defvar w3m-bookmark-menu-items-time nil)w3m-bookmark-menu-items-time549,19359
(defvar w3m-bookmark-make-item-xmasw3m-bookmark-make-item-xmas551,19402
(defun w3m-bookmark-make-item (item)w3m-bookmark-make-item554,19499
(defun w3m-bookmark-make-menu-items (&optional nomenu)w3m-bookmark-make-menu-items559,19608

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-hist.el,2513
(defcustom w3m-history-reuse-history-elements nilw3m-history-reuse-history-elements39,1412
(defcustom w3m-history-minimize-in-new-session nilw3m-history-minimize-in-new-session62,2475
(defvar w3m-history nilw3m-history69,2782
(defvar w3m-history-flat nilw3m-history-flat164,7366
(defsubst w3m-history-assoc (url)w3m-history-assoc189,8461
(defun w3m-history-set-current (position)w3m-history-set-current194,8634
(defun w3m-history-element (position &optional flat)w3m-history-element201,8962
(defun w3m-history-previous-position (position)w3m-history-previous-position224,9846
(defun w3m-history-next-position (position)w3m-history-next-position243,10598
(defun w3m-history-set-plist (plist property value)w3m-history-set-plist267,11554
(defun w3m-history-modify-properties (old new &optional replace)w3m-history-modify-properties287,12306
(defun w3m-history-seek-element (url &optional newprops replace)w3m-history-seek-element308,13088
(defun w3m-history-previous-link-available-p ()w3m-history-previous-link-available-p329,13878
(defun w3m-history-next-link-available-p ()w3m-history-next-link-available-p333,14014
(defun w3m-history-backward (&optional count)w3m-history-backward337,14144
(defun w3m-history-forward (&optional count)w3m-history-forward367,15215
(defun w3m-history-regenerate-pointers (position)w3m-history-regenerate-pointers376,15672
(defun w3m-history-flat ()w3m-history-flat384,16027
(defun w3m-history-tree (&optional newpos)w3m-history-tree420,17283
(defun w3m-history-push (url &optional newprops replace)w3m-history-push453,18505
(defun w3m-history-copy (buffer)w3m-history-copy521,21403
(defun w3m-history-plist-get (keyword &optional not-buffer-local)w3m-history-plist-get562,23067
(defun w3m-history-add-properties (newprops &optional not-buffer-local)w3m-history-add-properties575,23652
(defun w3m-history-plist-put (keyword value &optional not-buffer-local)w3m-history-plist-put604,24798
(defun w3m-history-remove-properties (properties &optional not-buffer-local)w3m-history-remove-properties611,25195
(defun w3m-history-store-position ()w3m-history-store-position623,25792
(defun w3m-history-restore-position ()w3m-history-restore-position656,27204
(defun w3m-history-minimize ()w3m-history-minimize680,28117
(defun w3m-history-slimmed-history-flat ()w3m-history-slimmed-history-flat692,28536
(defun w3m-history-slim ()w3m-history-slim712,29220
(defun w3m-history-add-arrived-db ()w3m-history-add-arrived-db725,29615

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-xmas.el,3520
(defalias 'w3m-find-coding-systemw3m-find-coding-system91,2744
(defmacro w3m-detect-coding-with-priority (from to priority-list)w3m-detect-coding-with-priority144,4659
(defun w3m-detect-coding-region (start end &optional priority-list)w3m-detect-coding-region153,4923
(defun w3m-decode-coding-string-with-priority (str coding)w3m-decode-coding-string-with-priority169,5561
(defalias 'w3m-display-graphic-p 'device-on-window-system-p)w3m-display-graphic-p247,8340
(defun w3m-display-inline-images-p ()w3m-display-inline-images-p249,8402
(defvar w3m-should-unoptimize-animated-gifs tw3m-should-unoptimize-animated-gifs254,8586
(defvar w3m-should-convert-interlaced-gifs tw3m-should-convert-interlaced-gifs257,8709
(defvar w3m-gifsicle-program (when (exec-installed-p "gifsicle")w3m-gifsicle-program263,8974
(defvar w3m-cache-fixed-gif-images nilw3m-cache-fixed-gif-images268,9194
(defvar w3m-cache-fixed-gif-images-max-length 32w3m-cache-fixed-gif-images-max-length276,9594
(defvar w3m-animated-gif-maximum-size 1048579w3m-animated-gif-maximum-size279,9710
(defun w3m-fix-gif (url data no-cache)w3m-fix-gif285,10030
(defun w3m-make-glyph (data type)w3m-make-glyph388,13966
(defun w3m-create-image (url &optional no-cache referer size handler)w3m-create-image406,14668
(defun w3m-create-resized-image (url rate &optional referer size handler)w3m-create-resized-image466,16725
(defun w3m-insert-image (beg end image &rest args)w3m-insert-image495,17778
(defun w3m-remove-image (beg end)w3m-remove-image522,18728
(defun w3m-image-type-available-p (image-type)w3m-image-type-available-p529,18928
(defalias 'w3m-image-animate 'identity)w3m-image-animate534,19114
(defcustom w3m-use-toolbar (and (featurep 'toolbar) t)w3m-use-toolbar537,19168
(defcustom w3m-toolbar-icon-preferred-image-types '(xpm)w3m-toolbar-icon-preferred-image-types542,19294
(defcustom w3m-toolbar-use-single-image-per-icon nilw3m-toolbar-use-single-image-per-icon553,19714
(defun w3m-find-image (name &optional directory)w3m-find-image566,20182
(defun w3m-toolbar-make-buttons (buttons &optional force)w3m-toolbar-make-buttons597,21444
(defun w3m-setup-toolbar (&optional force buffer)w3m-setup-toolbar617,22206
(defun w3m-update-toolbar ()w3m-update-toolbar626,22496
(defun w3m-menu-on-forefront (arg &optional curbuf)w3m-menu-on-forefront636,22789
(defun w3m-setup-menu ()w3m-setup-menu662,23912
(defun w3m-define-missing-widgets ()w3m-define-missing-widgets676,24365
(defvar w3m-header-line-map (make-sparse-keymap))w3m-header-line-map728,26211
(define-key w3m-header-line-map 'button2 'w3m-goto-url)w3m-header-line-map729,26261
(defcustom w3m-show-current-title-in-buffer-tabw3m-show-current-title-in-buffer-tab732,26330
(defcustom w3m-space-before-modeline-icon ""w3m-space-before-modeline-icon823,29727
(defvar w3m-modeline-process-status-on-icon nil)w3m-modeline-process-status-on-icon831,30027
(defvar w3m-modeline-image-status-on-icon nil)w3m-modeline-image-status-on-icon832,30076
(defvar w3m-modeline-status-off-icon nil)w3m-modeline-status-off-icon833,30123
(defvar w3m-modeline-ssl-image-status-on-icon nil)w3m-modeline-ssl-image-status-on-icon834,30165
(defvar w3m-modeline-ssl-status-off-icon nil)w3m-modeline-ssl-status-off-icon835,30216
(defun w3m-initialize-graphic-icons (&optional force)w3m-initialize-graphic-icons837,30263
(defun w3m-form-coding-system-accept-region-p (&optional from to coding-system)w3m-form-coding-system-accept-region-p1000,36228

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-weather.el,1094
(defconst w3m-weather-completion-tablew3m-weather-completion-table49,1502
(defcustom w3m-weather-default-areaw3m-weather-default-area323,14588
(defcustom w3m-weather-filter-functionsw3m-weather-filter-functions334,14865
(defvar w3m-weather-input-history nil)w3m-weather-input-history343,15106
(defun w3m-weather-input-area ()w3m-weather-input-area345,15146
(defun w3m-weather-area-completion (partial predicate flag)w3m-weather-area-completion362,15650
(defun w3m-weather (area)w3m-weather405,17168
(defun w3m-about-weather (url no-decode no-cache post-data referer handler)w3m-about-weather414,17401
(defun w3m-weather-run-filter-functions (functions area url no-cache handler)w3m-weather-run-filter-functions429,17974
(defun w3m-weather-extract-contents (&rest args)w3m-weather-extract-contents441,18355
(defun w3m-weather-adjust-contents (&rest args)w3m-weather-adjust-contents450,18745
(defun w3m-weather-insert-title (area url &rest args)w3m-weather-insert-title478,19775
(defun w3m-weather-expand-anchors (area url &rest args)w3m-weather-expand-anchors490,20070

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-session.el,3880
(defcustom w3m-session-filew3m-session-file50,1656
(defcustom w3m-session-autosave tw3m-session-autosave56,1812
(defcustom w3m-session-deleted-save tw3m-session-deleted-save61,1932
(defcustom w3m-session-crash-recovery tw3m-session-crash-recovery66,2045
(defcustom w3m-session-time-formatw3m-session-time-format71,2216
(defcustom w3m-session-automatic-titlew3m-session-automatic-title80,2469
(defcustom w3m-session-deleted-titlew3m-session-deleted-title88,2695
(defcustom w3m-session-crash-recovery-titlew3m-session-crash-recovery-title96,2922
(defcustom w3m-session-deleted-keep-number 5w3m-session-deleted-keep-number104,3172
(defcustom w3m-session-automatic-keep-number 5w3m-session-automatic-keep-number109,3310
(defcustom w3m-session-unknown-title "<Unknown Title>"w3m-session-unknown-title114,3444
(defcustom w3m-session-load-last-sessions nilw3m-session-load-last-sessions119,3598
(defcustom w3m-session-load-crashed-sessions 'askw3m-session-load-crashed-sessions126,3928
(defface w3m-session-selectw3m-session-select133,4274
(defface w3m-session-selectedw3m-session-selected148,4746
(defun w3m-session-history-to-save ()w3m-session-history-to-save163,5335
(defmacro w3m-session-ignore-errors (&rest forms)w3m-session-ignore-errors178,5809
(defun w3m-session-save ()w3m-session-save199,6501
(defun w3m-session-automatic-save ()w3m-session-automatic-save251,8227
(defun w3m-session-deleted-save (buffers)w3m-session-deleted-save299,9829
(defun w3m-session-crash-recovery-save ()w3m-session-crash-recovery-save341,11318
(defun w3m-session-crash-recovery-remove ()w3m-session-crash-recovery-remove368,12216
(defvar w3m-session-select-mode-map nil)w3m-session-select-mode-map378,12593
(defvar w3m-session-select-wincfg nil)w3m-session-select-wincfg404,13800
(defvar w3m-session-select-sessions nil)w3m-session-select-sessions405,13839
(defun w3m-session-select-mode (&optional sessions)w3m-session-select-mode409,13995
(defun w3m-session-select-list-all-sessions ()w3m-session-select-list-all-sessions435,14995
(defun w3m-session-select-list-session-group (arg)w3m-session-select-list-session-group492,16708
(defun w3m-session-select-next (&optional arg)w3m-session-select-next538,18091
(defun w3m-session-select-previous (&optional arg)w3m-session-select-previous567,19016
(defun w3m-session-select-quit ()w3m-session-select-quit572,19164
(defun w3m-session-select-select ()w3m-session-select-select581,19430
(defun w3m-session-select-open-session-group ()w3m-session-select-open-session-group601,19967
(defun w3m-session-select-save ()w3m-session-select-save618,20477
(defun w3m-session-select-rename ()w3m-session-select-rename626,20672
(defun w3m-session-select-delete ()w3m-session-select-delete637,20977
(defun w3m-session-select ()w3m-session-select650,21347
(defun w3m-session-goto-session (session)w3m-session-goto-session682,22513
(defun w3m-session-rename (sessions num)w3m-session-rename711,23431
(defun w3m-session-delete (sessions num)w3m-session-delete744,24454
(defvar w3m-session-menu-itemsw3m-session-menu-items761,24969
(defun w3m-setup-session-menu ()w3m-setup-session-menu790,26173
(defvar w3m-session-menu-items-pre nil)w3m-session-menu-items-pre803,26776
(defvar w3m-session-menu-items-time nil)w3m-session-menu-items-time804,26816
(defun w3m-session-menubar-update ()w3m-session-menubar-update806,26858
(defun w3m-session-file-modtime ()w3m-session-file-modtime824,27551
(defvar w3m-session-make-item-xmasw3m-session-make-item-xmas830,27801
(defun w3m-session-make-item (item)w3m-session-make-item833,27897
(defun w3m-session-make-menu-items ()w3m-session-make-menu-items838,28004
(defun w3m-session-last-autosave-session ()w3m-session-last-autosave-session874,29010
(defun w3m-session-last-crashed-session ()w3m-session-last-crashed-session896,29656

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-search.el,977
(defcustom w3m-search-engine-alistw3m-search-engine-alist42,1411
(defcustom w3m-search-default-engine "google"w3m-search-default-engine251,8868
(defcustom w3m-search-word-at-point tw3m-search-word-at-point257,9032
(defvar w3m-search-engine-history nilw3m-search-engine-history264,9267
(defvar w3m-search-thing-at-point-arg 'wordw3m-search-thing-at-point-arg267,9380
(defun w3m-search-escape-query-string (str &optional coding)w3m-search-escape-query-string270,9492
(defun w3m-search-read-query (prompt prompt-with-default &optional history)w3m-search-read-query275,9650
(defun w3m-search-read-variables ()w3m-search-read-variables300,10635
(defun w3m-search-do-search (w3m-goto-function search-engine query)w3m-search-do-search323,11476
(defun w3m-search (search-engine query)w3m-search340,12089
(defun w3m-search-new-session (search-engine query)w3m-search-new-session351,12554
(defun w3m-search-uri-replace (uri engine)w3m-search-uri-replace357,12797

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-rss.el,216
(defun w3m-rss-parse-date-string (date)w3m-rss-parse-date-string58,1733
(defun w3m-rss-find-el (tag data)w3m-rss-find-el132,4390
(defun w3m-rss-get-namespace-prefix (el uri)w3m-rss-get-namespace-prefix151,4866

/home/malk/.emacs.d/elpa/w3m-20121225.147/octet.el,2074
(defvar octet-temp-directory temporary-file-directoryoctet-temp-directory76,2223
(defvar octet-html-render-function 'octet-w3m-regionoctet-html-render-function79,2321
(defvar octet-suffix-type-alistoctet-suffix-type-alist82,2411
(defvar octet-content-type-alistoctet-content-type-alist101,2803
(defvar octet-magic-type-alistoctet-magic-type-alist117,3321
(defvar octet-type-filter-alistoctet-type-filter-alist136,4039
(defvar octet-find-file-hook nil)octet-find-file-hook160,5238
(defvar octet-attachments nil)octet-attachments162,5273
(defun octet-render-html (&rest args)octet-render-html165,5353
(defun octet-decode-text (&rest args)octet-decode-text169,5460
(defun w3m-about-octet-attachments (url &optional no-decode no-cachew3m-about-octet-attachments177,5670
(defun octet-w3m-region (beg end)octet-w3m-region191,6241
(defun octet-decode-u8-text (&rest args)octet-decode-u8-text230,7290
(defun octet-filter-call2 (filter &optional args)octet-filter-call2237,7470
(defun octet-filter-call2-extra (filter &optional args)octet-filter-call2-extra265,8432
(defun octet-filter-call1 (filter &optional args)octet-filter-call1306,9825
(defun octet-filter-guess (&rest args)octet-filter-guess327,10549
(defun octet-tar-mode (&rest args)octet-tar-mode332,10642
(defun octet-guess-type-from-name (name)octet-guess-type-from-name336,10723
(defun octet-guess-type-from-content-type (content-type)octet-guess-type-from-content-type341,10896
(defun octet-guess-type-from-magic ()octet-guess-type-from-magic351,11169
(defun octet-filter-buffer (type)octet-filter-buffer366,11586
(defun octet-buffer (&optional name content-type)octet-buffer375,11878
(defun octet-find-file (file)octet-find-file413,13165
(defvar mime-preview-octet-hook nil)mime-preview-octet-hook431,13585
(defvar mime-view-octet-hook nil)mime-view-octet-hook432,13622
(defun mime-preview-octet (entity situation)mime-preview-octet435,13672
(defun mime-view-octet (entity situation)mime-view-octet455,14283
(defun octet-mime-setup ()octet-mime-setup497,15644

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-tabmenu.el,1072
(defun w3m-setup-tab-menu ()w3m-setup-tab-menu43,1337
(defun w3m-switch-buffer ()w3m-switch-buffer57,1911
(defun w3m-tab-menubar-open-item (buf)w3m-tab-menubar-open-item89,2962
(defun w3m-tab-menubar-update ()w3m-tab-menubar-update95,3110
(defvar w3m-tab-menubar-items-sub-coeff 30) ;; 30?w3m-tab-menubar-items-sub-coeff110,3679
(defvar w3m-tab-menubar-items-width 50) ;; 50?w3m-tab-menubar-items-width111,3730
(defun w3m-tab-menubar-make-items-1 (buffers &optional nomenu)w3m-tab-menubar-make-items-1113,3778
(defvar w3m-tab-menubar-make-items-precbuf nil)w3m-tab-menubar-make-items-precbuf143,4572
(defvar w3m-tab-menubar-make-items-prebuflst nil)w3m-tab-menubar-make-items-prebuflst144,4620
(defvar w3m-tab-menubar-make-items-preurl nil)w3m-tab-menubar-make-items-preurl145,4670
(defvar w3m-tab-menubar-make-items-preitems nil)w3m-tab-menubar-make-items-preitems146,4717
(defun w3m-tab-menubar-force-update (&rest args)w3m-tab-menubar-force-update148,4767
(defun w3m-tab-menubar-make-items (&optional nomenu)w3m-tab-menubar-make-items154,4959

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-ccl.el,150
(define-ccl-program w3m-euc-japan-decoderw3m-euc-japan-decoder153,4858
(define-ccl-program w3m-iso-latin-1-decoderw3m-iso-latin-1-decoder181,5635

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-cookie.el,2922
(defvar w3m-cookies nilw3m-cookies47,1410
(defconst w3m-cookie-two-dot-domains-regexpw3m-cookie-two-dot-domains-regexp51,1516
(defcustom w3m-cookie-accept-domains nilw3m-cookie-accept-domains59,1808
(defcustom w3m-cookie-reject-domains nilw3m-cookie-reject-domains64,1970
(defcustom w3m-cookie-accept-bad-cookies nilw3m-cookie-accept-bad-cookies69,2134
(defcustom w3m-cookie-save-cookies tw3m-cookie-save-cookies79,2469
(defcustom w3m-cookie-filew3m-cookie-file84,2610
(defmacro w3m-cookie-url (cookie)w3m-cookie-url91,2787
(defmacro w3m-cookie-domain (cookie)w3m-cookie-domain93,2842
(defmacro w3m-cookie-secure (cookie)w3m-cookie-secure95,2900
(defmacro w3m-cookie-name (cookie)w3m-cookie-name97,2958
(defmacro w3m-cookie-value (cookie)w3m-cookie-value99,3014
(defmacro w3m-cookie-path (cookie)w3m-cookie-path101,3071
(defmacro w3m-cookie-version (cookie)w3m-cookie-version103,3127
(defmacro w3m-cookie-expires (cookie)w3m-cookie-expires105,3186
(defmacro w3m-cookie-ignore (cookie)w3m-cookie-ignore107,3245
(defun w3m-cookie-create (&rest args)w3m-cookie-create110,3304
(defun w3m-cookie-store (cookie)w3m-cookie-store123,3971
(defun w3m-cookie-remove (domain path name)w3m-cookie-remove141,4478
(defun w3m-cookie-retrieve (host path &optional secure)w3m-cookie-retrieve152,4777
(defun w3m-parse-http-url (url)w3m-parse-http-url182,5688
(defsubst w3m-http-url-secure (http-url)w3m-http-url-secure198,6217
(defsubst w3m-http-url-host (http-url)w3m-http-url-host202,6313
(defsubst w3m-http-url-port (http-url)w3m-http-url-port206,6405
(defsubst w3m-http-url-path (http-url)w3m-http-url-path210,6499
(defvar w3m-cookie-parse-args-syntax-tablew3m-cookie-parse-args-syntax-table215,6605
(defun w3m-cookie-parse-args (str &optional nodowncase)w3m-cookie-parse-args224,7008
(defun w3m-cookie-trusted-host-p (host)w3m-cookie-trusted-host-p266,8280
(defun w3m-cookie-1-acceptable-p (host domain)w3m-cookie-1-acceptable-p307,9526
(defun w3m-cookie-1-set (url &rest args)w3m-cookie-1-set330,10298
(defun w3m-cookie-2-acceptable-p (http-url domain)w3m-cookie-2-acceptable-p379,12197
(defun w3m-cookie-2-set (url &rest args)w3m-cookie-2-set402,13195
(defvar w3m-cookie-init nil)w3m-cookie-init409,13321
(defun w3m-cookie-clear ()w3m-cookie-clear411,13351
(defun w3m-cookie-save (&optional domain)w3m-cookie-save415,13428
(defun w3m-cookie-save-current-site-cookies ()w3m-cookie-save-current-site-cookies430,13914
(defun w3m-cookie-load ()w3m-cookie-load438,14204
(defun w3m-cookie-setup ()w3m-cookie-setup444,14336
(defun w3m-cookie-shutdown ()w3m-cookie-shutdown452,14537
(defun w3m-cookie-set (url beg end)w3m-cookie-set463,14855
(defun w3m-cookie-get (url)w3m-cookie-get486,15493
(defun w3m-cookie (&optional no-cache)w3m-cookie508,16265
(defun w3m-about-cookie (url &optional no-decode no-cache post-data &rest args)w3m-about-cookie514,16436

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m.el,40176
(defconst emacs-w3m-versionemacs-w3m-version211,8369
(defgroup w3m nilw3m219,8641
(defgroup w3m-face nilw3m-face223,8725
(defcustom w3m-command nilw3m-command228,8811
(defcustom w3m-display-ins-del 'autow3m-display-ins-del243,9554
(defvar w3m-type nilw3m-type251,9819
(defvar w3m-compile-options nilw3m-compile-options254,9928
(defvar w3m-version nilw3m-version256,10018
(defcustom w3m-user-agent (concat "Emacs-w3m/" emacs-w3m-versionw3m-user-agent300,11489
(defcustom w3m-add-user-agent tw3m-add-user-agent306,11693
(defcustom w3m-languagew3m-language312,11882
(defcustom w3m-command-argumentsw3m-command-arguments331,12604
(defcustom w3m-command-arguments-alist nilw3m-command-arguments-alist338,12876
(defcustom w3m-no-proxy-domains nilw3m-no-proxy-domains363,14017
(defcustom w3m-command-environmentw3m-command-environment370,14321
(defcustom w3m-fill-column -1w3m-fill-column384,14728
(defcustom w3m-mailto-url-function nilw3m-mailto-url-function393,15146
(defcustom w3m-mailto-url-popup-function-alistw3m-mailto-url-popup-function-alist402,15501
(defcustom w3m-use-mule-ucsw3m-use-mule-ucs421,16360
(defcustom w3m-use-ange-ftp nilw3m-use-ange-ftp433,16666
(defcustom w3m-doc-view-content-typesw3m-doc-view-content-types438,16806
(defcustom w3m-imitate-widget-button '(eq major-mode 'gnus-article-mode)w3m-imitate-widget-button450,17218
(defcustom w3m-treat-image-size tw3m-treat-image-size457,17536
(defcustom w3m-pixels-per-line 64w3m-pixels-per-line471,18095
(defcustom w3m-pixels-per-character nilw3m-pixels-per-character482,18589
(defcustom w3m-image-default-background nilw3m-image-default-background492,19048
(defvar w3m-accept-japanese-charactersw3m-accept-japanese-characters504,19550
(defcustom w3m-coding-system (if (featurep 'mule)w3m-coding-system533,20661
(defcustom w3m-terminal-coding-systemw3m-terminal-coding-system542,20934
(defcustom w3m-output-coding-systemw3m-output-coding-system553,21367
(defcustom w3m-input-coding-systemw3m-input-coding-system570,21891
(defcustom w3m-file-coding-system (if (featurep 'mule)w3m-file-coding-system591,22525
(defvar w3m-file-coding-system-for-read nilw3m-file-coding-system-for-read599,22797
(defcustom w3m-file-name-coding-systemw3m-file-name-coding-system605,23060
(defcustom w3m-default-coding-systemw3m-default-coding-system612,23301
(defcustom w3m-coding-system-priority-listw3m-coding-system-priority-list618,23518
(defcustom w3m-url-coding-system-alistw3m-url-coding-system-alist624,23760
(defcustom w3m-key-binding nilw3m-key-binding657,25116
(defcustom w3m-use-cygdrive (eq system-type 'windows-nt)w3m-use-cygdrive697,26474
(defcustom w3m-profile-directoryw3m-profile-directory706,26788
(defcustom w3m-init-file "~/.emacs-w3m"w3m-init-file713,27023
(defcustom w3m-default-save-directoryw3m-default-save-directory724,27488
(defcustom w3m-default-directory nilw3m-default-directory731,27719
(defcustom w3m-accept-languagesw3m-accept-languages752,28577
(defcustom w3m-delete-duplicated-empty-lines tw3m-delete-duplicated-empty-lines769,29282
(defvar w3m-display-inline-images nilw3m-display-inline-images774,29437
(defcustom w3m-default-display-inline-images nilw3m-default-display-inline-images784,29940
(defcustom w3m-toggle-inline-images-permanently tw3m-toggle-inline-images-permanently792,30239
(defcustom w3m-icon-directoryw3m-icon-directory804,30831
(defcustom w3m-broken-proxy-cache nilw3m-broken-proxy-cache847,32140
(defcustom w3m-quick-start tw3m-quick-start857,32628
(defcustom w3m-home-pagew3m-home-page866,33041
(defcustom w3m-arrived-filew3m-arrived-file885,33704
(defcustom w3m-keep-arrived-urls 500w3m-keep-arrived-urls891,33883
(defcustom w3m-prefer-cache nilw3m-prefer-cache896,34030
(defcustom w3m-keep-cache-size 300w3m-keep-cache-size901,34170
(defcustom w3m-follow-redirection 9w3m-follow-redirection906,34304
(defcustom w3m-redirect-with-get tw3m-redirect-with-get915,34718
(defcustom w3m-resize-image-scale 50w3m-resize-image-scale928,35246
(defface w3m-anchorw3m-anchor933,35385
(defface w3m-arrived-anchorw3m-arrived-anchor942,35690
(defface w3m-current-anchorw3m-current-anchor951,36054
(defface w3m-imagew3m-image958,36277
(defface w3m-image-anchorw3m-image-anchor967,36611
(defface w3m-history-current-urlw3m-history-current-url976,36989
(defface w3m-bold '((t (:bold t)))w3m-bold1003,38210
(defface w3m-italic '((((type tty)) (:underline t))w3m-italic1009,38381
(defface w3m-underline '((t (:underline t)))w3m-underline1017,38663
(defface w3m-strike-throughw3m-strike-through1023,38860
(defface w3m-insertw3m-insert1034,39172
(defcustom w3m-mode-hook nilw3m-mode-hook1045,39495
(defcustom w3m-fontify-before-hook nilw3m-fontify-before-hook1051,39652
(defcustom w3m-fontify-after-hook nilw3m-fontify-after-hook1057,39833
(defcustom w3m-display-hookw3m-display-hook1063,40005
(defcustom w3m-after-cursor-move-hookw3m-after-cursor-move-hook1073,40350
(defcustom w3m-delete-buffer-hookw3m-delete-buffer-hook1085,40723
(defcustom w3m-select-buffer-hook nilw3m-select-buffer-hook1092,40912
(defcustom w3m-async-exec tw3m-async-exec1097,41041
(defcustom w3m-process-connection-typew3m-process-connection-type1108,41495
(defcustom w3m-async-exec-with-many-urlsw3m-async-exec-with-many-urls1119,41929
(defcustom w3m-default-content-type "text/html"w3m-default-content-type1130,42460
(defvar w3m-image-viewerw3m-image-viewer1135,42613
(defcustom w3m-content-type-alistw3m-content-type-alist1146,43093
(defcustom w3m-encoding-type-alistw3m-encoding-type-alist1274,48538
(defcustom w3m-decoder-alistw3m-decoder-alist1284,48855
(defcustom w3m-charset-coding-system-alistw3m-charset-coding-system-alist1310,49713
(defcustom w3m-correct-charset-alistw3m-correct-charset-alist1354,51052
(defcustom w3m-horizontal-scroll-columns 10w3m-horizontal-scroll-columns1378,51859
(defcustom w3m-horizontal-shift-columns 2w3m-horizontal-shift-columns1383,52021
(defcustom w3m-view-recenter 1w3m-view-recenter1389,52230
(defcustom w3m-use-form tw3m-use-form1404,52844
(defcustom w3m-submit-form-safety-check nilw3m-submit-form-safety-check1410,52999
(defcustom w3m-use-cookies nilw3m-use-cookies1415,53143
(defcustom w3m-use-filter nilw3m-use-filter1420,53275
(defcustom w3m-use-symbolw3m-use-symbol1427,53462
(defcustom w3m-edit-function 'find-filew3m-edit-function1443,53950
(defcustom w3m-edit-function-alistw3m-edit-function-alist1456,54497
(defcustom w3m-url-local-directory-alistw3m-url-local-directory-alist1468,55000
(defcustom w3m-track-mouse tw3m-track-mouse1486,55713
(defcustom w3m-use-title-buffer-name nilw3m-use-title-buffer-name1514,56525
(defcustom w3m-use-japanese-menuw3m-use-japanese-menu1519,56660
(defcustom w3m-menu-on-forefront nilw3m-menu-on-forefront1534,57174
(defcustom w3m-use-tab tw3m-use-tab1544,57467
(defcustom w3m-add-tab-number nilw3m-add-tab-number1552,57745
(defcustom w3m-use-tab-menubar tw3m-use-tab-menubar1557,57871
(defcustom w3m-new-session-url "about:blank"w3m-new-session-url1567,58304
(defcustom w3m-make-new-session nilw3m-make-new-session1580,58812
(defcustom w3m-use-favicon tw3m-use-favicon1590,59243
(defcustom w3m-show-graphic-icons-in-mode-line tw3m-show-graphic-icons-in-mode-line1605,59714
(defcustom w3m-show-graphic-icons-in-header-line tw3m-show-graphic-icons-in-header-line1620,60233
(defcustom w3m-pop-up-windows tw3m-pop-up-windows1628,60543
(defcustom w3m-pop-up-frames nilw3m-pop-up-frames1638,61007
(defcustom w3m-view-this-url-new-session-in-background nilw3m-view-this-url-new-session-in-background1647,61409
(defcustom w3m-new-session-in-backgroundw3m-new-session-in-background1652,61516
(defcustom w3m-popup-frame-parameters nilw3m-popup-frame-parameters1659,61766
(defcustom w3m-auto-show tw3m-auto-show1676,62465
(defcustom w3m-horizontal-scroll-division 4w3m-horizontal-scroll-division1688,62945
(defcustom w3m-show-error-information tw3m-show-error-information1711,63901
(defcustom w3m-use-refresh tw3m-use-refresh1718,64118
(defcustom w3m-mbconv-command "mbconv"w3m-mbconv-command1725,64350
(defcustom w3m-local-find-file-regexpsw3m-local-find-file-regexps1732,64619
(defcustom w3m-local-find-file-functionw3m-local-find-file-function1782,66478
(defcustom w3m-local-directory-view-method 'w3m-cgiw3m-local-directory-view-method1797,67040
(defcustom w3m-dirlist-cgi-programw3m-dirlist-cgi-program1806,67436
(defcustom w3m-add-refererw3m-add-referer1827,68135
(defcustom w3m-touch-command (w3m-which-command "touch")w3m-touch-command1873,70108
(defcustom w3m-puny-utf-16bew3m-puny-utf-16be1880,70356
(defcustom w3m-uri-replace-alistw3m-uri-replace-alist1892,70709
(defcustom w3m-relationship-estimate-rulesw3m-relationship-estimate-rules1975,73881
(defcustom w3m-enable-google-feeling-lucky tw3m-enable-google-feeling-lucky2038,76581
(defconst w3m-entity-tablew3m-entity-table2044,76795
(defvar w3m-extra-numeric-character-referencew3m-extra-numeric-character-reference2180,82957
(defconst w3m-entity-reverse-tablew3m-entity-reverse-table2194,83657
(defconst w3m-entity-regexpw3m-entity-regexp2201,83891
(defconst w3m-encoding-alistw3m-encoding-alist2211,84233
(defconst w3m-emacs-w3m-icon "\w3m-emacs-w3m-icon2223,84662
(defcustom w3m-process-modeline-format " loaded: %s"w3m-process-modeline-format2252,86604
(defcustom w3m-ignored-image-url-regexp nilw3m-ignored-image-url-regexp2258,86860
(defcustom w3m-refresh-minimum-interval 60w3m-refresh-minimum-interval2268,87287
(defvar w3m-modeline-process-status-on "<PRC>"w3m-modeline-process-status-on2274,87469
(defvar w3m-modeline-image-status-on "[IMG]"w3m-modeline-image-status-on2278,87654
(defvar w3m-modeline-status-off "[ - ]"w3m-modeline-status-off2282,87838
(defvar w3m-modeline-ssl-image-status-on "[IMG(SSL)]"w3m-modeline-ssl-image-status-on2286,88004
(defvar w3m-modeline-ssl-status-off "[SSL]"w3m-modeline-ssl-status-off2290,88195
(defvar w3m-modeline-separator " / "w3m-modeline-separator2294,88371
(defvar w3m-modeline-favicon nilw3m-modeline-favicon2297,88476
(defvar w3m-favicon-image nilw3m-favicon-image2301,88599
(defvar w3m-current-process nilw3m-current-process2305,88702
(defvar w3m-refresh-timer nilw3m-refresh-timer2310,88903
(defvar w3m-mail-user-agents '(gnus-user-agentw3m-mail-user-agents2316,89157
(defvar w3m-current-base-url nilw3m-current-base-url2324,89386
(defvar w3m-current-forms nilw3m-current-forms2326,89493
(defvar w3m-current-coding-system nilw3m-current-coding-system2328,89595
(defvar w3m-current-content-charset nilw3m-current-content-charset2330,89701
(defvar w3m-icon-data nilw3m-icon-data2332,89815
(defvar w3m-next-url nilw3m-next-url2335,89972
(defvar w3m-previous-url nilw3m-previous-url2337,90059
(defvar w3m-start-url nilw3m-start-url2339,90154
(defvar w3m-contents-url nilw3m-contents-url2341,90243
(defvar w3m-max-anchor-sequence nilw3m-max-anchor-sequence2343,90328
(defvar w3m-current-refresh nilw3m-current-refresh2345,90428
(defvar w3m-current-ssl nilw3m-current-ssl2347,90537
(defvar w3m-name-anchor-from-hist nilw3m-name-anchor-from-hist2349,90632
(defun w3m-clear-local-variables ()w3m-clear-local-variables2368,91479
(defun w3m-copy-local-variables (from-buffer)w3m-copy-local-variables2384,91865
(defvar w3m-verbose nilw3m-verbose2414,92764
(defvar w3m-safe-url-regexp nilw3m-safe-url-regexp2419,92952
(defvar w3m-current-buffer nil)w3m-current-buffer2432,93600
(defvar w3m-cache-buffer nil)w3m-cache-buffer2433,93632
(defvar w3m-cache-articles nil)w3m-cache-articles2434,93662
(defvar w3m-cache-hashtb nil)w3m-cache-hashtb2435,93694
(defvar w3m-input-url-history nil)w3m-input-url-history2436,93724
(defvar w3m-http-status-alistw3m-http-status-alist2438,93760
(defvar w3m-http-status nil)w3m-http-status2463,94510
(defconst w3m-arrived-db-size 1023)w3m-arrived-db-size2465,94540
(defvar w3m-arrived-db nilw3m-arrived-db2466,94576
(defvar w3m-arrived-setup-functions nilw3m-arrived-setup-functions2474,94965
(defvar w3m-arrived-shutdown-functions nilw3m-arrived-shutdown-functions2476,95073
(defconst w3m-image-type-alistw3m-image-type-alist2479,95181
(defconst w3m-toolbar-buttonsw3m-toolbar-buttons2488,95443
(defconst w3m-toolbarw3m-toolbar2493,95652
(defconst w3m-menubarw3m-menubar2547,98249
(defvar w3m-rmouse-menubarw3m-rmouse-menubar2656,103526
(defvar w3m-cid-retrieve-function-alist nil)w3m-cid-retrieve-function-alist2676,104435
(defvar w3m-force-redisplay t)w3m-force-redisplay2677,104480
(defvar w3m-work-buffer-list nil)w3m-work-buffer-list2679,104512
(defconst w3m-work-buffer-name " *w3m-work*")w3m-work-buffer-name2680,104546
(defconst w3m-select-buffer-name " *w3m buffers*")w3m-select-buffer-name2681,104592
(defconst w3m-dump-head-source-command-argumentsw3m-dump-head-source-command-arguments2683,104644
(defvar w3m-halfdump-command nilw3m-halfdump-command2695,104985
(defconst w3m-halfdump-command-argumentsw3m-halfdump-command-arguments2699,105136
(defconst w3m-halfdump-command-common-argumentsw3m-halfdump-command-common-arguments2739,106345
(defconst w3m-arrived-ignored-regexpw3m-arrived-ignored-regexp2751,106835
(defconst w3m-history-ignored-regexpw3m-history-ignored-regexp2757,107081
(defvar w3m-mode-map nil "Keymap for emacs-w3m buffers.")w3m-mode-map2763,107313
(defvar w3m-link-map nil "Keymap used on links.")w3m-link-map2764,107371
(defvar w3m-doc-view-map nilw3m-doc-view-map2765,107421
(defvar w3m-mode-setup-functions nilw3m-mode-setup-functions2769,107562
(defvar w3m-display-functions nilw3m-display-functions2771,107656
(defvar w3m-load-hook nilw3m-load-hook2776,107886
(defun w3m-url-to-file-name (url)w3m-url-to-file-name2783,108089
(defun w3m-expand-file-name-as-url (file &optional directory)w3m-expand-file-name-as-url2840,110327
(defmacro w3m-arrived-intern (url &optional soft)w3m-arrived-intern2855,110890
(defun w3m-arrived-add (url &optional title modification-timew3m-arrived-add2873,111465
(defun w3m-arrived-p (url)w3m-arrived-p2894,112285
(defun w3m-arrived-time (url)w3m-arrived-time2899,112449
(defsetf w3m-arrived-time (url) (value)w3m-arrived-time2904,112647
(defun w3m-arrived-put (url property value)w3m-arrived-put2907,112733
(defun w3m-arrived-get (url property)w3m-arrived-get2914,113027
(defsetf w3m-arrived-get w3m-arrived-put)w3m-arrived-get2920,113274
(defmacro w3m-arrived-title (url)w3m-arrived-title2922,113317
(defmacro w3m-arrived-last-modified (url)w3m-arrived-last-modified2926,113458
(defmacro w3m-arrived-content-charset (url)w3m-arrived-content-charset2931,113668
(defmacro w3m-arrived-content-type (url)w3m-arrived-content-type2937,113911
(defun w3m-arrived-load-list ()w3m-arrived-load-list2943,114145
(defun w3m-arrived-setup ()w3m-arrived-setup2969,115227
(defun w3m-arrived-shutdown ()w3m-arrived-shutdown2991,116082
(defun w3m-attributes (url &optional no-cache handler)w3m-attributes3042,117894
(defmacro w3m-content-type (url &optional no-cache handler)w3m-content-type3092,119626
(defmacro w3m-content-charset (url &optional no-cache handler)w3m-content-charset3099,119868
(defmacro w3m-content-length (url &optional no-cache handler)w3m-content-length3106,120117
(defmacro w3m-content-encoding (url &optional no-cache handler)w3m-content-encoding3113,120365
(defmacro w3m-last-modified (url &optional no-cache handler)w3m-last-modified3120,120615
(defmacro w3m-real-url (url &optional no-cache handler)w3m-real-url3127,120862
(defmacro w3m-make-help-echo (property)w3m-make-help-echo3135,121105
(defmacro w3m-make-balloon-help (property)w3m-make-balloon-help3156,121984
(defvar w3m-current-message nilw3m-current-message3180,122906
(defvar w3m-message-silent nilw3m-message-silent3182,123009
(defun w3m-message (&rest args)w3m-message3185,123092
(defun w3m-time-parse-string (string)w3m-time-parse-string3214,124376
(defun w3m-sub-list (list n)w3m-sub-list3235,125139
(defun w3m-load-list (file &optional coding-system)w3m-load-list3250,125663
(defun w3m-save-list (file list &optional coding-system escape-ctl-chars)w3m-save-list3277,126682
(defun w3m-url-coding-system (url)w3m-url-coding-system3325,128211
(defun w3m-url-encode-string (str &optional coding encode-space)w3m-url-encode-string3343,128749
(defun w3m-url-encode-string-2 (str)w3m-url-encode-string-23360,129240
(defun w3m-url-decode-string (str &optional coding regexp)w3m-url-decode-string3364,129416
(defun w3m-url-readable-string (url)w3m-url-readable-string3379,129976
(defun w3m-url-transfer-encode-string (url &optional coding)w3m-url-transfer-encode-string3387,130243
(defun w3m-entity-value (name)w3m-entity-value3414,131299
(defun w3m-fontify-bold ()w3m-fontify-bold3426,131834
(defun w3m-fontify-italic ()w3m-fontify-italic3436,132237
(defun w3m-fontify-underline ()w3m-fontify-underline3446,132646
(defun w3m-fontify-strike-through ()w3m-fontify-strike-through3456,133064
(defun w3m-fontify-insert ()w3m-fontify-insert3477,133864
(defun w3m-decode-anchor-string (str)w3m-decode-anchor-string3494,134564
(defun w3m-image-type (content-type)w3m-image-type3512,135403
(defun w3m-imitate-widget-button ()w3m-imitate-widget-button3516,135552
(defun w3m-fontify-anchors ()w3m-fontify-anchors3524,135820
(defun w3m-fontify-images ()w3m-fontify-images3652,140652
(defvar w3m-idle-images-show-timer nil)w3m-idle-images-show-timer3711,142790
(defvar w3m-idle-images-show-list nil)w3m-idle-images-show-list3712,142830
(defvar w3m-idle-images-show-interval 1)w3m-idle-images-show-interval3713,142869
(defun w3m-idle-images-show ()w3m-idle-images-show3715,142911
(defun w3m-idle-images-show-unqueue (buffer)w3m-idle-images-show-unqueue3798,145678
(defvar w3m-image-no-idle-timer nil)w3m-image-no-idle-timer3814,146188
(defun w3m-toggle-inline-images-internal (statusw3m-toggle-inline-images-internal3815,146225
(defun w3m-toggle-inline-image (&optional force no-cache)w3m-toggle-inline-image3956,151190
(defun w3m-turnoff-inline-images ()w3m-turnoff-inline-images4011,153045
(defun w3m-toggle-inline-images (&optional force no-cache)w3m-toggle-inline-images4016,153204
(defun w3m-resize-inline-image-internal (url rate)w3m-resize-inline-image-internal4079,155404
(defun w3m-resize-image-interactive (image &optional rate changed-rate)w3m-resize-image-interactive4147,157793
(defun w3m-zoom-in-image (&optional rate)w3m-zoom-in-image4195,159478
(defun w3m-zoom-out-image (&optional rate)w3m-zoom-out-image4212,160120
(defun w3m-decode-entities (&optional keep-properties)w3m-decode-entities4229,160761
(defun w3m-decode-entities-string (str)w3m-decode-entities-string4257,161923
(defun w3m-encode-specials-string (str)w3m-encode-specials-string4275,162586
(defun w3m-fontify ()w3m-fontify4291,163032
(defun w3m-refontify-anchor (&optional buff)w3m-refontify-anchor4359,165666
(defun w3m-url-completion (url predicate flag)w3m-url-completion4383,166622
(defun w3m-gmane-url-at-point ()w3m-gmane-url-at-point4422,167845
(defun w3m-shr-url-at-point ()w3m-shr-url-at-point4461,169318
(defun w3m-header-line-url ()w3m-header-line-url4465,169441
(defun w3m-active-region-or-url-at-point (&optional default=current)w3m-active-region-or-url-at-point4537,172012
(defun w3m-canonicalize-url (url &optional feeling-lucky)w3m-canonicalize-url4573,173392
(defun w3m-input-url (&optional prompt initial default quick-startw3m-input-url4593,174226
(defun w3m-cache-setup ()w3m-cache-setup4675,176801
(defun w3m-cache-shutdown ()w3m-cache-shutdown4686,177207
(defun w3m-cache-header-delete-variable-part (header)w3m-cache-header-delete-variable-part4693,177439
(defun w3m-cache-header (url header &optional overwrite)w3m-cache-header4703,177796
(defun w3m-cache-request-header (url)w3m-cache-request-header4721,178447
(defun w3m-cache-remove-oldest ()w3m-cache-remove-oldest4728,178698
(defun w3m-cache-remove (url)w3m-cache-remove4742,179187
(defun w3m-cache-contents (url buffer)w3m-cache-contents4759,179846
(defun w3m-cache-request-contents (url &optional buffer)w3m-cache-request-contents4783,180755
(defun w3m-cache-available-p (url)w3m-cache-available-p4808,181834
(defun w3m-read-file-name (&optional prompt dir default existing)w3m-read-file-name4854,183567
(defun w3m-charset-to-coding-system (charset)w3m-charset-to-coding-system4871,184253
(defun w3m-coding-system-to-charset (coding-system)w3m-coding-system-to-charset4880,184645
(defun w3m-read-content-charset (prompt &optional default)w3m-read-content-charset4896,185288
(defun w3m-decode-encoded-contents (encoding)w3m-decode-encoded-contents4914,185886
(defmacro w3m-correct-charset (charset)w3m-correct-charset4929,186541
(defun w3m-detect-meta-charset ()w3m-detect-meta-charset4934,186706
(defun w3m-detect-xml-charset ()w3m-detect-xml-charset4946,187140
(defvar w3m-compatible-encoding-alistw3m-compatible-encoding-alist4955,187409
(defvar w3m-view-source-decode-level 0w3m-view-source-decode-level4965,187817
(defun w3m-decode-buffer (url &optional content-charset content-type)w3m-decode-buffer4969,187980
(defun w3m-x-moe-decode-buffer ()w3m-x-moe-decode-buffer5026,190109
(defun w3m-safe-decode-buffer (url &optional content-charset content-type)w3m-safe-decode-buffer5043,190733
(defun w3m-local-file-type (url)w3m-local-file-type5050,191013
(defmacro w3m-local-content-type (url)w3m-local-content-type5071,191801
(defun w3m-local-attributes (url &rest args)w3m-local-attributes5074,191878
(defun w3m-local-retrieve (url &optional no-uncompress &rest args)w3m-local-retrieve5097,192540
(defun w3m-local-dirlist-cgi (url)w3m-local-dirlist-cgi5114,193184
(defun w3m-remove-redundant-spaces (str)w3m-remove-redundant-spaces5191,196000
(defun w3m-w3m-parse-header (url header)w3m-w3m-parse-header5200,196306
(defun w3m-w3m-dump-head (url handler)w3m-w3m-dump-head5293,199672
(defun w3m-w3m-canonicalize-url (url)w3m-w3m-canonicalize-url5312,200297
(defun w3m-w3m-attributes (url no-cache handler)w3m-w3m-attributes5322,200725
(defun w3m-w3m-attributes-1 (url no-cache counter handler)w3m-w3m-attributes-15340,201260
(defun w3m-w3m-expand-arguments (arguments)w3m-w3m-expand-arguments5361,201980
(defun w3m-w3m-dump-extra (url handler)w3m-w3m-dump-extra5377,202334
(defun w3m-additional-command-arguments (url)w3m-additional-command-arguments5414,203649
(defun w3m-add-referer-p (url referer)w3m-add-referer-p5441,204579
(defun w3m-request-arguments (method url temp-filew3m-request-arguments5464,205401
(defun w3m-header-arguments (method url temp-filew3m-header-arguments5508,207094
(defun w3m-w3m-retrieve (url no-uncompress no-cache post-data referer handler)w3m-w3m-retrieve5543,208450
(defun w3m-w3m-retrieve-1 (url post-data referer no-cache counter handler)w3m-w3m-retrieve-15576,209684
(defun w3m-about-retrieve (url &optional no-uncompress no-cachew3m-about-retrieve5653,212193
(defun w3m-cid-retrieve (url &optional no-uncompress no-cache)w3m-cid-retrieve5704,214001
(defun w3m-data-retrieve (url &optional no-uncompress no-cache)w3m-data-retrieve5726,215105
(defun w3m-retrieve (url &optional no-uncompress no-cachew3m-retrieve5766,216448
(defvar w3m-touch-file-available-p 'undecided)w3m-touch-file-available-p5812,218420
(defun w3m-download (&optional url filename no-cache handler post-data)w3m-download5866,220440
(defun w3m-remove-comments ()w3m-remove-comments5932,222713
(defun w3m-remove-invisible-image-alt ()w3m-remove-invisible-image-alt5941,222983
(defun w3m-check-header-tags ()w3m-check-header-tags5959,223600
(defun w3m-check-refresh-attribute ()w3m-check-refresh-attribute5987,224629
(defun w3m-remove-meta-charset-tags ()w3m-remove-meta-charset-tags6019,225845
(defun w3m-fix-illegal-blocks ()w3m-fix-illegal-blocks6033,226328
(defun w3m-rendering-extract-title ()w3m-rendering-extract-title6055,227185
(defun w3m-set-display-ins-del ()w3m-set-display-ins-del6070,227754
(defun w3m-rendering-half-dump (charset)w3m-rendering-half-dump6094,228699
(defun w3m-rendering-buffer (&optional charset)w3m-rendering-buffer6136,230218
(defcustom w3m-confirm-leaving-secure-page tw3m-confirm-leaving-secure-page6150,230693
(defun w3m-retrieve-and-render (url &optional no-cache charsetw3m-retrieve-and-render6160,231136
(defun w3m-show-error-information (url charset page-buffer)w3m-show-error-information6242,234420
(defun w3m-show-redirection-error-information (url page-buffer)w3m-show-redirection-error-information6304,236620
(defun w3m-prepare-content (url type charset)w3m-prepare-content6314,237105
(defun w3m-detect-xml-type (url type charset)w3m-detect-xml-type6330,237722
(defun w3m-create-text-page (url type charset page-buffer)w3m-create-text-page6344,238156
(defsubst w3m-image-page-displayed-p ()w3m-image-page-displayed-p6371,239131
(defun w3m-create-image-page (url type charset page-buffer)w3m-create-image-page6377,239376
(defun w3m-create-page (url type charset page-buffer)w3m-create-page6395,240037
(defun w3m-relationship-estimate (url)w3m-relationship-estimate6477,242736
(defun w3m-relationship-simple-estimate (url regexp &optional next previousw3m-relationship-simple-estimate6486,243016
(defun w3m-relationship-magicpoint-estimate (url)w3m-relationship-magicpoint-estimate6493,243327
(defun w3m-relationship-oddmuse-estimate (url)w3m-relationship-oddmuse-estimate6511,244034
(defun w3m-relationship-slashdot-estimate (url)w3m-relationship-slashdot-estimate6519,244383
(defun w3m-relationship-alc-estimate (url)w3m-relationship-alc-estimate6543,245392
(defun w3m-relationship-search-patterns (url next previousw3m-relationship-search-patterns6572,246475
(defun w3m-search-name-anchor (name &optional quiet no-record)w3m-search-name-anchor6608,247628
(defun w3m-parent-page-available-p ()w3m-parent-page-available-p6642,248733
(defun w3m-view-parent-page (&optional count)w3m-view-parent-page6648,248895
(defun w3m-view-previous-page (&optional count)w3m-view-previous-page6692,250563
(defun w3m-view-next-page (&optional count)w3m-view-next-page6741,252386
(defun w3m-expand-path-name (file base)w3m-expand-path-name6749,252742
(defconst w3m-url-hierarchical-schemesw3m-url-hierarchical-schemes6776,253623
(defconst w3m-buffer-local-url "buffer://")w3m-buffer-local-url6782,253881
(defun w3m-buffer-local-url-p (url)w3m-buffer-local-url-p6783,253925
(defun w3m-expand-url (url &optional base)w3m-expand-url6787,254040
(defun w3m-display-progress-message (url)w3m-display-progress-message6876,257310
(defun w3m-view-this-url-1 (url reload new-session)w3m-view-this-url-16888,257766
(defun w3m-view-this-url (&optional arg new-session)w3m-view-this-url6946,259974
(defun w3m-mouse-view-this-url (event &optional arg)w3m-mouse-view-this-url6984,261374
(defun w3m-open-all-links-in-new-session (start end &optional arg)w3m-open-all-links-in-new-session6990,261549
(defun w3m-view-this-url-new-session ()w3m-view-this-url-new-session7029,262785
(defun w3m-mouse-view-this-url-new-session (event)w3m-mouse-view-this-url-new-session7038,263113
(defun w3m-submit-form (&optional new-session)w3m-submit-form7044,263302
(defun w3m-external-view (url &optional no-cache handler)w3m-external-view7059,263758
(defun w3m-external-view-file (command file url arguments)w3m-external-view-file7107,265395
(defun w3m-view-image ()w3m-view-image7140,266482
(defun w3m-save-image ()w3m-save-image7150,266783
(defun w3m-external-view-this-url ()w3m-external-view-this-url7159,267042
(defun w3m-external-view-current-url ()w3m-external-view-current-url7167,267298
(defun w3m-view-url-with-external-browser (&optional url)w3m-view-url-with-external-browser7174,267522
(defun w3m-download-this-url ()w3m-download-this-url7189,268101
(defun w3m-download-this-image ()w3m-download-this-image7212,268807
(defun w3m-print-current-url ()w3m-print-current-url7235,269465
(defvar message-truncate-lines)message-truncate-lines7243,269774
(defun w3m-print-this-url (&optional interactive-p)w3m-print-this-url7245,269807
(defun w3m-print-this-image-url (&optional interactive-p)w3m-print-this-image-url7290,271337
(defmacro w3m-delete-all-overlays ()w3m-delete-all-overlays7310,272007
(defun w3m-highlight-current-anchor-1 (seq)w3m-highlight-current-anchor-17316,272223
(defun w3m-highlight-current-anchor ()w3m-highlight-current-anchor7337,272965
(defun w3m-edit-url (url)w3m-edit-url7361,273743
(defun w3m-edit-current-url ()w3m-edit-current-url7375,274244
(defun w3m-edit-this-url ()w3m-edit-this-url7382,274408
(defvar w3m-goto-anchor-hist nil)w3m-goto-anchor-hist7390,274629
(defun w3m-goto-next-anchor ()w3m-goto-next-anchor7393,274715
(defun w3m-next-anchor (&optional arg)w3m-next-anchor7409,275244
(defun w3m-goto-previous-anchor ()w3m-goto-previous-anchor7437,276266
(defun w3m-previous-anchor (&optional arg)w3m-previous-anchor7459,276956
(defun w3m-goto-next-form ()w3m-goto-next-form7490,278050
(defun w3m-next-form (&optional arg)w3m-next-form7501,278388
(defun w3m-goto-previous-form ()w3m-goto-previous-form7526,279300
(defun w3m-previous-form (&optional arg)w3m-previous-form7539,279717
(defun w3m-goto-next-image ()w3m-goto-next-image7564,280623
(defun w3m-next-image (&optional arg)w3m-next-image7575,280968
(defun w3m-goto-previous-image ()w3m-goto-previous-image7602,281910
(defun w3m-previous-image (&optional arg)w3m-previous-image7614,282327
(defun w3m-copy-buffer (&optional buffer newname just-copy empty background)w3m-copy-buffer7640,283254
(defun w3m-next-buffer (arg)w3m-next-buffer7714,286164
(defun w3m-previous-buffer (arg)w3m-previous-buffer7730,286671
(defun w3m-delete-buffer (&optional force)w3m-delete-buffer7735,286802
(defun w3m-delete-buffer-if-empty (buffer)w3m-delete-buffer-if-empty7815,289616
(defun w3m-pack-buffer-numbers ()w3m-pack-buffer-numbers7832,290332
(defun w3m-delete-other-buffers (&optional buffer)w3m-delete-other-buffers7847,290884
(defun w3m-delete-left-tabs ()w3m-delete-left-tabs7856,291205
(defun w3m-delete-right-tabs ()w3m-delete-right-tabs7869,291549
(defun w3m-delete-buffers (buffers)w3m-delete-buffers7876,291741
(defvar w3m-ctl-c-map nilw3m-ctl-c-map7893,292231
(defvar w3m-redisplay-map nilw3m-redisplay-map7927,293761
(defvar w3m-lnum-map nilw3m-lnum-map7936,294112
(defvar w3m-lynx-like-map nilw3m-lynx-like-map7954,294877
(defvar w3m-info-like-map nilw3m-info-like-map8069,300161
(defun w3m-alive-p (&optional visible)w3m-alive-p8187,305637
(defun w3m-quit (&optional force)w3m-quit8206,306268
(defun w3m-close-window ()w3m-close-window8244,307651
(defun w3m-mouse-major-mode-menu (event)w3m-mouse-major-mode-menu8285,309023
(defvar w3m-tab-button-menu-current-buffer nilw3m-tab-button-menu-current-buffer8330,310372
(defvar w3m-tab-button-menu-commandsw3m-tab-button-menu-commands8333,310474
(defun w3m-link-menu (event)w3m-link-menu8454,315431
(defvar w3m-buffer-unseen nil)w3m-buffer-unseen8460,315561
(defun w3m-set-buffer-unseen (&optional url)w3m-set-buffer-unseen8463,315641
(defun w3m-set-buffer-seen ()w3m-set-buffer-seen8468,315817
(defun w3m-move-unseen-buffer ()w3m-move-unseen-buffer8472,315937
(defun w3m-mode ()w3m-mode8490,316443
(defun w3m-scroll-up-1 (&optional arg)w3m-scroll-up-18676,324667
(defun w3m-scroll-up-or-next-url (arg)w3m-scroll-up-or-next-url8693,325266
(defun w3m-scroll-down-or-previous-url (arg)w3m-scroll-down-or-previous-url8707,325718
(defvar w3m-current-longest-line nilw3m-current-longest-line8721,326194
(defun w3m-set-current-longest-line ()w3m-set-current-longest-line8724,326283
(defun w3m-scroll-left (arg)w3m-scroll-left8740,326845
(defun w3m-scroll-right (arg)w3m-scroll-right8755,327470
(defun w3m-shift-left (arg)w3m-shift-left8768,327969
(defun w3m-shift-right (arg)w3m-shift-right8783,328638
(defvar w3m-horizontal-scroll-done nil)w3m-horizontal-scroll-done8796,329181
(defvar w3m-current-position '(-1 0 0))w3m-current-position8798,329278
(defun w3m-auto-show ()w3m-auto-show8801,329370
(defun w3m-horizontal-scroll (direction ncol)w3m-horizontal-scroll8830,330476
(defun w3m-horizontal-on-screen ()w3m-horizontal-on-screen8850,331358
(defun w3m-horizontal-recenter (&optional arg)w3m-horizontal-recenter8873,332110
(defun w3m-recenter ()w3m-recenter8909,333217
(defun w3m-beginning-of-line (&optional arg)w3m-beginning-of-line8917,333504
(defun w3m-end-of-line (&optional arg)w3m-end-of-line8928,333860
(defun w3m-pattern-uri-replace (uri format)w3m-pattern-uri-replace8958,334813
(defun w3m-uri-replace (uri)w3m-uri-replace8962,334970
(defun w3m-goto-mailto-url (url &optional post-data)w3m-goto-mailto-url8980,335582
(defun w3m-convert-ftp-url-for-emacsen (url)w3m-convert-ftp-url-for-emacsen9047,337836
(defun w3m-file-directory-p (file)w3m-file-directory-p9058,338219
(defun w3m-goto-ftp-url (url &optional filename)w3m-goto-ftp-url9072,338625
(defun w3m-doc-view (url)w3m-doc-view9108,340028
(defun w3m-doc-view-quit (&optional kill)w3m-doc-view-quit9143,341193
(defun w3m-store-current-position ()w3m-store-current-position9161,341757
(defun w3m-check-current-position ()w3m-check-current-position9170,342155
(defun w3m-buffer-setup ()w3m-buffer-setup9181,342716
(defvar w3m-modeline-title-string nilw3m-modeline-title-string9229,344477
(defvar w3m-modeline-title-timer nilw3m-modeline-title-timer9234,344680
(defun w3m-modeline-title ()w3m-modeline-title9244,345078
(defun w3m-goto-url (url &optional reload charset post-data referer handlerw3m-goto-url9277,346130
(defun w3m-current-directory (url)w3m-current-directory9564,357492
(defun w3m-refresh-at-time ()w3m-refresh-at-time9603,358771
(defun w3m-goto-url-with-timer (url buffer)w3m-goto-url-with-timer9614,359129
(defun w3m-goto-new-session-url (&optional reload)w3m-goto-new-session-url9642,360016
(defun w3m-goto-url-new-session (url &optional reload charset post-dataw3m-goto-url-new-session9650,360318
(defun w3m-move-point-for-localcgi (url)w3m-move-point-for-localcgi9691,361702
(defun w3m-gohome ()w3m-gohome9700,362024
(defun w3m-create-empty-session ()w3m-create-empty-session9708,362250
(defun w3m-reload-this-page (&optional arg no-popup)w3m-reload-this-page9713,362402
(defun w3m-reload-all-pages (&optional arg)w3m-reload-all-pages9738,363300
(defun w3m-redisplay-this-page (&optional arg)w3m-redisplay-this-page9752,363746
(defun w3m-redisplay-and-reset (&optional arg)w3m-redisplay-and-reset9768,364325
(defun w3m-redisplay-with-charset (&optional arg)w3m-redisplay-with-charset9785,365033
(defun w3m-redisplay-with-content-type (&optional arg)w3m-redisplay-with-content-type9802,365755
(defun w3m-examine-command-line-args ()w3m-examine-command-line-args9819,366525
(defun w3m (&optional url new-session interactive-p)w3m9874,368545
(defun w3m-browse-url (url &optional new-session)w3m-browse-url9974,372417
(defun w3m-find-file (file)w3m-find-file9990,373018
(defun w3m-cygwin-path (path)w3m-cygwin-path10000,373381
(defun w3m-region (start end &optional url charset)w3m-region10008,373618
(defun w3m-buffer (&optional url charset)w3m-buffer10043,374850
(defun w3m-about (url &rest args)w3m-about10051,375139
(defun w3m-view-source (&optional arg)w3m-view-source10068,375597
(defun w3m-make-separator ()w3m-make-separator10094,376775
(defun w3m-about-header (url &optional no-uncompress no-cache &rest args)w3m-about-header10100,376976
(defun w3m-view-header ()w3m-view-header10172,379560
(defvar w3m-about-history-max-indentation '(/ (* (window-width) 2) 3)w3m-about-history-max-indentation10197,380436
(defvar w3m-about-history-indent-level 4w3m-about-history-indent-level10203,380728
(defun w3m-about-history (&rest args)w3m-about-history10207,380907
(defun w3m-about-db-history (url &rest args)w3m-about-db-history10291,383388
(defun w3m-history-highlight-current-url (url)w3m-history-highlight-current-url10381,386399
(defcustom w3m-db-history-display-sizew3m-db-history-display-size10415,387579
(defun w3m-db-history (&optional start size)w3m-db-history10422,387859
(defun w3m-history (&optional arg)w3m-history10431,388146
(defun w3m-w32-browser-with-fiber (url)w3m-w32-browser-with-fiber10439,388486
(defun w3m-pipe-source (&optional url command)w3m-pipe-source10449,388799
(defcustom w3m-select-buffer-horizontal-window tw3m-select-buffer-horizontal-window10495,390512
(defcustom w3m-select-buffer-window-ratio '(18 . 12)w3m-select-buffer-window-ratio10500,390670
(defvar w3m-select-buffer-window nil)w3m-select-buffer-window10508,391008
(defconst w3m-select-buffer-messagew3m-select-buffer-message10509,391046
(defun w3m-display-width ()w3m-display-width10514,391287
(defun w3m-select-buffer (&optional toggle nomsg)w3m-select-buffer10525,391670
(defun w3m-select-buffer-update (&rest args)w3m-select-buffer-update10558,393001
(defun w3m-select-buffer-generate-contents (current-buffer)w3m-select-buffer-generate-contents10565,393216
(defvar w3m-select-buffer-mode-map nil)w3m-select-buffer-mode-map10585,393874
(defun w3m-select-buffer-mode ()w3m-select-buffer-mode10629,396016
(defun w3m-select-buffer-recheck ()w3m-select-buffer-recheck10668,397394
(defmacro w3m-select-buffer-current-buffer ()w3m-select-buffer-current-buffer10677,397691
(defun w3m-select-buffer-show-this-line (&optional interactive-p)w3m-select-buffer-show-this-line10680,397796
(defun w3m-select-buffer-show-this-line-and-down ()w3m-select-buffer-show-this-line-and-down10710,398928
(defun w3m-select-buffer-next-line (&optional n)w3m-select-buffer-next-line10721,399346
(defun w3m-select-buffer-previous-line (&optional n)w3m-select-buffer-previous-line10732,399697
(defun w3m-select-buffer-copy-buffer ()w3m-select-buffer-copy-buffer10737,399881
(defun w3m-select-buffer-delete-buffer (&optional force)w3m-select-buffer-delete-buffer10749,400365
(defun w3m-select-buffer-delete-other-buffers ()w3m-select-buffer-delete-other-buffers10769,401191
(defun w3m-select-buffer-quit ()w3m-select-buffer-quit10775,401431
(defun w3m-select-buffer-show-this-line-and-switch ()w3m-select-buffer-show-this-line-and-switch10789,401870
(defun w3m-select-buffer-show-this-line-and-quit ()w3m-select-buffer-show-this-line-and-quit10795,402069
(defun w3m-select-buffer-close-window ()w3m-select-buffer-close-window10802,402352
(defun w3m-select-buffer-toggle-style()w3m-select-buffer-toggle-style10810,402631
(defun w3m-select-buffer-window-size ()w3m-select-buffer-window-size10815,402784
(defcustom w3m-use-header-line tw3m-use-header-line10824,403071
(defcustom w3m-use-header-line-title nilw3m-use-header-line-title10829,403181
(defface w3m-header-line-location-titlew3m-header-line-location-title10835,403378
(defface w3m-header-line-location-contentw3m-header-line-location-content10846,403817
(defvar w3m-header-line-map nil)w3m-header-line-map10857,404279
(defun w3m-header-line-insert ()w3m-header-line-insert10866,404603
(defcustom w3m-goto-article-function nilw3m-goto-article-function10912,406211
(defun w3m-safe-view-this-url (&optional force)w3m-safe-view-this-url10924,406796
(defun w3m-mouse-safe-view-this-url (event)w3m-mouse-safe-view-this-url10966,408505
(defconst w3m-minor-mode-command-alistw3m-minor-mode-command-alist10984,409195
(defun w3m-make-minor-mode-keymap ()w3m-make-minor-mode-keymap11001,409880
(defvar w3m-minor-mode-map (w3m-make-minor-mode-keymap)w3m-minor-mode-map11014,410359
(defcustom w3m-minor-mode-hook nilw3m-minor-mode-hook11017,410467
(defvar w3m-minor-mode nil "Non-nil if w3m minor mode is enabled.")w3m-minor-mode11022,410585
(defun w3m-minor-mode (&optional arg)w3m-minor-mode11029,410929
(defcustom w3m-do-cleanup-temp-files nilw3m-do-cleanup-temp-files11038,411185
(defun w3m-cleanup-temp-files ()w3m-cleanup-temp-files11043,411325
(defun w3m-show-form-hint ()w3m-show-form-hint11049,411561

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-mail.el,904
(defcustom w3m-mail-subject '("Emailing:" url)w3m-mail-subject43,1557
(defvar w3m-mail-user-agent-compose-function-alistw3m-mail-user-agent-compose-function-alist57,2065
(defun w3m-mail-make-subject ()w3m-mail-make-subject97,3610
(defun w3m-mail-compute-base-url ()w3m-mail-compute-base-url114,4117
(defun w3m-mail-embed-base-url (source base-url)w3m-mail-embed-base-url130,4708
(defun w3m-mail-goto-body-and-clear-body ()w3m-mail-goto-body-and-clear-body160,5735
(defun w3m-mail-position-point (bob)w3m-mail-position-point170,6057
(defun w3m-mail-compose-with-mml (source url charset content-typew3m-mail-compose-with-mml178,6380
(defun w3m-mail-compose-with-vm (source url charset content-typew3m-mail-compose-with-vm213,7634
(defun w3m-mail-compose-with-semi (source url charset content-typew3m-mail-compose-with-semi256,9251
(defun w3m-mail (&optional headers)w3m-mail336,11898

/home/malk/.emacs.d/elpa/w3m-20121225.147/bookmark-w3m.el,405
(defvar bookmark-make-record-function)bookmark-make-record-function47,1746
(defvar w3m-current-title)w3m-current-title48,1785
(defvar w3m-current-url)w3m-current-url49,1812
(defun bookmark-w3m-bookmark-make-record ()bookmark-w3m-bookmark-make-record60,2264
(defun bookmark-w3m-bookmark-jump (bookmark)bookmark-w3m-bookmark-jump72,2745
(defun bookmark-w3m-prepare ()bookmark-w3m-prepare81,3064

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3mhack.el,1283
(defvar w3mhack-nonunix-lispdir nilw3mhack-nonunix-lispdir61,2088
(defvar w3mhack-nonunix-icondir nilw3mhack-nonunix-icondir65,2257
(defvar w3mhack-nonunix-dryrun nilw3mhack-nonunix-dryrun69,2415
(defconst shimbun-module-directory "shimbun")shimbun-module-directory278,9820
(defvar w3mhack-load-file "w3m-load.el")w3mhack-load-file280,9867
(defun w3mhack-module-list ()w3mhack-module-list286,10087
(defun w3mhack-examine-modules ()w3mhack-examine-modules365,13005
(defun w3mhack-compile ()w3mhack-compile370,13168
(defun w3mhack-nonunix-install ()w3mhack-nonunix-install389,13698
(defun w3mhack-load-path ()w3mhack-load-path680,23983
(defun w3mhack-expand-file-name (name destdir)w3mhack-expand-file-name705,24852
(defun w3mhack-what-where ()w3mhack-what-where712,25087
(defun w3mhack-makeinfo ()w3mhack-makeinfo756,26542
(defun w3mhack-update-files-autoloads (files)w3mhack-update-files-autoloads898,31545
(defun w3mhack-generate-load-file ()w3mhack-generate-load-file924,32574
(defun w3mhack-generate-xemacs-load-file (file)w3mhack-generate-xemacs-load-file984,34652
(defun w3mhack-locate-library ()w3mhack-locate-library998,35104
(defun w3mhack-print-status ()w3mhack-print-status1002,35283
(defun w3mhack-version ()w3mhack-version1005,35331

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-ucs.el,243
(defun w3m-ucs-to-char (codepoint)w3m-ucs-to-char52,1660
(define-ccl-program w3m-euc-japan-mule-ucs-encoderw3m-euc-japan-mule-ucs-encoder72,2339
(define-ccl-program w3m-iso-latin-1-mule-ucs-encoderw3m-iso-latin-1-mule-ucs-encoder90,2953

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-bug.el,373
(defvar report-emacs-w3m-bug-address "emacs-w3m@namazu.org"report-emacs-w3m-bug-address33,1147
(defvar report-emacs-w3m-bug-no-explanations nilreport-emacs-w3m-bug-no-explanations36,1258
(defconst report-emacs-w3m-bug-system-informationsreport-emacs-w3m-bug-system-informations39,1388
(defun report-emacs-w3m-bug (topic &optional buffer)report-emacs-w3m-bug75,2493

/home/malk/.emacs.d/elpa/w3m-20121225.147/w3m-favicon.el,1445
(defcustom w3m-favicon-size nilw3m-favicon-size56,1745
(defconst w3m-favicon-name "favicon.ico"w3m-favicon-name66,2131
(defcustom w3m-favicon-use-cache-file nilw3m-favicon-use-cache-file71,2250
(defcustom w3m-favicon-cache-file nilw3m-favicon-cache-file76,2366
(defcustom w3m-favicon-cache-expire-wait (* 30 24 60 60)w3m-favicon-cache-expire-wait84,2659
(defcustom w3m-favicon-typew3m-favicon-type90,2878
(defcustom w3m-space-before-favicon " "w3m-space-before-favicon118,3702
(defcustom w3m-favicon-convert-args nilw3m-favicon-convert-args125,3950
(defcustom w3m-favicon-default-background nilw3m-favicon-default-background147,4778
(defvar w3m-favicon-type-alist '((pbm . ppm))w3m-favicon-type-alist160,5411
(defvar w3m-favicon-cache-data nilw3m-favicon-cache-data165,5573
(defmacro w3m-favicon-cache-p (url)w3m-favicon-cache-p184,6145
(defmacro w3m-favicon-cache-favicon (url)w3m-favicon-cache-favicon188,6281
(defmacro w3m-favicon-cache-retrieved (url)w3m-favicon-cache-retrieved192,6440
(defmacro w3m-favicon-set-image (image)w3m-favicon-set-image196,6598
(defun w3m-favicon-setup (url)w3m-favicon-setup207,6993
(defun w3m-favicon-convert (data type)w3m-favicon-convert239,8184
(defun w3m-favicon-retrieve (url type target)w3m-favicon-retrieve300,10394
(defun w3m-favicon-save-cache-file ()w3m-favicon-save-cache-file334,11766
(defun w3m-favicon-load-cache-file ()w3m-favicon-load-cache-file345,12150

/home/malk/.emacs.d/elpa/nrepl-20130115.1928/nrepl-pkg.el,129
(define-package "nrepl" "20130115.1928" "Client for Clojure nREPL [source: github]" (quote ((clojure-mode "1.11"))))"nrepl"1,0

/home/malk/.emacs.d/elpa/nrepl-20130115.1928/nrepl.el,19267
(defgroup nrepl nilnrepl60,1644
(defconst nrepl-current-version "0.1.6-preview"nrepl-current-version65,1755
(defun nrepl-version ()nrepl-version68,1836
(defcustom nrepl-connected-hook nilnrepl-connected-hook73,1988
(defcustom nrepl-disconnected-hook nilnrepl-disconnected-hook78,2123
(defcustom nrepl-host "127.0.0.1"nrepl-host83,2265
(defcustom nrepl-port nilnrepl-port88,2392
(defconst nrepl-connection-buffer "*nrepl-connection*")nrepl-connection-buffer93,2491
(defconst nrepl-server-buffer "*nrepl-server*")nrepl-server-buffer94,2547
(defconst nrepl-nrepl-buffer "*nrepl*")nrepl-nrepl-buffer95,2595
(defconst nrepl-error-buffer "*nrepl-error*")nrepl-error-buffer96,2635
(defconst nrepl-doc-buffer "*nrepl-doc*")nrepl-doc-buffer97,2681
(defconst nrepl-src-buffer "*nrepl-src*")nrepl-src-buffer98,2723
(defconst nrepl-macroexpansion-buffer "*nrepl-macroexpansion*")nrepl-macroexpansion-buffer99,2765
(defface nrepl-prompt-facenrepl-prompt-face101,2830
(defface nrepl-output-facenrepl-output-face106,2963
(defface nrepl-error-facenrepl-error-face111,3091
(defface nrepl-input-facenrepl-input-face116,3218
(defface nrepl-result-facenrepl-result-face121,3330
(defmacro nrepl-propertize-region (props &rest body)nrepl-propertize-region126,3449
(defvar nrepl-session nilnrepl-session138,3916
(defvar nrepl-tooling-session nilnrepl-tooling-session141,3974
(defvar nrepl-input-start-mark)nrepl-input-start-mark145,4107
(defvar nrepl-prompt-start-mark)nrepl-prompt-start-mark147,4140
(defvar nrepl-request-counter 0nrepl-request-counter149,4174
(defvar nrepl-old-input-counter 0nrepl-old-input-counter152,4248
(defvar nrepl-requests (make-hash-table :test 'equal))nrepl-requests157,4437
(defvar nrepl-buffer-ns "user"nrepl-buffer-ns159,4493
(defvar nrepl-input-history '()nrepl-input-history162,4572
(defvar nrepl-input-history-items-added 0nrepl-input-history-items-added165,4662
(defvar nrepl-output-start nilnrepl-output-start168,4768
(defvar nrepl-output-end nilnrepl-output-end171,4837
(defvar nrepl-sync-response nilnrepl-sync-response174,4902
(defvar nrepl-err-handler 'nrepl-default-err-handlernrepl-err-handler177,4973
(defvar nrepl-extra-eldoc-commands '("nrepl-complete" "yas/expand")nrepl-extra-eldoc-commands180,5057
(defvar nrepl-ops nilnrepl-ops183,5189
(defcustom nrepl-popup-stacktraces tnrepl-popup-stacktraces186,5261
(defcustom nrepl-tab-command 'nrepl-indent-and-complete-symbolnrepl-tab-command193,5494
(defun nrepl-make-variables-buffer-local (&rest variables)nrepl-make-variables-buffer-local200,5781
(defun nrepl-reset-markers ()nrepl-reset-markers220,6271
(defun nrepl-bdecode-buffer ()nrepl-bdecode-buffer231,6669
(defun nrepl-decode (str)nrepl-decode265,7983
(defun nrepl-netstring (string)nrepl-netstring274,8207
(defun nrepl-bencode (message)nrepl-bencode278,8313
(defun nrepl-eval-region (start end)nrepl-eval-region281,8415
(defun nrepl-expression-at-point ()nrepl-expression-at-point291,8697
(defun nrepl-region-for-expression-at-point ()nrepl-region-for-expression-at-point296,8868
(defun nrepl-eval-expression-at-point (&optional prefix)nrepl-eval-expression-at-point305,9127
(defun nrepl-eval-ns-form ()nrepl-eval-ns-form313,9389
(defun nrepl-last-expression-with-bounds ()nrepl-last-expression-with-bounds321,9611
(defun nrepl-last-expression ()nrepl-last-expression327,9873
(defun nrepl-find-file (filename)nrepl-find-file332,9997
(defun nrepl-find-resource (resource)nrepl-find-resource341,10325
(defun nrepl-jump-to-def-for (location)nrepl-jump-to-def-for357,11055
(defun nrepl-jump-to-def-handler (buffer)nrepl-jump-to-def-handler369,11466
(defun nrepl-jump-to-def (var)nrepl-jump-to-def381,12088
(defun nrepl-jump (query)nrepl-jump393,12721
(defalias 'nrepl-jump-back 'pop-tag-mark)nrepl-jump-back397,12832
(defun nrepl-completion-complete-core-fn (str)nrepl-completion-complete-core-fn399,12875
(defun nrepl-completion-complete-op-fn (str)nrepl-completion-complete-op-fn410,13325
(defun nrepl-dispatch-complete-symbol (str)nrepl-dispatch-complete-symbol422,13818
(defun nrepl-complete-at-point ()nrepl-complete-at-point427,13993
(defun nrepl-eldoc-format-thing (thing)nrepl-eldoc-format-thing434,14277
(defun nrepl-highlight-args (arglist pos)nrepl-highlight-args437,14376
(defun nrepl-highlight-arglist (arglist pos)nrepl-highlight-arglist454,14942
(defun nrepl-eldoc-format-arglist (arglist pos)nrepl-eldoc-format-arglist457,15043
(defun nrepl-eldoc-handler (buffer the-thing the-pos)nrepl-eldoc-handler462,15225
(defun nrepl-eldoc ()nrepl-eldoc474,15624
(defun nrepl-turn-on-eldoc-mode ()nrepl-turn-on-eldoc-mode492,16398
(defvar nrepl-javadoc-local-paths nilnrepl-javadoc-local-paths500,16690
(defun nrepl-javadoc-op (symbol-name)nrepl-javadoc-op503,16775
(defun nrepl-javadoc-handler (symbol-name)nrepl-javadoc-handler516,17159
(defun nrepl-javadoc (query)nrepl-javadoc523,17418
(defmacro nrepl-dbind-response (response keys &rest body)nrepl-dbind-response529,17610
(defun nrepl-make-response-handler (buffer value-handler stdout-handler stderr-handler done-handler)nrepl-make-response-handler537,17882
(defun nrepl-stdin-handler (buffer)nrepl-stdin-handler572,19458
(defun nrepl-handler (buffer)nrepl-handler582,19937
(defun nrepl-interactive-eval-handler (buffer)nrepl-interactive-eval-handler593,20478
(defun nrepl-load-file-handler (buffer)nrepl-load-file-handler603,20941
(defun nrepl-interactive-eval-print-handler (buffer)nrepl-interactive-eval-print-handler616,21595
(defun nrepl-popup-eval-print-handler (buffer)nrepl-popup-eval-print-handler626,22045
(defun nrepl-popup-eval-out-handler (buffer)nrepl-popup-eval-out-handler635,22459
(defun nrepl-default-err-handler (buffer ex root-ex session)nrepl-default-err-handler644,22871
(defun nrepl-need-input (buffer)nrepl-need-input659,23751
(defvar nrepl-popup-restore-data nilnrepl-popup-restore-data666,23959
(define-minor-mode nrepl-popup-buffer-modenrepl-popup-buffer-mode677,24469
(defun nrepl-popup-buffer-quit-function (&optional kill-buffer-p)nrepl-popup-buffer-quit-function687,24784
(defun nrepl-popup-buffer (name &optional select)nrepl-popup-buffer692,24998
(defun nrepl-display-popup-buffer (&optional select)nrepl-display-popup-buffer698,25223
(defun nrepl-close-popup-window ()nrepl-close-popup-window716,25933
(defun nrepl-popup-buffer-quit (&optional kill-buffer-p)nrepl-popup-buffer-quit730,26544
(defun nrepl-make-popup-buffer (name)nrepl-make-popup-buffer741,26895
(defun nrepl-emit-into-popup-buffer (buffer value)nrepl-emit-into-popup-buffer751,27211
(defun nrepl-emit-into-color-buffer (buffer value)nrepl-emit-into-color-buffer759,27448
(defun nrepl-macroexpand-undo (&optional arg)nrepl-macroexpand-undo770,27771
(defvar nrepl-last-macroexpand-expression nilnrepl-last-macroexpand-expression775,27890
(defun nrepl-macroexpand-handler (buffer ns)nrepl-macroexpand-handler779,28054
(defun nrepl-macroexpand-inplace-handler (expansion-buffer start end current-point)nrepl-macroexpand-inplace-handler787,28385
(defun nrepl-macroexpand-form (expander expr)nrepl-macroexpand-form796,28834
(defun nrepl-macroexpand-expr (expander expr &optional buffer)nrepl-macroexpand-expr801,29012
(defun nrepl-macroexpand-expr-inplace (expander)nrepl-macroexpand-expr-inplace807,29369
(defun nrepl-macroexpand-again ()nrepl-macroexpand-again815,29794
(defun nrepl-macroexpand-1 (&optional prefix)nrepl-macroexpand-1820,30021
(defun nrepl-macroexpand-1-inplace (&optional prefix)nrepl-macroexpand-1-inplace827,30405
(defun nrepl-macroexpand-all ()nrepl-macroexpand-all832,30588
(defun nrepl-macroexpand-all-inplace ()nrepl-macroexpand-all-inplace837,30844
(defun nrepl-initialize-macroexpansion-buffer (expansion ns)nrepl-initialize-macroexpansion-buffer841,30967
(defun nrepl-redraw-macroexpansion-buffer (expansion buffer start end current-point)nrepl-redraw-macroexpansion-buffer852,31319
(defun nrepl-popup-eval-print (form)nrepl-popup-eval-print863,31645
(defun nrepl-interactive-eval-print (form)nrepl-interactive-eval-print870,31914
(defun nrepl-interactive-eval (form)nrepl-interactive-eval877,32195
(defun nrepl-send-op (op attributes handler)nrepl-send-op884,32460
(defun nrepl-send-load-file (file-contents file-path file-name)nrepl-send-load-file894,32829
(defun nrepl-eval-last-expression (&optional prefix)nrepl-eval-last-expression904,33315
(defun nrepl-eval-print-last-expression ()nrepl-eval-print-last-expression911,33563
(defcustom nrepl-wrap-history nilnrepl-wrap-history919,33782
(defvar nrepl-input-history-position -1nrepl-input-history-position928,34073
(defvar nrepl-history-pattern nilnrepl-history-pattern931,34153
(defun nrepl-add-to-input-history (string)nrepl-add-to-input-history934,34250
(defun nrepl-delete-current-input ()nrepl-delete-current-input942,34544
(defun nrepl-replace-input (string)nrepl-replace-input948,34716
(defun nrepl-position-in-history (start-pos direction regexp)nrepl-position-in-history952,34815
(defun nrepl-history-replace (direction &optional regexp)nrepl-history-replace966,35423
(defun nrepl-history-search-in-progress-p ()nrepl-history-search-in-progress-p995,36824
(defun nrepl-terminate-history-search ()nrepl-terminate-history-search998,36914
(defun nrepl-previous-input ()nrepl-previous-input1001,36992
(defun nrepl-next-input ()nrepl-next-input1009,37298
(defun nrepl-forward-input ()nrepl-forward-input1015,37474
(defun nrepl-backward-input ()nrepl-backward-input1020,37623
(defun nrepl-previous-matching-input (regexp)nrepl-previous-matching-input1025,37775
(defun nrepl-next-matching-input (regexp)nrepl-next-matching-input1030,37957
(defun nrepl-history-pattern (&optional use-current-input)nrepl-history-pattern1035,38130
(defcustom nrepl-history-size 500nrepl-history-size1047,38596
(defcustom nrepl-history-file nilnrepl-history-file1053,38749
(defun nrepl-history-read-filename ()nrepl-history-read-filename1059,38888
(defun nrepl-history-read (filename)nrepl-history-read1064,39080
(defun nrepl-history-load (&optional filename)nrepl-history-load1073,39336
(defun nrepl-history-write (filename)nrepl-history-write1086,39994
(defun nrepl-history-save (&optional filename)nrepl-history-save1106,41005
(defun nrepl-history-just-save ()nrepl-history-just-save1113,41300
(defun nrepl-histories-merge (session-hist n-added-items file-hist)nrepl-histories-merge1124,41828
(defun nrepl-same-line-p (pos1 pos2)nrepl-same-line-p1129,41971
(defun nrepl-bol-internal ()nrepl-bol-internal1134,42188
(defun nrepl-bol ()nrepl-bol1141,42462
(defun nrepl-bol-mark ()nrepl-bol-mark1147,42590
(defun nrepl-at-prompt-start-p ()nrepl-at-prompt-start-p1154,42766
(defvar nrepl-mode-hook nilnrepl-mode-hook1159,42909
(defvar nrepl-mode-syntax-tablenrepl-mode-syntax-table1162,42983
(defvar nrepl-interaction-mode-mapnrepl-interaction-mode-map1165,43065
(defvar nrepl-macroexpansion-minor-mode-mapnrepl-macroexpansion-minor-mode-map1210,45134
(define-minor-mode nrepl-macroexpansion-minor-modenrepl-macroexpansion-minor-mode1223,45794
(defun nrepl-create-macroexpansion-buffer ()nrepl-create-macroexpansion-buffer1231,45994
(defun nrepl-tab ()nrepl-tab1238,46224
(defvar nrepl-mode-mapnrepl-mode-map1243,46345
(defun clojure-enable-nrepl ()clojure-enable-nrepl1287,48228
(defun clojure-disable-nrepl ()clojure-disable-nrepl1290,48290
(define-minor-mode nrepl-interaction-modenrepl-interaction-mode1294,48369
(define-derived-mode nrepl-mode fundamental-mode "nREPL"nrepl-mode1305,48699
(defcustom nrepl-lein-commandnrepl-lein-command1329,49659
(defcustom nrepl-server-commandnrepl-server-command1335,49784
(defun nrepl-show-maximum-output ()nrepl-show-maximum-output1348,50360
(defmacro nrepl-save-marker (marker &rest body)nrepl-save-marker1357,50649
(defun nrepl-insert-prompt (namespace)nrepl-insert-prompt1365,50891
(defun nrepl-emit-output-at-pos (buffer string position &optional bol)nrepl-emit-output-at-pos1383,51626
(defun nrepl-emit-interactive-output (string)nrepl-emit-interactive-output1400,52380
(defun nrepl-emit-output (buffer string &optional bol)nrepl-emit-output1404,52571
(defun nrepl-emit-prompt (buffer)nrepl-emit-prompt1408,52731
(defun nrepl-emit-result (buffer string &optional bol)nrepl-emit-result1416,52989
(defun nrepl-default-handler (response)nrepl-default-handler1429,53578
(defun nrepl-dispatch (response)nrepl-dispatch1436,53793
(defun nrepl-net-decode ()nrepl-net-decode1444,54067
(defun nrepl-net-process-input (process)nrepl-net-process-input1454,54387
(defun nrepl-net-filter (process string)nrepl-net-filter1464,54772
(defun nrepl-sentinel (process message)nrepl-sentinel1471,54988
(defun nrepl-write-message (process message)nrepl-write-message1478,55234
(defun nrepl-property-bounds (prop)nrepl-property-bounds1482,55342
(defun nrepl-in-input-area-p ()nrepl-in-input-area-p1489,55664
(defun nrepl-current-input (&optional until-point-p)nrepl-current-input1492,55736
(defun nrepl-previous-prompt ()nrepl-previous-prompt1501,56109
(defun nrepl-next-prompt ()nrepl-next-prompt1506,56225
(defun nrepl-find-prompt (&optional backward)nrepl-find-prompt1511,56330
(defun nrepl-search-property-change (prop &optional backward)nrepl-search-property-change1520,56652
(defun nrepl-end-of-proprange-p (property)nrepl-end-of-proprange-p1526,56890
(defun nrepl-mark-input-start ()nrepl-mark-input-start1530,57043
(defun nrepl-mark-output-start ()nrepl-mark-output-start1533,57141
(defun nrepl-mark-output-end ()nrepl-mark-output-end1537,57259
(defun nrepl-current-session ()nrepl-current-session1544,57471
(defun nrepl-current-tooling-session ()nrepl-current-tooling-session1548,57571
(defun nrepl-next-request-id ()nrepl-next-request-id1552,57687
(defun nrepl-send-request (request callback)nrepl-send-request1556,57821
(defun nrepl-create-client-session (callback)nrepl-create-client-session1562,58098
(defun nrepl-send-stdin (input callback)nrepl-send-stdin1566,58216
(defun nrepl-send-interrupt (pending-request-id callback)nrepl-send-interrupt1572,58437
(defun nrepl-eval-request (input &optional ns session)nrepl-eval-request1578,58699
(defun nrepl-send-string (input callback &optional ns session)nrepl-send-string1585,58912
(defun nrepl-sync-request-handler (buffer)nrepl-sync-request-handler1588,59047
(defun nrepl-send-request-sync (request)nrepl-send-request-sync1607,60234
(defun nrepl-send-string-sync (input &optional ns session)nrepl-send-string-sync1618,60731
(defalias 'nrepl-eval 'nrepl-send-string-sync)nrepl-eval1621,60858
(defalias 'nrepl-eval-async 'nrepl-send-string)nrepl-eval-async1622,60905
(defun nrepl-send-input (&optional newline)nrepl-send-input1624,60954
(defun nrepl-newline-and-indent ()nrepl-newline-and-indent1651,62124
(defun nrepl-indent-and-complete-symbol ()nrepl-indent-and-complete-symbol1662,62503
(defun nrepl-kill-input ()nrepl-kill-input1673,62881
(defun nrepl-input-complete-p (start end)nrepl-input-complete-p1681,63189
(defun nrepl-return (&optional end-of-input)nrepl-return1698,63846
(defun nrepl-recenter-if-needed ()nrepl-recenter-if-needed1718,64538
(defun nrepl-grab-old-input (replace)nrepl-grab-old-input1725,64734
(defun nrepl-closing-return ()nrepl-closing-return1746,65624
(defvar nrepl-clear-buffer-hook)nrepl-clear-buffer-hook1756,65946
(defun nrepl-clear-buffer ()nrepl-clear-buffer1758,65980
(defun nrepl-find-and-clear-repl-buffer ()nrepl-find-and-clear-repl-buffer1769,66370
(defun nrepl-input-line-beginning-position ()nrepl-input-line-beginning-position1778,66684
(defun nrepl-clear-output ()nrepl-clear-output1783,66820
(defun nrepl-find-ns ()nrepl-find-ns1800,67400
(defun nrepl-current-ns ()nrepl-current-ns1806,67507
(defun nrepl-user-first-name ()nrepl-user-first-name1816,67809
(defvar nrepl-words-of-inspirationnrepl-words-of-inspiration1823,68040
(defun nrepl-random-words-of-inspiration ()nrepl-random-words-of-inspiration1852,69779
(defun nrepl-insert-banner (ns)nrepl-insert-banner1856,69927
(defun nrepl-init-repl-buffer (connection buffer &optional noprompt)nrepl-init-repl-buffer1865,70230
(defun nrepl-repl-buffer (&optional noprompt)nrepl-repl-buffer1874,70505
(defun nrepl-switch-to-repl-buffer ()nrepl-switch-to-repl-buffer1881,70849
(defun nrepl-set-ns (ns)nrepl-set-ns1893,71276
(defun nrepl-symbol-at-point ()nrepl-symbol-at-point1899,71523
(defvar nrepl-ido-ns nil)nrepl-ido-ns1908,71874
(defun nrepl-ido-form (ns)nrepl-ido-form1910,71901
(defun nrepl-ido-up-ns (ns)nrepl-ido-up-ns1924,72485
(defun nrepl-ido-select (selected targets callback)nrepl-ido-select1927,72577
(defun nrepl-ido-read-var-handler (ido-callback buffer)nrepl-ido-read-var-handler1938,73122
(defun nrepl-ido-read-var (ns ido-callback)nrepl-ido-read-var1947,73637
(defun nrepl-operator-before-point ()nrepl-operator-before-point1955,73976
(defun nrepl-read-symbol-name (prompt callback &optional query)nrepl-read-symbol-name1964,74134
(defun nrepl-doc-handler (symbol)nrepl-doc-handler1974,74675
(defun nrepl-doc (query)nrepl-doc1982,75017
(defun nrepl-src-handler (symbol)nrepl-src-handler1989,75279
(defun nrepl-src (query)nrepl-src1999,75684
(defun nrepl-eval-load-file (form)nrepl-eval-load-file2007,75975
(defun nrepl-file-string (file)nrepl-file-string2011,76117
(defun nrepl-load-file-op (filename)nrepl-load-file-op2016,76277
(defun nrepl-load-file-core (filename)nrepl-load-file-core2021,76461
(defun nrepl-dispatch-load-file (filename)nrepl-dispatch-load-file2029,76759
(defun nrepl-load-file (filename)nrepl-load-file2034,76918
(defun nrepl-load-current-buffer ()nrepl-load-current-buffer2044,77328
(defun nrepl-interrupt-handler (buffer)nrepl-interrupt-handler2056,77712
(defun nrepl-hash-keys (hashtable)nrepl-hash-keys2059,77809
(defun nrepl-interrupt ()nrepl-interrupt2064,77941
(defun nrepl-server-filter (process output)nrepl-server-filter2072,78229
(defun nrepl-server-sentinel (process event)nrepl-server-sentinel2082,78624
(defun nrepl-enable-on-existing-clojure-buffers ()nrepl-enable-on-existing-clojure-buffers2100,79242
(defun nrepl-disable-on-existing-clojure-buffers ()nrepl-disable-on-existing-clojure-buffers2112,79674
(defun nrepl-jack-in (&optional prompt-project)nrepl-jack-in2123,80034
(defun nrepl-quit ()nrepl-quit2136,80630
(defun nrepl-restart (&optional prompt-project)nrepl-restart2152,81207
(defun nrepl-op-supported-p (op)nrepl-op-supported-p2161,81451
(defun nrepl-describe-handler (process-buffer)nrepl-describe-handler2167,81657
(defun nrepl-describe-session (process)nrepl-describe-session2175,81919
(defun nrepl-create-nrepl-buffer (process)nrepl-create-nrepl-buffer2180,82109
(defun nrepl-new-tooling-session-handler (process)nrepl-new-tooling-session-handler2186,82289
(defun nrepl-new-session-handler (process &optional create-nrepl-buffer-p)nrepl-new-session-handler2195,82651
(defun nrepl-init-client-sessions (process)nrepl-init-client-sessions2209,83321
(defun nrepl-connect (host port)nrepl-connect2213,83513
(defun nrepl (host port)nrepl2230,84169

/home/malk/.emacs.d/elpa/nrepl-20130115.1928/nrepl-autoloads.el,0

/home/malk/.emacs.d/elpa/move-text-20120105.2117/move-text-pkg.el,139
(define-package "move-text" "20120105.2117" "Move current line or region with M-up or M-down. [source: wiki]" (quote nil))"move-text"1,0

/home/malk/.emacs.d/elpa/move-text-20120105.2117/move-text-autoloads.el,0

/home/malk/.emacs.d/elpa/move-text-20120105.2117/move-text.el,229
(defun move-text-internal (arg)move-text-internal58,1798
(defun move-text-down (arg)move-text-down82,2494
(defun move-text-up (arg)move-text-up89,2666
(defun move-text-default-bindings ()move-text-default-bindings96,2838

/home/malk/.emacs.d/elpa/idomenu-0.1/idomenu-autoloads.el,0

/home/malk/.emacs.d/elpa/idomenu-0.1/idomenu-pkg.el,90
(define-package "idomenu" "0.1" "imenu tag selection with ido" (quote nil))"idomenu"1,0

/home/malk/.emacs.d/elpa/idomenu-0.1/idomenu.el,314
(defun idomenu--guess-default (index-alist symbol)idomenu--guess-default40,1242
(defun idomenu--read (index-alist &optional prompt guess)idomenu--read47,1532
(defun idomenu--trim (str)idomenu--trim59,2075
(defun idomenu--trim-alist (index-alist)idomenu--trim-alist64,2287
(defun idomenu ()idomenu70,2507

/home/malk/.emacs.d/elpa/graphviz-dot-mode-20120821.1835/graphviz-dot-mode-autoloads.el,0

/home/malk/.emacs.d/elpa/graphviz-dot-mode-20120821.1835/graphviz-dot-mode.el,4042
(defconst graphviz-dot-mode-version "0.3.6"graphviz-dot-mode-version142,6719
(defgroup graphviz nilgraphviz145,6804
(defun graphviz-dot-customize ()graphviz-dot-customize149,6891
(defvar graphviz-dot-mode-abbrev-table nilgraphviz-dot-mode-abbrev-table154,7026
(define-abbrev-table 'graphviz-dot-mode-abbrev-table ())graphviz-dot-mode-abbrev-table156,7124
(defcustom graphviz-dot-dot-program "dot"graphviz-dot-dot-program158,7182
(defcustom graphviz-dot-view-command "doted %s"graphviz-dot-view-command163,7322
(defcustom graphviz-dot-view-edit-command nilgraphviz-dot-view-edit-command169,7531
(defcustom graphviz-dot-save-before-view tgraphviz-dot-save-before-view175,7693
(defcustom graphviz-dot-auto-indent-on-newline tgraphviz-dot-auto-indent-on-newline181,7866
(defcustom graphviz-dot-indent-width default-tab-widthgraphviz-dot-indent-width186,8046
(defcustom graphviz-dot-auto-indent-on-braces nilgraphviz-dot-auto-indent-on-braces191,8192
(defcustom graphviz-dot-auto-indent-on-semi tgraphviz-dot-auto-indent-on-semi196,8407
(defcustom graphviz-dot-preview-extension "png"graphviz-dot-preview-extension201,8573
(defcustom graphviz-dot-toggle-completions nilgraphviz-dot-toggle-completions208,8818
(defcustom graphviz-dot-delete-completions nilgraphviz-dot-delete-completions216,9156
(defcustom graphviz-dot-attr-keywords graphviz-dot-attr-keywords222,9335
(defcustom graphviz-dot-value-keywords graphviz-dot-value-keywords247,10874
(defvar graphviz-dot-colors-listgraphviz-dot-colors-list266,11912
(defvar graphviz-dot-color-keywordsgraphviz-dot-color-keywords395,19029
(defvar graphviz-attr-keywordsgraphviz-attr-keywords398,19116
(defvar graphviz-value-keywordsgraphviz-value-keywords401,19216
(defvar graphviz-color-keywordsgraphviz-color-keywords404,19318
(defvar graphviz-dot-mode-map ()graphviz-dot-mode-map408,19432
(defvar graphviz-dot-mode-syntax-table nilgraphviz-dot-mode-syntax-table429,20275
(defvar graphviz-dot-font-lock-keywordsgraphviz-dot-font-lock-keywords448,20909
(defun graphviz-dot-mode ()graphviz-dot-mode470,21804
(defvar dot-menu nildot-menu549,25280
(defun graphviz-dot-compilation-parse-errors (limit-search find-at-least)graphviz-dot-compilation-parse-errors595,27343
(defun graphviz-dot-uncomment-region (begin end)graphviz-dot-uncomment-region632,28457
(defun graphviz-dot-indent-line ()graphviz-dot-indent-line637,28592
(defun graphviz-dot-get-indendation()graphviz-dot-get-indendation645,28793
(defun graphviz-dot-real-indent-line ()graphviz-dot-real-indent-line652,28987
(defun graphviz-dot-indent-graph ()graphviz-dot-indent-graph697,31069
(defun graphviz-dot-comment-or-string-p ()graphviz-dot-comment-or-string-p726,32107
(defun graphviz-dot-newline-and-indent ()graphviz-dot-newline-and-indent730,32249
(defun electric-graphviz-dot-terminate-line ()electric-graphviz-dot-terminate-line739,32467
(defun electric-graphviz-dot-open-brace ()electric-graphviz-dot-open-brace746,32670
(defun electric-graphviz-dot-close-brace ()electric-graphviz-dot-close-brace754,32927
(defun electric-graphviz-dot-semi ()electric-graphviz-dot-semi768,33341
(defun graphviz-dot-preview ()graphviz-dot-preview779,33613
(defun graphviz-dot-view ()graphviz-dot-view821,35481
(defvar graphviz-dot-str nil)graphviz-dot-str844,36542
(defvar graphviz-dot-all nil)graphviz-dot-all845,36572
(defvar graphviz-dot-pred nil)graphviz-dot-pred846,36602
(defvar graphviz-dot-buffer-to-use nil)graphviz-dot-buffer-to-use847,36633
(defvar graphviz-dot-flag nil)graphviz-dot-flag848,36673
(defun graphviz-dot-get-state ()graphviz-dot-get-state850,36705
(defun graphviz-dot-get-keywords ()graphviz-dot-get-keywords869,37374
(defvar graphviz-dot-last-word-numb 0)graphviz-dot-last-word-numb881,37856
(defvar graphviz-dot-last-word-shown nil)graphviz-dot-last-word-shown882,37895
(defvar graphviz-dot-last-completions nil)graphviz-dot-last-completions883,37937
(defun graphviz-dot-complete-word ()graphviz-dot-complete-word885,37981

/home/malk/.emacs.d/elpa/graphviz-dot-mode-20120821.1835/graphviz-dot-mode-pkg.el,158
(define-package "graphviz-dot-mode" "20120821.1835" "Mode for the dot-language used by graphviz (att). [source: github]" (quote nil))"graphviz-dot-mode"1,0

/home/malk/.emacs.d/elpa/magit-20130123.1617/rebase-mode.el,1721
(defgroup rebase-mode nilrebase-mode29,946
(defface rebase-mode-killed-action-facerebase-mode-killed-action-face33,1016
(defface rebase-mode-description-facerebase-mode-description-face40,1234
(defconst rebase-mode-action-line-rerebase-mode-action-line-re45,1379
(defconst rebase-mode-exec-line-rerebase-mode-exec-line-re65,1716
(defconst rebase-mode-dead-line-rerebase-mode-dead-line-re77,1926
(defvar rebase-mode-font-lock-keywordsrebase-mode-font-lock-keywords84,2265
(defvar key-to-action-mapkey-to-action-map96,2734
(defvar rebase-mode-maprebase-mode-map104,2895
(defun rebase-mode-edit-line (change-to)rebase-mode-edit-line156,4782
(defun rebase-mode-looking-at-action ()rebase-mode-looking-at-action167,5157
(defun rebase-mode-looking-at-action-or-exec ()rebase-mode-looking-at-action-or-exec173,5342
(defun rebase-mode-looking-at-exec ()rebase-mode-looking-at-exec180,5599
(defun rebase-mode-looking-at-killed-exec ()rebase-mode-looking-at-killed-exec184,5753
(defun rebase-mode-move-line-up ()rebase-mode-move-line-up190,6000
(defun rebase-mode-move-line-down ()rebase-mode-move-line-down200,6284
(defun rebase-mode-abort ()rebase-mode-abort215,6819
(defun rebase-mode-kill-line ()rebase-mode-kill-line226,7157
(defun rebase-mode-exec (edit)rebase-mode-exec236,7448
(defun rebase-mode-read-exec-line (&optional initial-line)rebase-mode-read-exec-line272,8674
(defun rebase-mode-undo (&optional arg)rebase-mode-undo275,8783
(define-derived-mode rebase-mode special-mode "Rebase"rebase-mode283,8984
(defun rebase-mode-show-keybindings ()rebase-mode-show-keybindings292,9405
(defun rebase-mode-disable-before-save-hook ()rebase-mode-disable-before-save-hook311,10265

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit-svn.el,1034
(defun magit-svn-find-rev (rev &optional branch)magit-svn-find-rev36,1101
(defun magit-svn-create-branch (name)magit-svn-create-branch53,1686
(defun magit-svn-rebase ()magit-svn-rebase57,1797
(defun magit-svn-dcommit ()magit-svn-dcommit61,1881
(defun magit-svn-enabled ()magit-svn-enabled65,1967
(defun magit-svn-expand-braces-in-branches (branch)magit-svn-expand-braces-in-branches68,2039
(defun magit-svn-get-local-ref (url)magit-svn-get-local-ref77,2453
(defvar magit-svn-get-ref-info-cache nilmagit-svn-get-ref-info-cache102,3689
(defun magit-svn-get-ref-info (&optional use-cache)magit-svn-get-ref-info108,3906
(defun magit-svn-get-ref (&optional use-cache)magit-svn-get-ref145,5733
(defun magit-svn-remote-string ()magit-svn-remote-string169,6727
(defun magit-svn-remote-update ()magit-svn-remote-update176,6939
(defvar magit-svn-mode-mapmagit-svn-mode-map209,8083
(define-minor-mode magit-svn-mode "SVN support for Magit"magit-svn-mode215,8229
(defun turn-on-magit-svn ()turn-on-magit-svn235,9211

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit-stgit.el,1386
(defcustom magit-stgit-executable "stg"magit-stgit-executable48,1670
(defface magit-stgit-appliedmagit-stgit-applied53,1782
(defface magit-stgit-currentmagit-stgit-current58,1905
(defface magit-stgit-othermagit-stgit-other63,2035
(defface magit-stgit-markedmagit-stgit-marked68,2159
(defface magit-stgit-emptymagit-stgit-empty73,2280
(defvar magit-stgit--enabled nilmagit-stgit--enabled80,2418
(defvar magit-stgit-mode)magit-stgit-mode84,2547
(defun magit-stgit--enabled ()magit-stgit--enabled86,2574
(defun magit-stgit--enabled-reset ()magit-stgit--enabled-reset100,3237
(defvar magit-stgit--marked-patch nilmagit-stgit--marked-patch104,3357
(defun magit-stgit--wash-patch ()magit-stgit--wash-patch130,4102
(defun magit-stgit--wash-series ()magit-stgit--wash-series159,5569
(defun magit-stgit--refresh-patch-buffer (patch)magit-stgit--refresh-patch-buffer172,6026
(defun magit-stgit--show-patch (patch &optional scroll)magit-stgit--show-patch181,6339
(defun magit-stgit--set-marked-patch (patch)magit-stgit--set-marked-patch223,7948
(defun magit-stgit-refresh ()magit-stgit-refresh236,8247
(defun magit-stgit-repair ()magit-stgit-repair246,8626
(defun magit-stgit-rebase ()magit-stgit-rebase255,8918
(define-minor-mode magit-stgit-mode "StGit support for Magit"magit-stgit-mode270,9432
(defun turn-on-magit-stgit ()turn-on-magit-stgit283,9905

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit-blame.el,1258
(defface magit-blame-headermagit-blame-header37,1143
(defface magit-blame-sha1magit-blame-sha142,1253
(defface magit-blame-culpritmagit-blame-culprit48,1399
(defface magit-blame-timemagit-blame-time53,1517
(defface magit-blame-subjectmagit-blame-subject58,1629
(defconst magit-blame-mapmagit-blame-map63,1768
(defvar magit-blame-buffer-read-only)magit-blame-buffer-read-only82,2460
(define-minor-mode magit-blame-modemagit-blame-mode86,2573
(defun magit-blame-file-off (buffer)magit-blame-file-off106,3251
(defun magit-blame-file-on (buffer)magit-blame-file-on116,3549
(defun magit-blame-locate-commit (pos)magit-blame-locate-commit127,3960
(defun magit-find-next-overlay-change (BEG END PROP)magit-find-next-overlay-change138,4330
(defun magit-blame-next-chunk (pos)magit-blame-next-chunk168,5746
(defun magit-blame-previous-chunk (pos)magit-blame-previous-chunk175,5978
(defcustom magit-time-format-string "%Y-%m-%dT%T%z"magit-time-format-string182,6218
(defun magit-blame-decode-time (unixtime &optional tz)magit-blame-decode-time187,6350
(defun magit-blame-format-time-string (format &optional unixtime tz)magit-blame-format-time-string206,6999
(defun magit-blame-parse (target-buf blame-buf)magit-blame-parse223,7855

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit-pkg.el,101
(define-package "magit" "20130123.1617" "Control Git from Emacs. [source: github]" 'nil)"magit"1,0

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit-bisect.el,1237
(defvar magit--bisect-last-pos)magit--bisect-last-pos3,18
(defvar magit--bisect-tmp-file)magit--bisect-tmp-file4,50
(defvar magit--bisect-info nil)magit--bisect-info5,82
(defun magit--bisecting-p (&optional required-status)magit--bisecting-p9,209
(defun magit--bisect-info ()magit--bisect-info18,581
(defun magit--bisect-cmd (&rest args)magit--bisect-cmd23,806
(defun magit--bisect-info-for-status (branch)magit--bisect-info-for-status46,1971
(defun magit-bisect-start ()magit-bisect-start61,2649
(defun magit-bisect-reset ()magit-bisect-reset70,2973
(defun magit-bisect-good ()magit-bisect-good77,3136
(defun magit-bisect-bad ()magit-bisect-bad84,3351
(defun magit-bisect-skip ()magit-bisect-skip91,3563
(defun magit-bisect-log ()magit-bisect-log98,3774
(defun magit-bisect-visualize ()magit-bisect-visualize106,3962
(defvar magit-bisect-mode-history nilmagit-bisect-mode-history120,4403
(defun magit-bisect-run (command)magit-bisect-run123,4479
(defun magit--bisect-run-filter (process output)magit--bisect-run-filter149,5553
(defun magit--bisect-run-sentinel (process event)magit--bisect-run-sentinel175,6792
(defun magit--bisect-update-status-buffer ()magit--bisect-update-status-buffer181,7023

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit-key-mode.el,3191
(defvar magit-key-mode-key-maps '()magit-key-mode-key-maps5,53
(defvar magit-key-mode-buf-name "*magit-key*"magit-key-mode-buf-name9,185
(defvar magit-key-mode-current-args '()magit-key-mode-current-args12,257
(defvar magit-key-mode-current-options '()magit-key-mode-current-options15,351
(defvar magit-log-mode-window-conf nilmagit-log-mode-window-conf18,448
(defvar magit-key-mode-groupsmagit-key-mode-groups21,540
(defun magit-key-mode-delete-group (group)magit-key-mode-delete-group159,4692
(defun magit-key-mode-add-group (group)magit-key-mode-add-group172,5132
(defun magit-key-mode-key-defined-p (for-group key)magit-key-mode-key-defined-p181,5534
(defun magit-key-mode-update-group (for-group thing &rest args)magit-key-mode-update-group190,5891
(defun magit-key-mode-insert-argument (for-group key desc arg read-func)magit-key-mode-insert-argument203,6451
(defun magit-key-mode-insert-switch (for-group key desc switch)magit-key-mode-insert-switch209,6773
(defun magit-key-mode-insert-action (for-group key desc func)magit-key-mode-insert-action215,7057
(defun magit-key-mode-options-for-group (for-group)magit-key-mode-options-for-group220,7307
(defun magit-key-mode-help (for-group)magit-key-mode-help226,7544
(defun magit-key-mode-exec-at-point ()magit-key-mode-exec-at-point247,8436
(defun magit-key-mode-jump-to-next-exec ()magit-key-mode-jump-to-next-exec254,8732
(defun magit-key-mode-build-keymap (for-group)magit-key-mode-build-keymap266,9227
(defvar magit-key-mode-prefix nilmagit-key-mode-prefix315,11273
(defun magit-key-mode-command (func)magit-key-mode-command320,11470
(defvar magit-key-mode-current-args nilmagit-key-mode-current-args333,12008
(defun magit-key-mode-add-argument (for-group arg-name input-func)magit-key-mode-add-argument337,12150
(defvar magit-key-mode-current-options '()magit-key-mode-current-options342,12375
(defun magit-key-mode-add-option (for-group option-name)magit-key-mode-add-option346,12502
(defun magit-key-mode-kill-buffer ()magit-key-mode-kill-buffer355,12909
(defvar magit-log-mode-window-conf nilmagit-log-mode-window-conf359,13004
(defun magit-key-mode (for-group &optional original-opts)magit-key-mode362,13081
(defun magit-key-mode-get-key-map (for-group)magit-key-mode-get-key-map391,14139
(defun magit-key-mode-redraw (for-group)magit-key-mode-redraw396,14331
(defun magit-key-mode-draw-header (header)magit-key-mode-draw-header415,15009
(defvar magit-key-mode-args-in-cols nilmagit-key-mode-args-in-cols419,15161
(defun magit-key-mode-draw-args (args)magit-key-mode-draw-args423,15276
(defun magit-key-mode-draw-switches (switches)magit-key-mode-draw-switches435,15625
(defun magit-key-mode-draw-actions (actions)magit-key-mode-draw-actions446,15995
(defun magit-key-mode-draw-buttons (section xs makermagit-key-mode-draw-buttons450,16135
(defun magit-key-mode-draw-in-cols (strings one-col-each)magit-key-mode-draw-in-cols465,16769
(defun magit-key-mode-draw (for-group)magit-key-mode-draw485,17552
(defun magit-key-mode-de-generate (group)magit-key-mode-de-generate501,18138
(defun magit-key-mode-generate (group)magit-key-mode-generate506,18298

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit-wip.el,849
(defface magit-log-head-label-wipmagit-log-head-label-wip54,1904
(defun magit-log-get-wip-color (suffix)magit-log-get-wip-color66,2235
(defconst magit-wip-refs-namespacemagit-wip-refs-namespace70,2345
(define-minor-mode magit-wip-modemagit-wip-mode74,2432
(defcustom magit-wip-commit-message "WIP %r"magit-wip-commit-message85,2781
(defcustom magit-wip-echo-area-message "Wrote %f (wip)"magit-wip-echo-area-message95,3100
(defvar magit-wip-save-mode-lighter " Wip")magit-wip-save-mode-lighter105,3498
(define-minor-mode magit-wip-save-modemagit-wip-save-mode108,3558
(define-globalized-minor-mode global-magit-wip-save-modeglobal-magit-wip-save-mode120,4007
(defun turn-on-magit-wip-save ()turn-on-magit-wip-save124,4127
(defun magit-wip-save-safe ()magit-wip-save-safe132,4450
(defun magit-wip-save ()magit-wip-save138,4588

/home/malk/.emacs.d/elpa/magit-20130123.1617/.dir-locals.el,0

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit-autoloads.el,131
(defvar magit-wip-mode nil "\magit-wip-mode86,2151
(defvar global-magit-wip-save-mode nil "\global-magit-wip-save-mode109,2907

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit.el,36454
(defgroup magit nilmagit110,3898
(defcustom magit-git-executable "git"magit-git-executable115,3987
(defcustom magit-gitk-executable (concat (file-name-directory magit-git-executable)magit-gitk-executable120,4095
(defcustom magit-git-standard-options '("--no-pager")magit-git-standard-options126,4299
(defcustom magit-repo-dirs nilmagit-repo-dirs131,4435
(defcustom magit-repo-dirs-depth 3magit-repo-dirs-depth138,4660
(defcustom magit-set-upstream-on-push nilmagit-set-upstream-on-push145,4900
(defcustom magit-save-some-buffers tmagit-save-some-buffers161,5514
(defcustom magit-save-some-buffers-predicatemagit-save-some-buffers-predicate172,5892
(defcustom magit-default-tracking-name-functionmagit-default-tracking-name-function183,6326
(defcustom magit-commit-all-when-nothing-staged 'askmagit-commit-all-when-nothing-staged195,6860
(defcustom magit-commit-signoff nilmagit-commit-signoff209,7493
(defcustom magit-sha1-abbrev-length 7magit-sha1-abbrev-length214,7617
(defcustom magit-log-cutoff-length 100magit-log-cutoff-length219,7769
(defcustom magit-log-infinite-length 99999magit-log-infinite-length224,7917
(defcustom magit-log-auto-more nilmagit-log-auto-more229,8068
(defcustom magit-process-popup-time -1magit-process-popup-time237,8300
(defcustom magit-revert-item-confirm tmagit-revert-item-confirm244,8582
(defcustom magit-log-edit-confirm-cancellation nilmagit-log-edit-confirm-cancellation249,8709
(defcustom magit-remote-ref-format 'branch-then-remotemagit-remote-ref-format254,8860
(defcustom magit-process-connection-type (not (eq system-type 'cygwin))magit-process-connection-type270,9551
(defcustom magit-completing-read-function 'magit-builtin-completing-readmagit-completing-read-function279,9914
(defcustom magit-create-branch-behaviour 'at-headmagit-create-branch-behaviour287,10292
(defcustom magit-status-buffer-switch-function 'pop-to-buffermagit-status-buffer-switch-function297,10712
(defcustom magit-rewrite-inclusive tmagit-rewrite-inclusive306,11059
(defcustom magit-highlight-whitespace tmagit-highlight-whitespace328,11764
(defcustom magit-highlight-trailing-whitespace tmagit-highlight-trailing-whitespace339,12224
(defcustom magit-highlight-indentation nilmagit-highlight-indentation346,12470
(defcustom magit-diff-refine-hunk nilmagit-diff-refine-hunk366,13391
(defvar magit-current-indentation nilmagit-current-indentation383,13917
(defgroup magit-faces nilmagit-faces388,14122
(defface magit-headermagit-header394,14240
(defface magit-section-titlemagit-section-title401,14403
(defface magit-branchmagit-branch406,14516
(defface magit-diff-file-headermagit-diff-file-header411,14626
(defface magit-diff-hunk-headermagit-diff-hunk-header416,14754
(defface magit-diff-addmagit-diff-add421,14882
(defface magit-diff-merge-currentmagit-diff-merge-current426,15010
(defface magit-diff-merge-separatormagit-diff-merge-separator431,15165
(defface magit-diff-merge-proposedmagit-diff-merge-proposed436,15317
(defface magit-diff-nonemagit-diff-none441,15474
(defface magit-diff-delmagit-diff-del446,15603
(defface magit-log-graphmagit-log-graph451,15735
(defface magit-log-sha1magit-log-sha1459,15968
(defface magit-log-messagemagit-log-message467,16202
(defface magit-item-highlightmagit-item-highlight472,16314
(defface magit-item-markmagit-item-mark477,16440
(defface magit-log-head-label-bisect-goodmagit-log-head-label-bisect-good482,16566
(defface magit-log-head-label-bisect-badmagit-log-head-label-bisect-bad494,16903
(defface magit-log-head-label-remotemagit-log-head-label-remote506,17224
(defface magit-log-head-label-tagsmagit-log-head-label-tags518,17566
(defface magit-log-head-label-patchesmagit-log-head-label-patches530,17902
(defface magit-whitespace-warning-facemagit-whitespace-warning-face542,18224
(defvar magit-custom-options '()magit-custom-options547,18385
(defvar magit-read-rev-history nilmagit-read-rev-history551,18532
(defvar magit-buffer-internal nilmagit-buffer-internal554,18616
(defvar magit-back-navigation-history nilmagit-back-navigation-history560,18855
(defvar magit-forward-navigation-history nilmagit-forward-navigation-history565,19086
(defvar magit-omit-untracked-dir-contents nilmagit-omit-untracked-dir-contents570,19329
(defvar magit-tmp-buffer-name " *magit-tmp*")magit-tmp-buffer-name573,19457
(defface magit-log-head-label-localmagit-log-head-label-local575,19504
(defface magit-log-head-label-defaultmagit-log-head-label-default587,19847
(defvar magit-mode-mapmagit-mode-map597,20120
(defvar magit-commit-mode-mapmagit-commit-mode-map660,23509
(defvar magit-status-mode-mapmagit-status-mode-map666,23715
(defvar magit-log-mode-mapmagit-log-mode-map685,24518
(defvar magit-wazzup-mode-mapmagit-wazzup-mode-map692,24753
(defvar magit-branch-manager-mode-mapmagit-branch-manager-mode-map699,24981
(defvar magit-bug-report-urlmagit-bug-report-url708,25330
(defconst magit-version "@GIT_DEV_VERSION@"magit-version711,25402
(defun magit-bug-report (str)magit-bug-report714,25492
(defun magit-buffer-switch (buf)magit-buffer-switch724,25901
(defmacro magit-with-refresh (&rest body)magit-with-refresh731,26045
(defvar magit-have-graph 'unset)magit-have-graph737,26176
(defvar magit-have-decorate 'unset)magit-have-decorate738,26209
(defvar magit-have-abbrev 'unset)magit-have-abbrev739,26245
(defun magit-configure-have-graph ()magit-configure-have-graph747,26558
(defun magit-configure-have-decorate ()magit-configure-have-decorate752,26750
(defun magit-configure-have-abbrev ()magit-configure-have-abbrev757,26959
(defun magit-set-variable-and-refresh (symbol value)magit-set-variable-and-refresh823,29562
(defun magit-iswitchb-completing-read (prompt choices &optional predicate require-matchmagit-iswitchb-completing-read828,29721
(defun magit-ido-completing-read (prompt choices &optional predicate require-match initial-input hist def)magit-ido-completing-read839,30273
(defun magit-builtin-completing-read (prompt choices &optional predicate require-matchmagit-builtin-completing-read851,30856
(defun magit-completing-read (prompt collection &optional predicate require-matchmagit-completing-read860,31382
(defun magit-use-region-p ()magit-use-region-p868,31789
(defun magit-goto-line (line)magit-goto-line873,31914
(defun magit-trim-line (str)magit-trim-line880,32073
(defun magit-split-lines (str)magit-split-lines887,32243
(defun magit-git-insert (args)magit-git-insert895,32459
(defun magit-git-output (args)magit-git-output898,32527
(defun magit-cmd-insert (cmd args)magit-cmd-insert901,32643
(defun magit-cmd-output (cmd args)magit-cmd-output904,32719
(defun magit-git-string (&rest args)magit-git-string913,33067
(defun magit-git-lines (&rest args)magit-git-lines916,33150
(defun magit-git-exit-code (&rest args)magit-git-exit-code919,33234
(defun magit-file-lines (file)magit-file-lines923,33384
(defun magit-write-file-lines (file lines)magit-write-file-lines932,33672
(defun magit-get (&rest keys)magit-get938,33805
(defun magit-get-all (&rest keys)magit-get-all942,33958
(defun magit-get-boolean (&rest keys)magit-get-boolean946,34131
(defun magit-set (val &rest keys)magit-set951,34333
(defun magit-remove-conflicts (alist)magit-remove-conflicts957,34576
(defun magit-git-repo-p (dir)magit-git-repo-p977,35468
(defun magit-git-dir ()magit-git-dir980,35548
(defun magit-no-commit-p ()magit-no-commit-p984,35709
(defun magit-list-repos* (dir level)magit-list-repos*989,35880
(defun magit-list-repos (dirs)magit-list-repos1001,36384
(defun magit-get-top-dir (cwd)magit-get-top-dir1011,36734
(defun magit-get-ref (ref)magit-get-ref1019,37068
(defun magit-get-current-branch ()magit-get-current-branch1022,37142
(defun magit-get-remote (branch)magit-get-remote1029,37332
(defun magit-get-current-remote ()magit-get-current-remote1037,37711
(defun magit-ref-exists-p (ref)magit-ref-exists-p1044,37996
(defun magit-read-top-dir (dir)magit-read-top-dir1047,38086
(defun magit-rev-parse (ref)magit-rev-parse1065,38928
(defun magit-ref-ambiguous-p (ref)magit-ref-ambiguous-p1069,39029
(defun magit-name-rev (rev &optional no-trim)magit-name-rev1075,39262
(defun magit-highlight-line-whitespace ()magit-highlight-line-whitespace1103,40717
(defun magit-put-line-property (prop val)magit-put-line-property1119,41583
(defun magit-format-commit (commit format)magit-format-commit1123,41733
(defun magit-current-line ()magit-current-line1128,41903
(defun magit-insert-region (beg end buf)magit-insert-region1132,42049
(defun magit-insert-current-line (buf)magit-insert-current-line1137,42200
(defun magit-file-uptodate-p (file)magit-file-uptodate-p1143,42410
(defun magit-anything-staged-p ()magit-anything-staged-p1146,42506
(defun magit-everything-clean-p ()magit-everything-clean-p1149,42607
(defun magit-commit-parents (commit)magit-commit-parents1153,42737
(defun magit-choose-parent-id (commit op)magit-choose-parent-id1158,42894
(defvar magit-current-range nilmagit-current-range1166,43101
(defun magit-list-interesting-refs (&optional uninteresting)magit-list-interesting-refs1176,43523
(defun magit-format-ref (ref)magit-format-ref1198,44582
(defun magit-tree-contents (treeish)magit-tree-contents1220,45322
(defvar magit-uninteresting-refs '("refs/remotes/\\([^/]+\\)/HEAD$" "refs/stash"))magit-uninteresting-refs1234,45826
(defun magit-read-file-from-rev (revision)magit-read-file-from-rev1236,45910
(defun magit-read-rev (prompt &optional default uninteresting)magit-read-rev1247,46449
(defun magit-read-rev-range (op &optional def-beg def-end)magit-read-rev-range1257,46919
(defun magit-rev-to-git (rev)magit-rev-to-git1268,47345
(defun magit-rev-range-to-git (range)magit-rev-range-to-git1275,47487
(defun magit-rev-describe (rev)magit-rev-describe1286,47811
(defun magit-rev-range-describe (range things)magit-rev-range-describe1293,47957
(defun magit-default-rev (&optional no-trim)magit-default-rev1304,48353
(defun magit-read-remote (&optional prompt def)magit-read-remote1312,48639
(defun magit-read-remote-branch (remote &optional prompt default)magit-read-remote-branch1324,49104
(defstruct magit-sectionmagit-section1349,50287
(defvar magit-top-section nilmagit-top-section1353,50393
(defvar magit-old-top-section nil)magit-old-top-section1358,50560
(defvar magit-section-hidden-default nil)magit-section-hidden-default1360,50596
(defun magit-new-section (title type)magit-new-section1362,50639
(defun magit-cancel-section (section)magit-cancel-section1384,51563
(defmacro magit-with-section (title type &rest body)magit-with-section1394,51941
(defun magit-set-section (title type start end)magit-set-section1412,52618
(defun magit-set-section-info (info &optional section)magit-set-section-info1420,52919
(defun magit-set-section-needs-refresh-on-show (flag &optional section)magit-set-section-needs-refresh-on-show1423,53042
(defmacro magit-create-buffer-sections (&rest body)magit-create-buffer-sections1428,53216
(defun magit-propertize-section (section)magit-propertize-section1443,53818
(defun magit-find-section (path top)magit-find-section1451,54134
(defun magit-section-path (section)magit-section-path1462,54544
(defun magit-find-section-after (pos)magit-find-section-after1469,54782
(defun magit-find-section-after* (pos secs)magit-find-section-after*1473,54931
(defun magit-find-section-before (pos)magit-find-section-before1484,55363
(defun magit-find-section-before* (pos secs)magit-find-section-before*1496,55936
(defun magit-current-section ()magit-current-section1505,56222
(defun magit-find-section-at (pos)magit-find-section-at1509,56329
(defun magit-insert-section (section-title-and-typemagit-insert-section1514,56473
(defun magit-git-section (section-title-and-typemagit-git-section1557,58187
(defun magit-goto-next-section ()magit-goto-next-section1568,58584
(defun magit-goto-previous-section ()magit-goto-previous-section1576,58798
(defun magit-goto-parent-section ()magit-goto-parent-section1583,59007
(defun magit-goto-next-sibling-section ()magit-goto-next-sibling-section1590,59226
(defun magit-goto-previous-sibling-section ()magit-goto-previous-sibling-section1603,59705
(defun magit-goto-section (section)magit-goto-section1615,60192
(defun magit-goto-section-at-path (path)magit-goto-section-at-path1627,60582
(defun magit-for-all-sections (func &optional top)magit-for-all-sections1634,60823
(defun magit-section-set-hidden (section hidden)magit-section-set-hidden1643,61165
(defun magit-section-any-hidden (section)magit-section-any-hidden1661,61876
(defun magit-section-collapse (section)magit-section-collapse1669,62190
(defun magit-section-expand (section)magit-section-expand1675,62403
(defun magit-section-expand-all-aux (section)magit-section-expand-all-aux1681,62611
(defun magit-section-expand-all (section)magit-section-expand-all1687,62829
(defun magit-section-hideshow (flag-or-func)magit-section-hideshow1692,62994
(defun magit-show-section ()magit-show-section1705,63528
(defun magit-hide-section ()magit-hide-section1710,63632
(defun magit-collapse-section ()magit-collapse-section1715,63734
(defun magit-expand-section ()magit-expand-section1720,63881
(defun magit-toggle-file-section ()magit-toggle-file-section1725,64024
(defun magit-toggle-section ()magit-toggle-section1732,64280
(defun magit-expand-collapse-section ()magit-expand-collapse-section1739,64482
(defun magit-cycle-section ()magit-cycle-section1749,64781
(defun magit-section-lineage (section)magit-section-lineage1765,65335
(defun magit-section-show-level (section level threshold path)magit-section-show-level1770,65524
(defun magit-show-level (level all)magit-show-level1779,65927
(defun magit-show-only-files ()magit-show-only-files1789,66390
(defun magit-show-only-files-all ()magit-show-only-files-all1798,66695
(defmacro magit-define-level-shower-1 (level all)magit-define-level-shower-11806,66976
(defmacro magit-define-level-shower (level)magit-define-level-shower1820,67493
(defmacro magit-define-section-jumper (sym title)magit-define-section-jumper1827,67747
(defmacro magit-define-inserter (sym arglist &rest body)magit-define-inserter1839,68172
(defvar magit-highlighted-section nil)magit-highlighted-section1857,68819
(defun magit-refine-section (section)magit-refine-section1859,68859
(defun magit-unrefine-section (section)magit-unrefine-section1872,69442
(defvar magit-highlight-overlay nil)magit-highlight-overlay1884,70019
(defun magit-highlight-section ()magit-highlight-section1886,70057
(defun magit-section-context-type (section)magit-section-context-type1907,70996
(defun magit-prefix-p (prefix list)magit-prefix-p1918,71360
(defmacro magit-section-case (head &rest clauses)magit-section-case1935,71999
(defmacro magit-section-action (head &rest clauses)magit-section-action1983,74061
(defmacro magit-add-action (head &rest clauses)magit-add-action1988,74204
(defun magit-wash-sequence (func)magit-wash-sequence2006,74957
(defmacro magit-define-command (sym arglist &rest body)magit-define-command2012,75154
(defun magit-set-mode-line-process (str)magit-set-mode-line-process2054,76681
(defun magit-process-indicator-from-command (comps)magit-process-indicator-from-command2060,76890
(defvar magit-process nil)magit-process2070,77294
(defvar magit-process-client-buffer nil)magit-process-client-buffer2071,77321
(defvar magit-process-buffer-name "*magit-process*"magit-process-buffer-name2072,77362
(defun magit-run* (cmd-and-argsmagit-run*2075,77458
(defun magit-process-sentinel (process event)magit-process-sentinel2169,81737
(defun magit-password (proc string)magit-password2188,82627
(defun magit-username (proc string)magit-username2200,83204
(defun magit-process-filter (proc string)magit-process-filter2210,83668
(defun magit-run (cmd &rest args)magit-run2230,84480
(defun magit-run-git (&rest args)magit-run-git2234,84572
(defun magit-run-git-with-input (input &rest args)magit-run-git-with-input2240,84771
(defun magit-run-git-async (&rest args)magit-run-git-async2247,85025
(defun magit-run-async-with-input (input cmd &rest args)magit-run-async-with-input2254,85309
(defun magit-display-process ()magit-display-process2257,85419
(defvar magit-mode-hook nil "Hook run by `magit-mode'.")magit-mode-hook2340,88143
(defvar magit-refresh-function nil)magit-refresh-function2344,88241
(defvar magit-refresh-args nil)magit-refresh-args2348,88380
(defvar last-point)last-point2352,88507
(defun magit-remember-point ()magit-remember-point2354,88528
(defun magit-invisible-region-end (pos)magit-invisible-region-end2357,88589
(defun magit-invisible-region-start (pos)magit-invisible-region-start2362,88744
(defun magit-correct-point-after-command ()magit-correct-point-after-command2367,88910
(defun magit-post-command-hook ()magit-post-command-hook2385,89607
(defun magit-mode ()magit-mode2389,89709
(defun magit-mode-init (dir submode refresh-func &rest refresh-args)magit-mode-init2413,90612
(defun magit-indentation-for (dir)magit-indentation-for2420,90843
(defun magit-find-buffer (submode &optional dir)magit-find-buffer2427,91034
(defun magit-find-status-buffer (&optional dir)magit-find-status-buffer2436,91390
(defun magit-for-all-buffers (func &optional dir)magit-for-all-buffers2439,91485
(defun magit-refresh-buffer (&optional buffer)magit-refresh-buffer2447,91749
(defun magit-string-has-prefix-p (string prefix)magit-string-has-prefix-p2475,92981
(defun magit-revert-buffers (dir &optional ignore-modtime)magit-revert-buffers2478,93101
(defun magit-update-vc-modeline (dir)magit-update-vc-modeline2494,93860
(defvar magit-refresh-needing-buffers nil)magit-refresh-needing-buffers2506,94340
(defvar magit-refresh-pending nil)magit-refresh-pending2507,94383
(defun magit-refresh-wrapper (func)magit-refresh-wrapper2509,94419
(defun magit-need-refresh (&optional buffer)magit-need-refresh2524,94958
(defun magit-refresh ()magit-refresh2529,95181
(defun magit-refresh-all ()magit-refresh-all2537,95408
(defun magit-wash-untracked-file ()magit-wash-untracked-file2546,95696
(defun magit-wash-untracked-files ()magit-wash-untracked-files2556,96011
(defun magit-insert-untracked-files ()magit-insert-untracked-files2566,96362
(defvar magit-diff-context-lines 3)magit-diff-context-lines2578,96770
(defun magit-diff-U-arg ()magit-diff-U-arg2580,96807
(defun magit-diff-smaller-hunks (&optional count)magit-diff-smaller-hunks2583,96879
(defun magit-diff-larger-hunks (&optional count)magit-diff-larger-hunks2589,97096
(defun magit-diff-default-hunks ()magit-diff-default-hunks2595,97304
(defun magit-toggle-diff-refine-hunk (&optional other)magit-toggle-diff-refine-hunk2601,97468
(defun magit-diff-line-file ()magit-diff-line-file2638,98903
(defun magit-wash-diffs ()magit-wash-diffs2646,99149
(defun magit-wash-diff-or-other-file ()magit-wash-diff-or-other-file2649,99234
(defun magit-wash-other-file ()magit-wash-other-file2653,99331
(defvar magit-hide-diffs nil)magit-hide-diffs2663,99651
(defvar magit-indentation-level 1)magit-indentation-level2665,99682
(defun magit-insert-diff-title (status file file2)magit-insert-diff-title2667,99718
(defvar magit-current-diff-range nilmagit-current-diff-range2686,100547
(defun magit-wash-typechange-section (file)magit-wash-typechange-section2689,100643
(defun magit-wash-diff-section ()magit-wash-diff-section2708,101419
(defun magit-wash-diff ()magit-wash-diff2762,104074
(defun magit-diff-item-kind (diff)magit-diff-item-kind2767,104244
(defun magit-diff-item-file (diff)magit-diff-item-file2770,104315
(defun magit-diff-item-file2 (diff)magit-diff-item-file22773,104387
(defun magit-diff-item-range (diff)magit-diff-item-range2776,104461
(defun magit-wash-hunk ()magit-wash-hunk2779,104535
(defvar magit-diff-options nil)magit-diff-options2816,106338
(defun magit-insert-diff (file status)magit-insert-diff2818,106371
(defvar magit-last-raw-diff nil)magit-last-raw-diff2839,107048
(defvar magit-ignore-unmerged-raw-diffs nil)magit-ignore-unmerged-raw-diffs2840,107081
(defun magit-wash-raw-diffs ()magit-wash-raw-diffs2842,107127
(defun magit-wash-raw-diff ()magit-wash-raw-diff2846,107244
(defun magit-hunk-item-diff (hunk)magit-hunk-item-diff2883,109085
(defun magit-diff-item-insert-header (diff buf)magit-diff-item-insert-header2889,109272
(defun magit-insert-diff-item-patch (diff buf)magit-insert-diff-item-patch2899,109672
(defun magit-insert-hunk-item-patch (hunk buf)magit-insert-hunk-item-patch2907,109942
(defun magit-insert-hunk-item-region-patch (hunk reverse beg end buf)magit-insert-hunk-item-region-patch2912,110164
(defun magit-hunk-item-is-conflict-p (hunk)magit-hunk-item-is-conflict-p2933,111057
(defun magit-hunk-item-target-line (hunk)magit-hunk-item-target-line2938,111250
(defvar magit-file-name ()magit-file-name2954,111832
(defvar magit-show-current-version ()magit-show-current-version2958,111963
(defun magit-save-index ()magit-save-index2962,112121
(defun magit-show (commit filename &optional select prefix)magit-show2978,112895
(defmacro with-magit-tmp-buffer (var &rest body)with-magit-tmp-buffer3028,115157
(defun magit-apply-diff-item (diff &rest args)magit-apply-diff-item3036,115405
(defun magit-apply-hunk-item* (hunk reverse &rest args)magit-apply-hunk-item*3044,115702
(defun magit-apply-hunk-item (hunk &rest args)magit-apply-hunk-item3068,116771
(defun magit-apply-hunk-item-reverse (hunk &rest args)magit-apply-hunk-item-reverse3071,116869
(defvar magit-git-log-optionsmagit-git-log-options3098,117971
(defconst magit-ref-nonchars "\000-\037\177 ~^:?*[\\"magit-ref-nonchars3110,118300
(defconst magit-ref-nonslash-remagit-ref-nonslash-re3115,118485
(defconst magit-refname-remagit-refname-re3126,118871
(defconst magit-log-oneline-remagit-log-oneline-re3153,119414
(defconst magit-log-longline-remagit-log-longline-re3170,119846
(defvar magit-present-log-line-function 'magit-present-log-linemagit-present-log-line-function3191,120476
(defun magit-log-get-bisect-state-color (suffix)magit-log-get-bisect-state-color3196,120715
(defun magit-log-get-patches-color (suffix)magit-log-get-patches-color3201,120901
(defvar magit-log-remotes-color-hook nil)magit-log-remotes-color-hook3206,121073
(defun magit-log-get-remotes-color (suffix)magit-log-get-remotes-color3208,121116
(defvar magit-refs-namespacesmagit-refs-namespaces3214,121294
(defun magit-ref-get-label-color (r)magit-ref-get-label-color3221,121547
(defun magit-present-log-line (graph sha1 refs message)magit-present-log-line3242,122547
(defvar magit-log-count ()magit-log-count3268,123434
(defmacro magit-create-log-buffer-sections (&rest body)magit-create-log-buffer-sections3271,123541
(defun magit-wash-log-line (style)magit-wash-log-line3285,124133
(defun magit-wash-log (&optional style)magit-wash-log3316,125331
(defvar magit-currently-shown-commit nil)magit-currently-shown-commit3320,125482
(defun magit-wash-commit ()magit-wash-commit3322,125525
(defun make-commit-button (start end)make-commit-button3374,128091
(defun magit-refresh-commit-buffer (commit)magit-refresh-commit-buffer3385,128534
(define-derived-mode magit-commit-mode magit-mode "Magit"magit-commit-mode3399,129000
(defvar magit-commit-buffer-name "*magit-commit*"magit-commit-buffer-name3405,129134
(defun magit-show-commit (commit &optional scroll inhibit-history select)magit-show-commit3408,129238
(defun magit-show-commit-backward (&optional ignored)magit-show-commit-backward3457,131266
(defun magit-show-commit-forward (&optional ignored)magit-show-commit-forward3471,131886
(defvar magit-marked-commit nil)magit-marked-commit3485,132507
(defvar magit-mark-overlay nil)magit-mark-overlay3487,132541
(defun magit-refresh-marked-commits ()magit-refresh-marked-commits3491,132668
(defun magit-refresh-marked-commits-in-buffer ()magit-refresh-marked-commits-in-buffer3494,132776
(defun magit-set-marked-commit (commit)magit-set-marked-commit3510,133408
(defun magit-marked-commit ()magit-marked-commit3514,133519
(defun magit-remote-branch-name (remote branch)magit-remote-branch-name3518,133611
(defun magit-remote-branch-for (local-branch &optional fully-qualified-name)magit-remote-branch-for3540,134425
(defvar magit-remote-string-hook nil)magit-remote-string-hook3557,135136
(defun magit-remote-string (remote remote-branch remote-rebase)magit-remote-string3559,135175
(defun magit-refresh-status ()magit-refresh-status3577,135753
(defun magit-init (dir)magit-init3624,138145
(define-derived-mode magit-status-mode magit-mode "Magit"magit-status-mode3642,138966
(defvar magit-default-directory nil)magit-default-directory3648,139105
(defun magit-save-some-buffers (&optional msg pred)magit-save-some-buffers3650,139143
(defun magit-save-buffers-predicate-all ()magit-save-buffers-predicate-all3674,140158
(defun magit-save-buffers-predicate-tree-only ()magit-save-buffers-predicate-tree-only3678,140260
(defun magit-status (dir)magit-status3686,140614
(defun magit-stage-item (&optional ask)magit-stage-item3739,142812
(defun magit-unstage-item ()magit-unstage-item3775,144072
(defun magit-stage-all (&optional also-untracked-p)magit-stage-all3803,145002
(defun magit-unstage-all ()magit-unstage-all3812,145340
(defun escape-branch-name (branch)escape-branch-name3820,145504
(defun magit-default-tracking-name-remote-plus-branch (remote branch)magit-default-tracking-name-remote-plus-branch3824,145651
(defun magit-default-tracking-name-branch-only (remote branch)magit-default-tracking-name-branch-only3828,145863
(defun magit-get-tracking-name (remote branch)magit-get-tracking-name3832,146018
(defun magit-maybe-create-local-tracking-branch (rev)magit-maybe-create-local-tracking-branch3847,146729
(defun magit-read-create-branch-args ()magit-read-create-branch-args3880,148219
(defun magit-delete-branch (branch &optional force)magit-delete-branch3906,149350
(defun magit-move-branch (old new &optional force)magit-move-branch3931,150457
(defun magit-guess-branch ()magit-guess-branch3943,150947
(defun magit-add-remote (remote url)magit-add-remote3967,151887
(defun magit-remove-remote (remote)magit-remove-remote3974,152135
(defun magit-rename-remote (old new)magit-rename-remote3980,152324
(defun magit-guess-remote ()magit-guess-remote3987,152571
(defun magit-merge (revision)magit-merge4000,152829
(defun magit-rebase-info ()magit-rebase-info4014,153261
(defun magit-rebase-step ()magit-rebase-step4048,154940
(defun magit-read-rewrite-info ()magit-read-rewrite-info4125,158316
(defun magit-write-rewrite-info (info)magit-write-rewrite-info4132,158581
(defun magit-rewrite-set-commit-property (commit prop value)magit-rewrite-set-commit-property4159,159604
(defun magit-rewrite-set-used ()magit-rewrite-set-used4168,159923
(defun magit-rewrite-set-unused ()magit-rewrite-set-unused4174,160088
(defun magit-rewrite-start (from &optional onto)magit-rewrite-start4190,160635
(defun magit-rewrite-stop (&optional noconfirm)magit-rewrite-stop4213,161562
(defun magit-rewrite-abort ()magit-rewrite-abort4223,161857
(defun magit-rewrite-finish ()magit-rewrite-finish4235,162252
(defun magit-rewrite-finish-step (first-p)magit-rewrite-finish-step4240,162358
(defun magit-parse-arguments (command)magit-parse-arguments4294,164373
(defun magit-shell-command (command)magit-shell-command4300,164544
(defvar magit-git-command-history nil)magit-git-command-history4307,164771
(defun magit-git-command (command)magit-git-command4309,164811
(defvar magit-log-edit-buffer-name "*magit-edit-log*"magit-log-edit-buffer-name4382,168027
(defvar magit-log-edit-mode-mapmagit-log-edit-mode-map4385,168130
(defvar magit-pre-log-edit-window-configuration nil)magit-pre-log-edit-window-configuration4402,169070
(define-derived-mode magit-log-edit-mode text-mode "Magit Log Edit"magit-log-edit-mode4404,169124
(defun magit-log-edit-cleanup ()magit-log-edit-cleanup4409,169326
(defun magit-log-edit-append (str)magit-log-edit-append4416,169522
(defconst magit-log-header-end "-- End of Magit header --\n")magit-log-header-end4421,169680
(defun magit-log-edit-get-fields ()magit-log-edit-get-fields4423,169743
(defun magit-log-edit-set-fields (fields)magit-log-edit-set-fields4438,170335
(defun magit-log-edit-set-field (name value)magit-log-edit-set-field4454,171022
(defun magit-log-edit-get-field (name)magit-log-edit-get-field4466,171418
(defun magit-log-edit-toggle-field (name default)magit-log-edit-toggle-field4469,171507
(defun magit-log-edit-toggle-input (name default)magit-log-edit-toggle-input4487,172146
(defun magit-log-edit-setup-author-env (author)magit-log-edit-setup-author-env4505,172709
(defun magit-log-edit-push-to-comment-ring (comment)magit-log-edit-push-to-comment-ring4523,173425
(defun magit-log-edit-commit ()magit-log-edit-commit4528,173648
(defun magit-log-edit-cancel-log-message ()magit-log-edit-cancel-log-message4597,176942
(defun magit-log-edit-toggle-amending ()magit-log-edit-toggle-amending4609,177434
(defun magit-log-edit-toggle-signoff ()magit-log-edit-toggle-signoff4617,177772
(defun magit-log-edit-toggle-author ()magit-log-edit-toggle-author4623,178015
(defun magit-log-edit-toggle-allow-empty ()magit-log-edit-toggle-allow-empty4632,178458
(defun magit-pop-to-log-edit (operation)magit-pop-to-log-edit4638,178691
(defun magit-log-edit (&optional arg)magit-log-edit4653,179329
(defun magit-add-log ()magit-add-log4703,181792
(defun magit-wash-stash ()magit-wash-stash4784,185357
(defun magit-wash-stashes ()magit-wash-stashes4800,185932
(defvar magit-currently-shown-stash nil)magit-currently-shown-stash4827,187075
(define-derived-mode magit-stash-mode magit-mode "Magit Stash"magit-stash-mode4829,187117
(defvar magit-stash-buffer-name "*magit-stash*"magit-stash-buffer-name4835,187261
(defun magit-show-stash (stash &optional scroll)magit-show-stash4838,187351
(defun magit-commit-at-point (&optional nil-ok-p)magit-commit-at-point4866,188539
(defun magit-apply-commit (commit &optional docommit noerase revert)magit-apply-commit4877,188936
(defun magit-apply-item ()magit-apply-item4899,189949
(defun magit-cherry-pick-item ()magit-cherry-pick-item4918,190487
(defmacro magit-with-revert-confirmation (&rest body)magit-with-revert-confirmation4929,190801
(defun magit-revert-item ()magit-revert-item4934,190971
(defun magit-log-show-more-entries (&optional arg)magit-log-show-more-entries4954,191606
(defun magit-refresh-log-buffer (range style args)magit-refresh-log-buffer4972,192270
(define-derived-mode magit-log-mode magit-mode "Magit Log"magit-log-mode4994,193152
(defvar magit-log-buffer-name "*magit-log*"magit-log-buffer-name5000,193286
(define-obsolete-function-alias 'magit-display-log-ranged 'magit-log-ranged)magit-display-log-ranged5006,193445
(define-obsolete-function-alias 'magit-display-log 'magit-log)magit-display-log5021,194104
(defvar magit-reflog-head nilmagit-reflog-head5041,194766
(defun magit-refresh-reflog-buffer (head args)magit-refresh-reflog-buffer5046,194936
(define-derived-mode magit-reflog-mode magit-log-mode "Magit Reflog"magit-reflog-mode5057,195368
(defvar magit-ediff-buffers nilmagit-ediff-buffers5080,196080
(defvar magit-ediff-windows nilmagit-ediff-windows5083,196179
(defun magit-ediff()magit-ediff5086,196288
(defun magit-ediff-add-cleanup ()magit-ediff-add-cleanup5118,197606
(defun magit-ediff* (a b &optional c)magit-ediff*5127,197883
(defun magit-ediff-restore()magit-ediff-restore5134,198143
(defun magit-refresh-diff-buffer (range args)magit-refresh-diff-buffer5149,198740
(define-derived-mode magit-diff-mode magit-mode "Magit Diff"magit-diff-mode5164,199423
(defun magit-diff-with-mark ()magit-diff-with-mark5184,200112
(defvar magit-wazzup-head nilmagit-wazzup-head5191,200261
(defvar magit-wazzup-all-p nilmagit-wazzup-all-p5196,200437
(defun magit-wazzup-toggle-ignore (branch edit)magit-wazzup-toggle-ignore5201,200631
(defun magit-refresh-wazzup-buffer (head all)magit-refresh-wazzup-buffer5215,201254
(define-derived-mode magit-wazzup-mode magit-mode "Magit Wazzup"magit-wazzup-mode5265,203823
(defun magit-wazzup (&optional all)magit-wazzup5271,204007
(defun magit-filename (filename)magit-filename5280,204356
(defvar magit-file-log-file nil)magit-file-log-file5298,205180
(defun magit-refresh-file-log-buffer (file range style)magit-refresh-file-log-buffer5301,205264
(defun magit-file-log (&optional all)magit-file-log5331,206444
(defun magit-show-file-revision ()magit-show-file-revision5348,207181
(defun magit-edit-ignore-string (file)magit-edit-ignore-string5366,207984
(defun magit-ignore-file (file &optional edit-ignore-string local)magit-ignore-file5376,208488
(defun magit--ignore-item (arg &optional local)magit--ignore-item5400,209473
(defun magit-ignore-item ()magit-ignore-item5408,209749
(defun magit-ignore-item-locally ()magit-ignore-item-locally5413,209867
(defun magit-discard-diff (diff stagedp)magit-discard-diff5418,210008
(defun magit-discard-item ()magit-discard-item5434,210701
(defun magit-move-item ()magit-move-item5491,212871
(defmacro magit-visiting-file-item (&rest body)magit-visiting-file-item5499,213081
(defun magit-add-change-log-entry-no-option (&optional other-window)magit-add-change-log-entry-no-option5508,213390
(defun magit-add-change-log-entry-other-window ()magit-add-change-log-entry-other-window5517,213793
(defun magit-visit-file-item (&optional other-window)magit-visit-file-item5537,214537
(defun magit-visit-item (&optional other-window)magit-visit-item5570,215714
(defun magit-show-item-or-scroll-up ()magit-show-item-or-scroll-up5591,216341
(defun magit-show-item-or-scroll-down ()magit-show-item-or-scroll-down5601,216572
(defun magit-mark-item (&optional unmark)magit-mark-item5611,216811
(defun magit-describe-item ()magit-describe-item5621,217135
(defun magit-copy-item-as-kill ()magit-copy-item-as-kill5632,217535
(defun magit-server-running-p ()magit-server-running-p5642,217780
(defun magit-interactive-rebase ()magit-interactive-rebase5670,218924
(define-derived-mode magit-branch-manager-mode magit-mode "Magit Branch"magit-branch-manager-mode5690,219877
(defun magit-quit-window (&optional kill-buffer)magit-quit-window5693,219971
(defun magit--branch-name-at-point ()magit--branch-name-at-point5699,220180
(defun magit--branches-for-remote-repo (remote)magit--branches-for-remote-repo5704,220375
(defvar magit-branches-buffer-name "*magit-branches*")magit-branches-buffer-name5716,220908
(defun magit--is-branch-at-point-remote ()magit--is-branch-at-point-remote5718,220964
(defun magit-remote-part-of-branch (branch)magit-remote-part-of-branch5722,221141
(defun magit-branch-no-remote (branch)magit-branch-no-remote5727,221417
(defun magit-wash-branch-line (&optional remote-name)magit-wash-branch-line5737,221828
(defun magit-wash-remote-branches-group (group)magit-wash-remote-branches-group5830,225465
(defun magit-wash-branches-between-point-and-marker (marker &optional remote-name)magit-wash-branches-between-point-and-marker5845,226157
(defun magit-wash-branches ()magit-wash-branches5853,226444
(defun magit-refresh-branch-manager ()magit-refresh-branch-manager5891,228014
(defun magit-change-what-branch-tracks ()magit-change-what-branch-tracks5904,228536
(defvar magit-ediff-file)magit-ediff-file5936,230338
(defun magit-interactive-resolve (file)magit-interactive-resolve5938,230365
(defun magit-interactive-resolve-item ()magit-interactive-resolve-item5979,232436
(defun magit-submodule-update (&optional init)magit-submodule-update5985,232599
(defun magit-submodule-update-init ()magit-submodule-update-init5992,232920
(defun magit-submodule-init ()magit-submodule-init5997,233070
(defun magit-submodule-sync ()magit-submodule-sync6003,233262
(defun magit-run-git-gui ()magit-run-git-gui6009,233479
(defun magit-run-gitk ()magit-run-gitk6015,233711
(defun magit-load-config-extensions ()magit-load-config-extensions6043,235058

/home/malk/.emacs.d/elpa/magit-20130123.1617/magit-topgit.el,1292
(defcustom magit-topgit-executable "tg"magit-topgit-executable29,903
(defcustom magit-topgit-branch-prefix "t/"magit-topgit-branch-prefix34,1016
(defface magit-topgit-currentmagit-topgit-current39,1142
(defun magit-topgit-in-topic-p ()magit-topgit-in-topic-p46,1304
(defun magit-topgit-create-branch (branch parent)magit-topgit-create-branch50,1424
(defun magit-topgit-pull ()magit-topgit-pull57,1698
(defun magit-topgit-push ()magit-topgit-push63,1856
(defun magit-topgit-remote-update (&optional remote)magit-topgit-remote-update77,2473
(defun magit-topgit-parse-flags (flags-string)magit-topgit-parse-flags94,3183
(defun magit-topgit-wash-topic ()magit-topgit-wash-topic100,3411
(defun magit-topgit-wash-topics ()magit-topgit-wash-topics121,4392
(defun magit-topgit-section (section title washer &rest args)magit-topgit-section125,4519
(defun magit-topgit-get-top-bases-color (suffix)magit-topgit-get-top-bases-color146,5229
(defun magit-topgit-get-remote-top-bases-color (suffix)magit-topgit-get-remote-top-bases-color149,5297
(defconst magit-topgit-ignored-namespacemagit-topgit-ignored-namespace153,5432
(define-minor-mode magit-topgit-mode "Topgit support for Magit"magit-topgit-mode157,5540
(defun turn-on-magit-topgit ()turn-on-magit-topgit186,7152

/home/malk/.emacs.d/elpa/ido-ubiquitous-20121214.2145/ido-ubiquitous-autoloads.el,837
(defvar ido-ubiquitous-mode nil "\ido-ubiquitous-mode14,593
(define-obsolete-variable-alias 'ido-ubiquitous 'ido-ubiquitous-mode "0.8")ido-ubiquitous38,1533
(define-obsolete-function-alias 'ido-ubiquitous 'ido-ubiquitous-mode "0.8")ido-ubiquitous40,1610
(defvar ido-ubiquitous-command-exceptions 'nil "\ido-ubiquitous-command-exceptions42,1687
(define-obsolete-variable-alias 'ido-ubiquitous-exceptions 'ido-ubiquitous-command-exceptions "0.4")ido-ubiquitous-exceptions60,2407
(defvar ido-ubiquitous-function-exceptions '(grep-read-files) "\ido-ubiquitous-function-exceptions62,2509
(defvar ido-ubiquitous-command-compatibility-exceptions 'nil "\ido-ubiquitous-command-compatibility-exceptions76,3030
(defvar ido-ubiquitous-function-compatibility-exceptions 'nil "\ido-ubiquitous-function-compatibility-exceptions90,3622

/home/malk/.emacs.d/elpa/ido-ubiquitous-20121214.2145/ido-ubiquitous-pkg.el,131
(define-package "ido-ubiquitous" "20121214.2145" "Use ido (nearly) everywhere. [source: github]" (quote nil))"ido-ubiquitous"1,0

/home/malk/.emacs.d/elpa/ido-ubiquitous-20121214.2145/ido-ubiquitous.el,2885
(defvar ido-ubiquitous-orig-completing-read-functionido-ubiquitous-orig-completing-read-function59,2221
(defgroup ido-ubiquitous nilido-ubiquitous68,2588
(define-minor-mode ido-ubiquitous-modeido-ubiquitous-mode73,2689
(define-obsolete-variable-alias 'ido-ubiquitousido-ubiquitous109,4088
(define-obsolete-function-alias 'ido-ubiquitousido-ubiquitous112,4181
(defcustom ido-ubiquitous-command-exceptions '()ido-ubiquitous-command-exceptions116,4275
(define-obsolete-variable-alias 'ido-ubiquitous-exceptionsido-ubiquitous-exceptions135,5006
(defvar ido-next-call-replaces-completing-read nil)ido-next-call-replaces-completing-read138,5110
(defvar ido-this-call-replaces-completing-read nil)ido-this-call-replaces-completing-read139,5162
(defadvice completing-read (around ido-ubiquitous-legacy activate)completing-read142,5237
(defun completing-read-ido (prompt collection &optional predicatecompleting-read-ido166,6279
(defadvice ido-completing-read (around detect-replacing-cr activate)ido-completing-read195,7737
(defmacro ido-ubiquitous-disable-in (func)ido-ubiquitous-disable-in223,9236
(defmacro ido-ubiquitous-enable-in (func)ido-ubiquitous-enable-in236,9619
(defvar ido-ubiquitous-permanent-function-exceptionsido-ubiquitous-permanent-function-exceptions252,10152
(defun ido-ubiquitous--set-difference (list1 list2)ido-ubiquitous--set-difference268,10657
(defun ido-ubiquitous-set-function-exceptions (sym newval)ido-ubiquitous-set-function-exceptions274,10870
(defcustom ido-ubiquitous-function-exceptionsido-ubiquitous-function-exceptions290,11635
(defcustom ido-ubiquitous-enable-compatibility tido-ubiquitous-enable-compatibility307,12234
(defcustom ido-ubiquitous-command-compatibility-exceptions '()ido-ubiquitous-command-compatibility-exceptions340,13708
(defvar ido-ubiquitous-initial-item nilido-ubiquitous-initial-item354,14282
(defadvice ido-read-internal (before clear-initial-item activate)ido-read-internal357,14369
(defadvice ido-make-choice-list (after set-initial-item activate)ido-make-choice-list360,14478
(defadvice ido-next-match (after clear-initial-item activate)ido-next-match364,14662
(defadvice ido-prev-match (after clear-initial-item activate)ido-prev-match367,14767
(defadvice ido-exit-minibuffer (around compatibility activate)ido-exit-minibuffer370,14872
(defmacro ido-ubiquitous-disable-compatibility-in (func)ido-ubiquitous-disable-compatibility-in397,15961
(defmacro ido-ubiquitous-enable-compatibility-in (func)ido-ubiquitous-enable-compatibility-in405,16307
(defun ido-ubiquitous-set-function-compatibility-exceptions (sym newval)ido-ubiquitous-set-function-compatibility-exceptions414,16701
(defcustom ido-ubiquitous-function-compatibility-exceptionsido-ubiquitous-function-compatibility-exceptions427,17232
(defun ido-ubiquitous-initialize ()ido-ubiquitous-initialize444,17884

/home/malk/.emacs.d/elpa/auto-complete-20130122.1551/auto-complete-autoloads.el,0

/home/malk/.emacs.d/elpa/auto-complete-20130122.1551/auto-complete-pkg.el,117
(define-package "auto-complete" "20130122.1551" "Auto Completion for GNU Emacs [source: github]""auto-complete"1,0

/home/malk/.emacs.d/elpa/auto-complete-20130122.1551/auto-complete-config.el,2072
(defvar ac-imenu-index nil)ac-imenu-index39,990
(defun ac-imenu-candidates ()ac-imenu-candidates43,1073
(defface ac-gtags-candidate-faceac-gtags-candidate-face81,2423
(defface ac-gtags-selection-faceac-gtags-selection-face86,2568
(defun ac-gtags-candidate ()ac-gtags-candidate91,2727
(defface ac-yasnippet-candidate-faceac-yasnippet-candidate-face104,3073
(defface ac-yasnippet-selection-faceac-yasnippet-selection-face110,3270
(defun ac-yasnippet-table-hash (table)ac-yasnippet-table-hash115,3439
(defun ac-yasnippet-table-parent (table)ac-yasnippet-table-parent122,3621
(defun ac-yasnippet-candidate-1 (table)ac-yasnippet-candidate-1129,3813
(defun ac-yasnippet-candidates ()ac-yasnippet-candidates143,4310
(defun ac-semantic-candidates (prefix)ac-semantic-candidates176,5473
(defun ac-semantic-doc (symbol)ac-semantic-doc187,5984
(defun ac-eclim-candidates ()ac-eclim-candidates214,6799
(defconst ac-css-property-alistac-css-property-alist228,7085
(defconst ac-css-value-classesac-css-value-classes367,13317
(defconst ac-css-pseudo-classesac-css-pseudo-classes385,14126
(defvar ac-css-property nilac-css-property390,14360
(defun ac-css-prefix ()ac-css-prefix393,14420
(defun ac-css-property-candidates ()ac-css-property-candidates398,14613
(defvar ac-ropemacs-loaded nil)ac-ropemacs-loaded439,15713
(defun ac-ropemacs-require ()ac-ropemacs-require440,15745
(defun ac-ropemacs-setup ()ac-ropemacs-setup448,15997
(defun ac-ropemacs-initialize ()ac-ropemacs-initialize453,16185
(defvar ac-ropemacs-completions-cache nil)ac-ropemacs-completions-cache462,16468
(defvar ac-source-ropemacsac-source-ropemacs463,16511
(defvar ac-source-rcodetoolsac-source-rcodetools476,16860
(defun ac-common-setup ()ac-common-setup495,17508
(defun ac-emacs-lisp-mode-setup ()ac-emacs-lisp-mode-setup499,17588
(defun ac-cc-mode-setup ()ac-cc-mode-setup502,17765
(defun ac-ruby-mode-setup ())ac-ruby-mode-setup505,17873
(defun ac-css-mode-setup ()ac-css-mode-setup507,17904
(defun ac-config-default ()ac-config-default510,18000

/home/malk/.emacs.d/elpa/auto-complete-20130122.1551/auto-complete.el,14479
(defun ac-error (&optional var)ac-error53,1424
(defgroup auto-complete nilauto-complete64,1633
(defcustom ac-delay 0.1ac-delay69,1721
(defcustom ac-auto-show-menu 0.8ac-auto-show-menu74,1830
(defcustom ac-show-menu-immediately-on-auto-complete tac-show-menu-immediately-on-auto-complete81,2071
(defcustom ac-expand-on-auto-complete tac-expand-on-auto-complete86,2239
(defcustom ac-disable-faces '(font-lock-comment-face font-lock-string-face font-lock-doc-face)ac-disable-faces91,2396
(defcustom ac-stop-flymake-on-completing tac-stop-flymake-on-completing96,2609
(defcustom ac-use-fuzzy (and (locate-library "fuzzy") t)ac-use-fuzzy101,2755
(defcustom ac-fuzzy-cursor-color "red"ac-fuzzy-cursor-color106,2893
(defcustom ac-use-comphist tac-use-comphist111,3006
(defcustom ac-comphist-threshold 0.7ac-comphist-threshold116,3132
(defcustom ac-comphist-fileac-comphist-file121,3260
(defcustom ac-user-dictionary nilac-user-dictionary130,3574
(defcustom ac-dictionary-files '("~/.dict")ac-dictionary-files135,3687
(defvaralias 'ac-user-dictionary-files 'ac-dictionary-files)ac-user-dictionary-files139,3803
(defcustom ac-dictionary-directoriesac-dictionary-directories141,3865
(defcustom ac-use-quick-help tac-use-quick-help153,4257
(defcustom ac-quick-help-delay 1.5ac-quick-help-delay158,4365
(defcustom ac-menu-height 10ac-menu-height163,4471
(defvaralias 'ac-candidate-menu-height 'ac-menu-height)ac-candidate-menu-height167,4576
(defcustom ac-quick-help-height 20ac-quick-help-height169,4633
(defcustom ac-quick-help-prefer-pos-tip tac-quick-help-prefer-pos-tip174,4741
(defvaralias 'ac-quick-help-prefer-x 'ac-quick-help-prefer-pos-tip)ac-quick-help-prefer-x178,4910
(defcustom ac-candidate-limit nilac-candidate-limit180,4979
(defvaralias 'ac-candidate-max 'ac-candidate-limit)ac-candidate-max184,5115
(defcustom ac-modesac-modes186,5168
(defcustom ac-compatible-packages-regexpac-compatible-packages-regexp204,5806
(defcustom ac-non-trigger-commandsac-non-trigger-commands210,5964
(defcustom ac-trigger-commandsac-trigger-commands216,6152
(defcustom ac-trigger-commands-on-completingac-trigger-commands-on-completing222,6338
(defcustom ac-trigger-key nilac-trigger-key235,6716
(defcustom ac-auto-start 2ac-auto-start248,7251
(defcustom ac-stop-words nilac-stop-words258,7666
(defvaralias 'ac-ignores 'ac-stop-words)ac-ignores262,7784
(defcustom ac-use-dictionary-as-stop-words tac-use-dictionary-as-stop-words264,7826
(defcustom ac-ignore-case 'smartac-ignore-case269,7994
(defcustom ac-dwim tac-dwim278,8332
(defcustom ac-use-menu-map nilac-use-menu-map283,8461
(defcustom ac-use-overriding-local-map nilac-use-overriding-local-map288,8617
(defcustom ac-disable-inline nilac-disable-inline293,8810
(defcustom ac-candidate-menu-min 1ac-candidate-menu-min298,8935
(defface ac-completion-faceac-completion-face303,9063
(defface ac-candidate-faceac-candidate-face308,9195
(defface ac-candidate-mouse-faceac-candidate-mouse-face313,9303
(defface ac-selection-faceac-selection-face318,9429
(defvar auto-complete-mode-hook nilauto-complete-mode-hook323,9561
(defvar auto-complete-mode nilauto-complete-mode330,9662
(defvar ac-cursor-color nilac-cursor-color333,9745
(defvar ac-inline nilac-inline336,9797
(defvar ac-menu nilac-menu339,9853
(defvar ac-show-menu nilac-show-menu342,9894
(defvar ac-last-completion nilac-last-completion345,9958
(defvar ac-quick-help nilac-quick-help348,10055
(defvar ac-completing nilac-completing351,10107
(defvar ac-buffer nilac-buffer354,10204
(defvar ac-point nilac-point357,10271
(defvar ac-last-point nilac-last-point360,10321
(defvar ac-prefix nilac-prefix363,10385
(defvaralias 'ac-target 'ac-prefix)ac-target365,10427
(defvar ac-selected-candidate nilac-selected-candidate367,10464
(defvar ac-common-part nilac-common-part370,10529
(defvar ac-whole-common-part nilac-whole-common-part374,10653
(defvar ac-prefix-overlay nilac-prefix-overlay378,10778
(defvar ac-timer nilac-timer381,10841
(defvar ac-show-menu-timer nilac-show-menu-timer384,10891
(defvar ac-quick-help-timer nilac-quick-help-timer387,10950
(defvar ac-triggered nilac-triggered390,11011
(defvar ac-limit nilac-limit393,11058
(defvar ac-candidates nilac-candidates396,11130
(defvar ac-candidates-cache nilac-candidates-cache399,11182
(defvar ac-fuzzy-enable nilac-fuzzy-enable402,11261
(defvar ac-dwim-enable nilac-dwim-enable405,11336
(defvar ac-mode-map (make-sparse-keymap)ac-mode-map408,11416
(defvar ac-completing-mapac-completing-map411,11555
(defvaralias 'ac-complete-mode-map 'ac-completing-map)ac-complete-mode-map445,12761
(defvar ac-menu-mapac-menu-map447,12817
(defvar ac-current-mapac-current-map460,13270
(defvar ac-match-function 'all-completionsac-match-function465,13386
(defvar ac-prefix-definitionsac-prefix-definitions468,13459
(defvar ac-sources '(ac-source-words-in-same-mode-buffers)ac-sources477,13737
(defvar ac-compiled-sources nilac-compiled-sources481,13867
(defvar ac-current-sources nilac-current-sources484,13938
(defvar ac-omni-completion-sources nilac-omni-completion-sources487,14042
(defvar ac-current-prefix-def nil)ac-current-prefix-def490,14112
(defvar ac-ignoring-prefix-def nil)ac-ignoring-prefix-def492,14148
(defvar ac-comphist nilac-comphist498,14225
(defsubst ac-comphist-make-tab ()ac-comphist-make-tab501,14287
(defsubst ac-comphist-tab (db)ac-comphist-tab504,14356
(defsubst ac-comphist-cache (db)ac-comphist-cache507,14402
(defun ac-comphist-make (&optional tab)ac-comphist-make510,14450
(defun ac-comphist-get (db string &optional create)ac-comphist-get513,14576
(defun ac-comphist-add (db string prefix)ac-comphist-add521,14837
(defun ac-comphist-score (db string prefix)ac-comphist-score529,15132
(defun ac-comphist-sort (db collection prefix &optional threshold)ac-comphist-sort555,16283
(defun ac-comphist-serialize (db)ac-comphist-serialize577,17197
(defun ac-comphist-deserialize (sexp)ac-comphist-deserialize584,17368
(defun ac-comphist-init ()ac-comphist-init593,17736
(defun ac-comphist-load ()ac-comphist-load597,17834
(defun ac-comphist-save ()ac-comphist-save607,18225
(defvar ac-buffer-dictionary nil)ac-buffer-dictionary618,18472
(defvar ac-file-dictionary (make-hash-table :test 'equal))ac-file-dictionary619,18506
(defun ac-clear-dictionary-cache ()ac-clear-dictionary-cache621,18566
(defun ac-file-dictionary (filename)ac-file-dictionary629,18824
(defun ac-mode-dictionary (mode)ac-mode-dictionary641,19233
(defun ac-buffer-dictionary (&optional buffer)ac-buffer-dictionary649,19617
(defun ac-menu-at-wrapper-line-p ()ac-menu-at-wrapper-line-p664,20102
(defun ac-stop-word-p (word)ac-stop-word-p672,20383
(defun ac-prefix-default ()ac-prefix-default677,20539
(defun ac-prefix-symbol ()ac-prefix-symbol687,20864
(defun ac-prefix-file ()ac-prefix-file692,21004
(defun ac-prefix-valid-file ()ac-prefix-valid-file697,21136
(defun ac-prefix-c-dot ()ac-prefix-c-dot711,21746
(defun ac-prefix-c-dot-ref ()ac-prefix-c-dot-ref716,21918
(defun ac-prefix-cc-member ()ac-prefix-cc-member721,22125
(defun ac-define-prefix (name prefix)ac-define-prefix726,22330
(defun ac-match-substring (prefix candidates)ac-match-substring731,22518
(defsubst ac-source-entity (source)ac-source-entity737,22716
(defun ac-source-available-p (source)ac-source-available-p742,22817
(defun ac-compile-sources (sources)ac-compile-sources763,23720
(defun ac-compiled-sources ()ac-compiled-sources784,24460
(defsubst ac-menu-live-p ()ac-menu-live-p789,24596
(defun ac-menu-create (point width height)ac-menu-create792,24651
(defun ac-menu-delete ()ac-menu-delete805,25120
(defsubst ac-inline-overlay ()ac-inline-overlay810,25210
(defsubst ac-inline-live-p ()ac-inline-live-p813,25263
(defun ac-inline-show (point string)ac-inline-show816,25335
(defun ac-inline-delete ()ac-inline-delete872,27264
(defun ac-inline-hide ()ac-inline-hide878,27408
(defun ac-inline-update ()ac-inline-update888,27746
(defun ac-put-prefix-overlay ()ac-put-prefix-overlay899,28176
(defun ac-remove-prefix-overlay ()ac-remove-prefix-overlay913,28748
(defun ac-activate-completing-map ()ac-activate-completing-map923,29065
(defun ac-deactivate-completing-map ()ac-deactivate-completing-map932,29454
(defsubst ac-selected-candidate ()ac-selected-candidate940,29796
(defun ac-prefix (requires ignore-list)ac-prefix944,29884
(defun ac-init ()ac-init984,31485
(defun ac-candidates-1 (source)ac-candidates-1997,31857
(defun ac-candidates ()ac-candidates1040,34093
(defun ac-update-candidates (cursor scroll-top)ac-update-candidates1072,35805
(defun ac-reposition ()ac-reposition1092,36491
(defun ac-cleanup ()ac-cleanup1101,36853
(defsubst ac-abort ()ac-abort1148,38308
(defun ac-expand-string (string &optional remove-undo-boundary)ac-expand-string1152,38369
(defun ac-set-trigger-key (key)ac-set-trigger-key1186,39842
(defun ac-set-timer ()ac-set-timer1197,40228
(defun ac-cancel-timer ()ac-cancel-timer1201,40351
(defun ac-update (&optional force)ac-update1206,40458
(defun ac-update-greedy (&optional force)ac-update-greedy1227,41261
(defun ac-set-show-menu-timer ()ac-set-show-menu-timer1236,41579
(defun ac-cancel-show-menu-timer ()ac-cancel-show-menu-timer1241,41831
(defun ac-show-menu ()ac-show-menu1246,41978
(defun ac-help (&optional persist)ac-help1253,42130
(defun ac-persist-help ()ac-persist-help1258,42247
(defun ac-last-help (&optional persist)ac-last-help1262,42305
(defun ac-last-persist-help ()ac-last-persist-help1267,42455
(defun ac-set-quick-help-timer ()ac-set-quick-help-timer1271,42523
(defun ac-cancel-quick-help-timer ()ac-cancel-quick-help-timer1276,42740
(defun ac-pos-tip-show-quick-help (menu &optional item &rest args)ac-pos-tip-show-quick-help1281,42891
(defun ac-quick-help-use-pos-tip-p ()ac-quick-help-use-pos-tip-p1308,43865
(defun ac-quick-help (&optional force)ac-quick-help1313,43990
(defun ac-remove-quick-help ()ac-remove-quick-help1333,44716
(defun ac-last-quick-help ()ac-last-quick-help1341,44917
(defmacro ac-define-quick-help-command (name arglist &rest body)ac-define-quick-help-command1357,45517
(defun ac-isearch-callback (list)ac-isearch-callback1377,46001
(defun ac-isearch ()ac-isearch1380,46082
(defun* auto-complete-1 (&key sources (triggered 'command))auto-complete-11392,46324
(defun auto-complete (&optional sources)auto-complete1418,47326
(defun ac-fuzzy-complete ()ac-fuzzy-complete1423,47466
(defun ac-next ()ac-next1440,47999
(defun ac-previous ()ac-previous1449,48207
(defun ac-expand ()ac-expand1458,48431
(defun ac-expand-common ()ac-expand-common1475,49014
(defun ac-complete-1 (candidate)ac-complete-11487,49357
(defun ac-complete ()ac-complete1507,49969
(defun* ac-start (&keyac-start1512,50069
(defun ac-stop ()ac-stop1551,51501
(defun ac-ignore (&rest ignore)ac-ignore1557,51607
(defun ac-mouse-1 (event)ac-mouse-11561,51679
(defun ac-mouse-4 (event)ac-mouse-41566,51805
(defun ac-mouse-5 (event)ac-mouse-51570,51869
(defun ac-trigger-key-command (&optional force)ac-trigger-key-command1574,51929
(defvar ac-clear-variables-every-minute-timer nil)ac-clear-variables-every-minute-timer1586,52241
(defvar ac-clear-variables-after-save nil)ac-clear-variables-after-save1587,52292
(defvar ac-clear-variables-every-minute nil)ac-clear-variables-every-minute1588,52335
(defvar ac-minutes-counter 0)ac-minutes-counter1589,52380
(defun ac-clear-variable-after-save (variable &optional pred)ac-clear-variable-after-save1591,52411
(defun ac-clear-variables-after-save ()ac-clear-variables-after-save1594,52543
(defun ac-clear-variable-every-minutes (variable minutes)ac-clear-variable-every-minutes1600,52727
(defun ac-clear-variable-every-minute (variable)ac-clear-variable-every-minute1603,52860
(defun ac-clear-variable-every-10-minutes (variable)ac-clear-variable-every-10-minutes1606,52958
(defun ac-clear-variables-every-minute ()ac-clear-variables-every-minute1609,53061
(defun ac-cursor-on-diable-face-p (&optional point)ac-cursor-on-diable-face-p1619,53290
(defun ac-trigger-command-p (command)ac-trigger-command-p1622,53415
(defun ac-fallback-key-sequence ()ac-fallback-key-sequence1630,53763
(defun ac-fallback-command (&optional except-command)ac-fallback-command1636,53949
(defun ac-compatible-package-command-p (command)ac-compatible-package-command-p1645,54287
(defun ac-handle-pre-command ()ac-handle-pre-command1650,54504
(defun ac-handle-post-command ()ac-handle-post-command1668,55440
(defun ac-setup ()ac-setup1680,55831
(define-minor-mode auto-complete-modeauto-complete-mode1693,56367
(defun auto-complete-mode-maybe ()auto-complete-mode-maybe1710,57010
(define-global-minor-mode global-auto-complete-modeglobal-auto-complete-mode1716,57210
(defun ac-flyspell-workaround ()ac-flyspell-workaround1724,57381
(defun ac-linum-workaround ()ac-linum-workaround1733,57775
(defmacro ac-define-source (name source)ac-define-source1745,58088
(defvar ac-word-index nil)ac-word-index1759,58703
(defun ac-candidate-words-in-buffer (point prefix limit)ac-candidate-words-in-buffer1761,58731
(defun ac-incremental-update-word-index ()ac-incremental-update-word-index1785,59633
(defun ac-update-word-index-1 ()ac-update-word-index-11800,60186
(defun ac-update-word-index ()ac-update-word-index1811,60609
(defun ac-word-candidates (&optional buffer-pred)ac-word-candidates1818,60825
(defvar ac-symbols-cache nil)ac-symbols-cache1844,61869
(defun ac-symbol-file (symbol type)ac-symbol-file1847,61955
(defun ac-symbol-documentation (symbol)ac-symbol-documentation1879,63441
(defun ac-symbol-candidates ()ac-symbol-candidates1926,65217
(defvar ac-functions-cache nil)ac-functions-cache1942,65671
(defun ac-function-candidates ()ac-function-candidates1945,65761
(defvar ac-variables-cache nil)ac-variables-cache1960,66187
(defun ac-variable-candidates ()ac-variable-candidates1963,66277
(defvar ac-emacs-lisp-features nil)ac-emacs-lisp-features1977,66656
(defun ac-emacs-lisp-feature-candidates ()ac-emacs-lisp-feature-candidates1980,66754
(defvaralias 'ac-source-emacs-lisp-features 'ac-source-features)ac-source-emacs-lisp-features1998,67596
(defvar ac-filename-cache nil)ac-filename-cache2013,68041
(defun ac-filename-candidate ()ac-filename-candidate2015,68073

/home/malk/.emacs.d/elpa/fastnav-1.0.7/fastnav.el,2103
(defun fastnav-search-char-forward (arg char)fastnav-search-char-forward81,3596
(defun fastnav-search-char-backward (arg char)fastnav-search-char-backward96,4133
(defun fastnav-get-nth-chars (arg)fastnav-get-nth-chars103,4378
(defun fastnav-highlight-read-char (text arg forwarder backwarder)fastnav-highlight-read-char134,5551
(defun fastnav-highlight-read-char-backward (text arg forwarder backwarder)fastnav-highlight-read-char-backward188,7705
(defun fastnav-jump-to-char-forward (arg)fastnav-jump-to-char-forward195,8020
(defun fastnav-jump-to-char-backward (arg)fastnav-jump-to-char-backward204,8504
(defun fastnav-mark-up-to-char-forward (arg)fastnav-mark-up-to-char-forward214,8986
(defun fastnav-mark-up-to-char-xbackward (arg)fastnav-mark-up-to-char-xbackward226,9467
(defun fastnav-mark-to-char-forward (arg)fastnav-mark-to-char-forward238,9995
(defun fastnav-mark-to-char-backward (arg)fastnav-mark-to-char-backward252,10532
(defun fastnav-zap-up-to-char-forward (arg)fastnav-zap-up-to-char-forward266,11121
(defun fastnav-zap-up-to-char-backward (arg)fastnav-zap-up-to-char-backward279,11641
(defun fastnav-zap-to-char-forward (arg)fastnav-zap-to-char-forward292,12205
(defun fastnav-zap-to-char-backward (arg)fastnav-zap-to-char-backward309,12924
(defun fastnav-replace-char-forward (arg)fastnav-replace-char-forward325,13633
(defun fastnav-replace-char-backward (arg)fastnav-replace-char-backward338,14177
(defun fastnav-insert-at-char-forward (arg)fastnav-insert-at-char-forward352,14768
(defun fastnav-insert-at-char-backward (arg)fastnav-insert-at-char-backward364,15288
(defun fastnav-execute-at-char-forward (arg)fastnav-execute-at-char-forward376,15847
(defun fastnav-execute-at-char-backward (arg)fastnav-execute-at-char-backward389,16454
(defun fastnav-delete-char-forward (arg)fastnav-delete-char-forward402,17100
(defun fastnav-delete-char-backward (arg)fastnav-delete-char-backward414,17615
(defun fastnav-sprint-forward (arg)fastnav-sprint-forward426,18171
(defun fastnav-sprint-backward (arg)fastnav-sprint-backward441,18727

/home/malk/.emacs.d/elpa/fastnav-1.0.7/fastnav-autoloads.el,0

/home/malk/.emacs.d/elpa/fastnav-1.0.7/fastnav-pkg.el,101
(define-package "fastnav" "1.0.7" "Fast navigation and editing routines." (quote nil))"fastnav"1,0

/home/malk/.emacs.d/elpa/golden-ratio-20121121.38/golden-ratio-pkg.el,152
(define-package "golden-ratio" "20121121.38" "Automatic resizing of Emacs windows to the golden ratio [source: github]" (quote nil))"golden-ratio"1,0

/home/malk/.emacs.d/elpa/golden-ratio-20121121.38/golden-ratio-autoloads.el,0

/home/malk/.emacs.d/elpa/golden-ratio-20121121.38/golden-ratio.el,775
(defconst -golden-ratio-value 1.618-golden-ratio-value20,474
(defcustom golden-ratio-exclude-modes nilgolden-ratio-exclude-modes26,674
(defcustom golden-ratio-exclude-buffer-names nilgolden-ratio-exclude-buffer-names36,1101
(defcustom golden-ratio-inhibit-functions nilgolden-ratio-inhibit-functions43,1368
(defun -golden-ratio-dimensions ()-golden-ratio-dimensions50,1628
(defun -golden-ratio-resize-window (dimensions window)-golden-ratio-resize-window57,1856
(defun golden-ratio ()golden-ratio73,2423
(defadvice select-windowselect-window90,3059
(defadvice other-windowother-window94,3140
(defadvice split-windowsplit-window98,3220
(defun golden-ratio-enable ()golden-ratio-enable104,3316
(defun golden-ratio-disable ()golden-ratio-disable113,3524

/home/malk/.emacs.d/elpa/zenburn-theme-20130110.1020/zenburn-theme-autoloads.el,0

/home/malk/.emacs.d/elpa/zenburn-theme-20130110.1020/zenburn-theme-pkg.el,138
(define-package "zenburn-theme" "20130110.1020" "A low contrast color theme for Emacs. [source: github]" (quote nil))"zenburn-theme"1,0

/home/malk/.emacs.d/elpa/zenburn-theme-20130110.1020/zenburn-theme.el,61
(deftheme zenburn "The Zenburn color theme")zenburn48,1549

/home/malk/.emacs.d/elpa/cljdoc-0.1.0/cljdoc-autoloads.el,0

/home/malk/.emacs.d/elpa/cljdoc-0.1.0/cljdoc.el,387
(defun cljdoc-localize-documentation-function ()cljdoc-localize-documentation-function36,1121
(defun cljdoc-message ()cljdoc-message40,1255
(defun cljdoc-current-symbol ()cljdoc-current-symbol44,1402
(defun cljdoc-fnsym-in-current-sexp ()cljdoc-fnsym-in-current-sexp50,1548
(defun cljdoc-get-docstring (sym)cljdoc-get-docstring61,1967
(defvar cljdoc-alistcljdoc-alist67,2156

/home/malk/.emacs.d/elpa/cljdoc-0.1.0/cljdoc-pkg.el,84
(define-package "cljdoc" "0.1.0" "eldoc mode for clojure" (quote nil))"cljdoc"1,0

/home/malk/.emacs.d/elpa/volatile-highlights-20120215.9/volatile-highlights-pkg.el,160
(define-package "volatile-highlights" "20120215.9" "Minor mode for visual feedback on some operations. [source: github]" (quote nil))"volatile-highlights"1,0

/home/malk/.emacs.d/elpa/volatile-highlights-20120215.9/volatile-highlights-autoloads.el,0

/home/malk/.emacs.d/elpa/volatile-highlights-20120215.9/volatile-highlights.el,2856
(defconst vhl/version "1.8")vhl/version143,5231
(defvar vhl/.hl-lst nilvhl/.hl-lst163,5697
(defgroup volatile-highlights nilvolatile-highlights202,7020
(defun vhl/.face-inheritance-possible-p ()vhl/.face-inheritance-possible-p208,7139
(defface vhl/default-facevhl/default-face212,7286
(defcustom Vhl/highlight-zero-width-ranges nilVhl/highlight-zero-width-ranges244,8140
(defun vhl/add-range (beg end &optional buf face)vhl/add-range262,8827
(define-obsolete-function-alias 'vhl/add 'vhl/add-range "1.5")vhl/add277,9412
(defun vhl/add-position (pos &rest other-args)vhl/add-position282,9689
(defun vhl/clear-all ()vhl/clear-all296,10265
(defun vhl/force-clear-all ()vhl/force-clear-all308,10684
(defun vhl/.make-hl (beg end buf face)vhl/.make-hl323,11222
(defun vhl/.clear-hl (hl)vhl/.clear-hl344,11906
(defun vhl/.force-clear-all-hl ()vhl/.force-clear-all-hl359,12319
(defvar vhl/.installed-extensions nil)vhl/.installed-extensions382,13008
(defun vhl/install-extension (sym)vhl/install-extension384,13048
(defun vhl/load-extension (sym)vhl/load-extension400,13790
(defun vhl/unload-extension (sym)vhl/unload-extension409,14144
(defun vhl/load-extensions ()vhl/load-extensions415,14360
(defun vhl/unload-extensions ()vhl/unload-extensions419,14464
(defun vhl/advice-defined-p (fn-name class ad-name)vhl/advice-defined-p429,14788
(defun vhl/disable-advice-if-defined (fn-name class ad-name)vhl/disable-advice-if-defined434,14950
(defun vhl/.make-vhl-on-change (beg end len-removed)vhl/.make-vhl-on-change439,15133
(defmacro vhl/give-advice-to-make-vhl-on-changes (fn-name)vhl/give-advice-to-make-vhl-on-changes447,15391
(defmacro vhl/cancel-advice-to-make-vhl-on-changes (fn-name)vhl/cancel-advice-to-make-vhl-on-changes466,16183
(defun vhl/require-noerror (feature &optional filename)vhl/require-noerror471,16437
(defun vhl/.make-list-string (items)vhl/.make-list-string478,16617
(defmacro vhl/define-extension (name &rest functions)vhl/define-extension513,17872
(defun vhl/ext/etags/on ()vhl/ext/etags/on597,21435
(defun vhl/ext/etags/off ()vhl/ext/etags/off610,21841
(defun vhl/ext/occur/on ()vhl/ext/occur/on624,22397
(defun vhl/ext/occur/off ()vhl/ext/occur/off704,25941
(defmacro vhl/ext/nonincremental-search/.advice-to-vhl (fn)vhl/ext/nonincremental-search/.advice-to-vhl732,26995
(defmacro vhl/ext/nonincremental-search/.disable-advice-to-vhl (fn)vhl/ext/nonincremental-search/.disable-advice-to-vhl742,27406
(defun vhl/ext/nonincremental-search/on ()vhl/ext/nonincremental-search/on748,27607
(defun vhl/ext/nonincremental-search/off ()vhl/ext/nonincremental-search/off759,28295
(defun vhl/ext/hideshow/.activate ()vhl/ext/hideshow/.activate779,29367
(defun vhl/ext/hideshow/on ()vhl/ext/hideshow/on795,30019
(defun vhl/ext/hideshow/off ()vhl/ext/hideshow/off805,30258

/home/malk/.emacs.d/elpa/ac-nrepl-20130110.1018/ac-nrepl.el,2101
(defun ac-nrepl-available-p ()ac-nrepl-available-p63,2340
(defun ac-nrepl-sync-eval (clj)ac-nrepl-sync-eval69,2529
(defun ac-nrepl-candidates* (clj)ac-nrepl-candidates*74,2739
(defun ac-nrepl-unfiltered-clj (clj)ac-nrepl-unfiltered-clj81,3027
(defun ac-nrepl-filtered-clj (clj)ac-nrepl-filtered-clj85,3156
(defun ac-nrepl-candidates-ns ()ac-nrepl-candidates-ns90,3362
(defun ac-nrepl-candidates-vars ()ac-nrepl-candidates-vars95,3516
(defun ac-nrepl-candidates-ns-classes ()ac-nrepl-candidates-ns-classes112,4202
(defun ac-nrepl-fetch-all-classes ()ac-nrepl-fetch-all-classes117,4371
(defvar ac-nrepl-all-classes-cache nilac-nrepl-all-classes-cache123,4608
(defun ac-nrepl-clear-class-cache ()ac-nrepl-clear-class-cache127,4722
(defun ac-nrepl-cache-all-classes ()ac-nrepl-cache-all-classes131,4853
(defun ac-nrepl-refresh-class-cache ()ac-nrepl-refresh-class-cache135,5028
(defun ac-nrepl-candidates-all-classes ()ac-nrepl-candidates-all-classes145,5292
(defun ac-nrepl-candidates-java-methods ()ac-nrepl-candidates-java-methods150,5484
(defun ac-nrepl-candidates-static-methods ()ac-nrepl-candidates-static-methods159,5848
(defun ac-nrepl-documentation (symbol)ac-nrepl-documentation173,6449
(defun ac-nrepl-symbol-start-pos ()ac-nrepl-symbol-start-pos188,7035
(defface ac-nrepl-candidate-faceac-nrepl-candidate-face195,7289
(defface ac-nrepl-selection-faceac-nrepl-selection-face201,7432
(defconst ac-nrepl-source-defaultsac-nrepl-source-defaults207,7587
(defvar ac-source-nrepl-nsac-source-nrepl-ns216,7909
(defvar ac-source-nrepl-varsac-source-nrepl-vars224,8106
(defvar ac-source-nrepl-ns-classesac-source-nrepl-ns-classes232,8308
(defvar ac-source-nrepl-all-classesac-source-nrepl-all-classes240,8536
(defun ac-nrepl-delete-java-class-hint ()ac-nrepl-delete-java-class-hint247,8743
(defvar ac-source-nrepl-java-methodsac-source-nrepl-java-methods254,8926
(defvar ac-source-nrepl-static-methodsac-source-nrepl-static-methods263,9200
(defun ac-nrepl-setup ()ac-nrepl-setup271,9437
(defun ac-nrepl-popup-doc ()ac-nrepl-popup-doc283,9928

/home/malk/.emacs.d/elpa/ac-nrepl-20130110.1018/ac-nrepl-autoloads.el,1520
(defface ac-nrepl-candidate-face '((t (:inherit ac-candidate-face))) "\ac-nrepl-candidate-face17,435
(defface ac-nrepl-selection-face '((t (:inherit ac-selection-face))) "\ac-nrepl-selection-face20,566
(defconst ac-nrepl-source-defaults '((available . ac-nrepl-available-p) (candidate-face . ac-nrepl-candidate-face) (selection-face . ac-nrepl-selection-face) (prefix . ac-nrepl-symbol-start-pos) (document . ac-nrepl-documentation)) "\ac-nrepl-source-defaults23,709
(defvar ac-source-nrepl-ns (append '((candidates . ac-nrepl-candidates-ns) (symbol . "n")) ac-nrepl-source-defaults) "\ac-source-nrepl-ns26,998
(defvar ac-source-nrepl-vars (append '((candidates . ac-nrepl-candidates-vars) (symbol . "v")) ac-nrepl-source-defaults) "\ac-source-nrepl-vars29,1167
(defvar ac-source-nrepl-ns-classes (append '((candidates . ac-nrepl-candidates-ns-classes) (symbol . "c")) ac-nrepl-source-defaults) "\ac-source-nrepl-ns-classes32,1341
(defvar ac-source-nrepl-all-classes (append '((candidates . ac-nrepl-candidates-all-classes) (symbol . "c")) ac-nrepl-source-defaults) "\ac-source-nrepl-all-classes35,1541
(defvar ac-source-nrepl-java-methods (append '((candidates . ac-nrepl-candidates-java-methods) (symbol . "m") (action . ac-nrepl-delete-java-class-hint)) ac-nrepl-source-defaults) "\ac-source-nrepl-java-methods38,1735
(defvar ac-source-nrepl-static-methods (append '((candidates . ac-nrepl-candidates-static-methods) (symbol . "s")) ac-nrepl-source-defaults) "\ac-source-nrepl-static-methods41,1976

/home/malk/.emacs.d/elpa/ac-nrepl-20130110.1018/ac-nrepl-pkg.el,182
(define-package "ac-nrepl" "20130110.1018" "auto-complete sources for Clojure using nrepl completions [source: github]" (quote ((nrepl "0.1") (auto-complete "1.4"))))"ac-nrepl"1,0

/home/malk/.emacs.d/elpa/idle-highlight-mode-20120920.1848/idle-highlight-mode-pkg.el,147
(define-package "idle-highlight-mode" "20120920.1848" "highlight the word the point is on [source: github]" (quote nil))"idle-highlight-mode"1,0

/home/malk/.emacs.d/elpa/idle-highlight-mode-20120920.1848/idle-highlight-mode-autoloads.el,0

/home/malk/.emacs.d/elpa/idle-highlight-mode-20120920.1848/idle-highlight-mode.el,611
(defgroup idle-highlight nilidle-highlight58,1798
(defface idle-highlightidle-highlight62,1897
(defcustom idle-highlight-exceptions '("end")idle-highlight-exceptions67,2039
(defcustom idle-highlight-idle-time 0.5idle-highlight-idle-time72,2189
(defvar idle-highlight-regexp nilidle-highlight-regexp77,2324
(defvar idle-highlight-global-timer nilidle-highlight-global-timer80,2407
(defun idle-highlight-word-at-point ()idle-highlight-word-at-point83,2483
(defsubst idle-highlight-unhighlight ()idle-highlight-unhighlight96,3086
(define-minor-mode idle-highlight-modeidle-highlight-mode102,3258

/home/malk/.emacs.d/elpa/smex-20120915.2041/smex-autoloads.el,0

/home/malk/.emacs.d/elpa/smex-20120915.2041/smex.el,3466
(defgroup smex nilsmex31,615
(defcustom smex-auto-update tsmex-auto-update37,808
(defcustom smex-save-file "~/.smex-items"smex-save-file43,999
(defcustom smex-history-length 7smex-history-length50,1229
(defcustom smex-prompt-string "M-x "smex-prompt-string57,1415
(defcustom smex-key-advice-ignore-menu-bar nilsmex-key-advice-ignore-menu-bar62,1527
(defcustom smex-flex-matching tsmex-flex-matching67,1670
(defvar smex-initialized-p nil)smex-initialized-p73,1825
(defvar smex-cache)smex-cache74,1857
(defvar smex-ido-cache)smex-ido-cache75,1877
(defvar smex-data)smex-data76,1901
(defvar smex-history)smex-history77,1920
(defvar smex-command-count 0)smex-command-count78,1942
(defvar smex-custom-action nil)smex-custom-action79,1972
(defun smex ()smex85,2122
(defsubst smex-already-running ()smex-already-running96,2392
(defsubst smex-update-and-rerun ()smex-update-and-rerun99,2499
(defun smex-read-and-run (commands &optional initial-input)smex-read-and-run103,2646
(defun smex-major-mode-commands ()smex-major-mode-commands120,3452
(defun smex-completing-read (choices initial-input)smex-completing-read129,3913
(defun smex-prompt-with-prefix-arg ()smex-prompt-with-prefix-arg138,4337
(defun smex-prepare-ido-bindings ()smex-prepare-ido-bindings151,4725
(defun smex-rebuild-cache ()smex-rebuild-cache160,5143
(defun smex-convert-for-ido (command-items)smex-convert-for-ido181,5938
(defun smex-restore-history ()smex-restore-history184,6066
(defun smex-sort-according-to-cache (list)smex-sort-according-to-cache198,6803
(defun smex-update ()smex-update208,7166
(defun smex-detect-new-commands ()smex-detect-new-commands213,7251
(defun smex-auto-update (&optional idle-time)smex-auto-update219,7448
(defun smex-initialize ()smex-initialize226,7726
(defun smex-initialize-ido ()smex-initialize-ido235,7967
(defun smex-load-save-file ()smex-load-save-file240,8151
(defsubst save-file-not-empty-p ()save-file-not-empty-p256,8933
(defun smex-save-history ()smex-save-history259,9022
(defun smex-save-to-file ()smex-save-to-file268,9304
(defun smex-sorting-rules (command-item other-command-item)smex-sorting-rules278,9571
(defun smex-rank (command)smex-rank292,10328
(defun smex-update-counter (command-item)smex-update-counter320,11592
(defun smex-sort-item-at (n)smex-sort-item-at332,12025
(defun smex-detect-position (cell function)smex-detect-position351,12966
(defun smex-remove-nth-cell (n list)smex-remove-nth-cell365,13447
(defun smex-insert-cell (new-cell n list)smex-insert-cell372,13670
(defun smex-do-with-selected-item (fn)smex-do-with-selected-item381,13978
(defun smex-describe-function ()smex-describe-function385,14074
(defun smex-where-is ()smex-where-is391,14280
(defun smex-find-function ()smex-find-function395,14363
(defvar smex-old-message nilsmex-old-message399,14456
(defun smex-show-key-advice (command)smex-show-key-advice402,14542
(defun smex-key-advice (command)smex-key-advice417,15221
(defsubst smex-filter-out-menu-bar-bindings (keys)smex-filter-out-menu-bar-bindings426,15552
(defun smex-unlogged-message (string)smex-unlogged-message432,15769
(defun extract-commands-from-keymap (map)extract-commands-from-keymap437,15896
(defun parse-keymap (map)parse-keymap442,15995
(defun extract-commands-from-features (mode)extract-commands-from-features451,16392
(defun smex-show-unbound-commands ()smex-show-unbound-commands474,17358

/home/malk/.emacs.d/elpa/smex-20120915.2041/smex-pkg.el,127
(define-package "smex" "20120915.2041" "M-x interface with Ido-style fuzzy matching. [source: github]" (quote nil))"smex"1,0

/home/malk/.emacs.d/elpa/s-20130102.1359/s.el,3121
(defun s-trim-left (s)s-trim-left30,976
(defun s-trim-right (s)s-trim-right36,1123
(defun s-trim (s)s-trim42,1265
(defun s-collapse-whitespace (s)s-collapse-whitespace46,1371
(defun s-lines (s)s-lines50,1520
(defun s-join (separator strings)s-join54,1641
(defun s-concat (&rest strings)s-concat58,1782
(defun s-prepend (prefix s)s-prepend62,1893
(defun s-append (suffix s)s-append66,1973
(defun s-repeat (num s)s-repeat70,2052
(defun s-chop-suffix (suffix s)s-chop-suffix78,2233
(defun s-chop-suffixes (suffixes s)s-chop-suffixes86,2474
(defun s-chop-prefix (prefix s)s-chop-prefix93,2686
(defun s-chop-prefixes (prefixes s)s-chop-prefixes101,2929
(defun s-shared-start (s1 s2)s-shared-start108,3143
(defun s-shared-end (s1 s2)s-shared-end117,3429
(defun s-chomp (s)s-chomp136,4048
(defun s-truncate (len s)s-truncate140,4161
(defun s-word-wrap (len s)s-word-wrap146,4335
(defun s-center (len s)s-center154,4594
(defun s-left (len s)s-left162,4831
(defun s-right (len s)s-right168,4957
(defun s-ends-with? (suffix s &optional ignore-case)s-ends-with?175,5111
(defalias 's-ends-with-p 's-ends-with?)s-ends-with-p187,5500
(defun s-starts-with? (prefix s &optional ignore-case)s-starts-with?189,5541
(defalias 's-starts-with-p 's-starts-with?)s-starts-with-p199,5851
(defalias 's-suffix? 's-ends-with?)s-suffix?201,5896
(defalias 's-prefix? 's-starts-with?)s-prefix?202,5932
(defalias 's-suffix-p 's-ends-with?)s-suffix-p203,5970
(defalias 's-prefix-p 's-starts-with?)s-prefix-p204,6007
(defun s--truthy? (val)s--truthy?206,6047
(defun s-contains? (needle s &optional ignore-case)s-contains?209,6092
(defalias 's-contains-p 's-contains?)s-contains-p217,6369
(defun s-equals? (s1 s2)s-equals?219,6408
(defalias 's-equals-p 's-equals?)s-equals-p225,6543
(defun s-matches? (regexp s)s-matches?227,6578
(defalias 's-matches-p 's-matches?)s-matches-p233,6739
(defun s-blank? (s)s-blank?235,6776
(defun s-lowercase? (s)s-lowercase?239,6863
(defun s-uppercase? (s)s-uppercase?244,7009
(defun s-mixedcase? (s)s-mixedcase?249,7155
(defun s-numeric? (s)s-numeric?256,7377
(defun s-replace (old new s)s-replace261,7466
(defun s-downcase (s)s-downcase265,7587
(defun s-upcase (s)s-upcase271,7713
(defun s-capitalize (s)s-capitalize277,7833
(defun s-titleize (s)s-titleize281,8016
(defmacro s-with (s form &rest more)s-with287,8204
(defun s-index-of (needle s &optional ignore-case)s-index-of300,8641
(defun s-reverse (s) ;; from org-babel-reverse-strings-reverse308,8925
(defun s-match (regexp s)s-match312,9058
(defun s-split-words (s)s-split-words328,9739
(defun s--mapcar-head (fn-head fn-rest list)s--mapcar-head335,9939
(defun s-lower-camel-case (s)s-lower-camel-case340,10140
(defun s-upper-camel-case (s)s-upper-camel-case344,10276
(defun s-snake-case (s)s-snake-case348,10394
(defun s-dashed-words (s)s-dashed-words352,10501
(defun s-capitalized-words (s)s-capitalized-words356,10612
(defun s-titleized-words (s)s-titleized-words361,10797
(defun s-format (template replacer &optional extra)s-format375,11135

/home/malk/.emacs.d/elpa/s-20130102.1359/s-autoloads.el,0

/home/malk/.emacs.d/elpa/s-20130102.1359/s-pkg.el,125
(define-package "s" "20130102.1359" "The long lost Emacs string manipulation library. [source: github]" (quote nil))"s"1,0

/home/malk/.emacs.d/elpa/dash-20130126.1933/dash-autoloads.el,0

/home/malk/.emacs.d/elpa/dash-20130126.1933/dash.el,4894
(defmacro !cons (car cdr)!cons30,943
(defmacro !cdr (list)!cdr34,1057
(defmacro --each (list &rest body)--each38,1156
(defun -each (list fn)-each51,1471
(defmacro --each-while (list pred &rest body)--each-while55,1607
(defun -each-while (list pred fn)-each-while68,1977
(defmacro --dotimes (num &rest body)--dotimes73,2177
(defun -dotimes (num fn)-dotimes82,2447
(defun -map (fn list)-map86,2602
(defmacro --map (form list)--map90,2730
(defmacro --reduce-from (form initial-value list)--reduce-from94,2828
(defun -reduce-from (fn initial-value list)-reduce-from100,2996
(defmacro --reduce (form list)--reduce110,3391
(defun -reduce (fn list)-reduce118,3623
(defmacro --filter (form list)--filter131,4115
(defun -filter (pred list)-filter138,4304
(defalias '-select '-filter)-select144,4471
(defalias '--select '--filter)--select145,4500
(defmacro --remove (form list)--remove147,4532
(defun -remove (pred list)-remove151,4630
(defalias '-reject '-remove)-reject157,4785
(defalias '--reject '--remove)--reject158,4814
(defmacro --keep (form list)--keep160,4846
(defun -keep (fn list)-keep168,5082
(defmacro --map-when (pred rep list)--map-when172,5222
(defmacro --map-indexed (form list)--map-indexed179,5422
(defun -map-indexed (fn list)-map-indexed187,5620
(defun -map-when (pred rep list)-map-when193,5866
(defalias '--replace-where '--map-when)--replace-where199,6159
(defalias '-replace-where '-map-when)-replace-where200,6199
(defun -flatten (l)-flatten202,6238
(defun -concat (&rest lists)-concat208,6393
(defmacro --mapcat (form list)--mapcat212,6533
(defun -mapcat (fn list)-mapcat216,6638
(defun -cons* (&rest args)-cons*221,6832
(defmacro --first (form list)--first239,7263
(defun -first (pred list)-first247,7462
(defun ---truthy? (val)---truthy?253,7660
(defmacro --any? (form list)--any?256,7705
(defun -any? (pred list)-any?260,7805
(defalias '-some? '-any?)-some?266,7949
(defalias '--some? '--any?)--some?267,7975
(defalias '-any-p '-any?)-any-p269,8004
(defalias '--any-p '--any?)--any-p270,8030
(defalias '-some-p '-any?)-some-p271,8058
(defalias '--some-p '--any?)--some-p272,8085
(defmacro --all? (form list)--all?274,8115
(defun -all? (pred list)-all?281,8301
(defalias '-every? '-all?)-every?287,8446
(defalias '--every? '--all?)--every?288,8473
(defalias '-all-p '-all?)-all-p290,8503
(defalias '--all-p '--all?)--all-p291,8529
(defalias '-every-p '-all?)-every-p292,8557
(defalias '--every-p '--all?)--every-p293,8585
(defmacro --none? (form list)--none?295,8616
(defun -none? (pred list)-none?299,8710
(defalias '-none-p '-none?)-none-p303,8835
(defalias '--none-p '--none?)--none-p304,8863
(defmacro --only-some? (form list)--only-some?306,8894
(defun -only-some? (pred list)-only-some?315,9174
(defalias '-only-some-p '-only-some?)-only-some-p320,9435
(defalias '--only-some-p '--only-some?)--only-some-p321,9473
(defun -take (n list)-take323,9514
(defun -drop (n list)-drop332,9760
(defmacro --take-while (form list)--take-while337,9875
(defun -take-while (pred list)-take-while344,10071
(defmacro --drop-while (form list)--drop-while348,10240
(defun -drop-while (pred list)-drop-while356,10454
(defun -split-at (n list)-split-at360,10620
(defmacro --split-with (form list)--split-with365,10749
(defun -split-with (pred list)-split-with370,10896
(defmacro --separate (form list)--separate374,11041
(defun -separate (pred list)-separate382,11298
(defun -partition (n list)-partition386,11432
(defun -partition-all (n list)-partition-all403,11917
(defmacro --partition-by (form list)--partition-by412,12198
(defun -partition-by (fn list)-partition-by438,12985
(defmacro --group-by (form list)--group-by442,13143
(defun -group-by (fn list)-group-by469,13966
(defun -interpose (sep list)-interpose474,14145
(defun -interleave (&rest lists)-interleave485,14437
(defmacro --separate (form list)--separate493,14702
(defmacro --zip-with (form list1 list2)--zip-with501,14959
(defun -zip-with (fn list1 list2)-zip-with519,15475
(defun -zip (list1 list2)-zip529,15875
(defun -partial (fn &rest args)-partial536,16149
(defun -rpartial (fn &rest args)-rpartial543,16437
(defun -applify (fn)-applify553,16801
(defmacro -> (x &optional form &rest more)->558,16957
(defmacro ->> (x form &rest more)->>570,17411
(defmacro --> (x form &rest more)-->581,17807
(defun -distinct (list)-distinct596,18307
(defun -union (list list2)-union606,18592
(defalias '-uniq '-distinct)-uniq615,18950
(defun -intersection (list list2)-intersection617,18980
(defun -difference (list list2)-difference623,19233
(defvar -compare-fn nil-compare-fn629,19473
(defun -contains? (list element)-contains?634,19686
(defalias '-contains-p '-contains?)-contains-p651,20196
(defun -repeat (n x)-repeat653,20233

/home/malk/.emacs.d/elpa/dash-20130126.1933/dash-pkg.el,114
(define-package "dash" "20130126.1933" "A modern list library for Emacs [source: github]" (quote nil))"dash"1,0

/home/malk/.emacs.d/elpa/minimap-20110427.1123/minimap-pkg.el,111
(define-package "minimap" "20110427.1123" "Minimap sidebar for Emacs [source: git]" (quote nil))"minimap"1,0

/home/malk/.emacs.d/elpa/minimap-20110427.1123/minimap-autoloads.el,0

/home/malk/.emacs.d/elpa/minimap-20110427.1123/minimap.el,3212
(defgroup minimap nilminimap60,2035
(defface minimap-font-faceminimap-font-face64,2114
(defface minimap-active-region-backgroundminimap-active-region-background72,2470
(defface minimap-semantic-function-faceminimap-semantic-function-face79,2729
(defface minimap-semantic-variable-faceminimap-semantic-variable-face89,3142
(defface minimap-semantic-type-faceminimap-semantic-type-face99,3556
(defcustom minimap-width-fraction 0.2minimap-width-fraction109,3952
(defcustom minimap-window-location 'leftminimap-window-location114,4090
(defcustom minimap-buffer-name-prefix "*MINIMAP* "minimap-buffer-name-prefix121,4304
(defcustom minimap-update-delay 0.2minimap-update-delay126,4439
(defcustom minimap-always-recenter nilminimap-always-recenter141,4918
(defcustom minimap-recenter-type 'relativeminimap-recenter-type146,5071
(defcustom minimap-hide-scroll-bar tminimap-hide-scroll-bar169,5970
(defcustom minimap-hide-fringes tminimap-hide-fringes174,6104
(defcustom minimap-dedicated-window nilminimap-dedicated-window179,6224
(defcustom minimap-display-semantic-overlays tminimap-display-semantic-overlays184,6359
(defcustom minimap-enlarge-certain-faces 'as-fallbackminimap-enlarge-certain-faces198,6928
(defcustom minimap-normal-height-faces '(font-lock-function-name-face)minimap-normal-height-faces216,7733
(defcustom minimap-sync-overlay-properties '(face invisible)minimap-sync-overlay-properties225,8149
(defvar minimap-start nil)minimap-start238,8660
(defvar minimap-end nil)minimap-end239,8687
(defvar minimap-active-overlay nil)minimap-active-overlay240,8712
(defvar minimap-bufname nil)minimap-bufname241,8748
(defvar minimap-timer-object nil)minimap-timer-object242,8777
(defvar minimap-active-minimaps 0)minimap-active-minimaps243,8811
(defvar minimap-base-overlay nil)minimap-base-overlay244,8846
(defvar minimap-numlines nil)minimap-numlines245,8880
(defvar minimap-pointmin-overlay nil)minimap-pointmin-overlay246,8910
(defun minimap-create ()minimap-create259,9335
(defun minimap-new-minimap (bufname)minimap-new-minimap291,10507
(defun minimap-kill ()minimap-kill328,11931
(defun minimap-update (&optional force)minimap-update352,12701
(defun minimap-move-overlay-mouse (start-event)minimap-move-overlay-mouse381,13596
(defun minimap-set-overlay (pt)minimap-set-overlay410,14622
(defun minimap-line-to-pos (line)minimap-line-to-pos437,15563
(defun minimap-recenter (middle height)minimap-recenter446,15811
(defvar minimap-mode-map (make-sparse-keymap)minimap-mode-map508,18138
(define-key minimap-mode-map [down-mouse-1] 'minimap-move-overlay-mouse)minimap-mode-map511,18221
(define-key minimap-mode-map [down-mouse-2] 'minimap-move-overlay-mouse)minimap-mode-map512,18294
(define-key minimap-mode-map [down-mouse-3] 'minimap-move-overlay-mouse)minimap-mode-map513,18367
(define-minor-mode minimap-modeminimap-mode515,18441
(defun minimap-sync-overlays ()minimap-sync-overlays521,18603
(defun minimap-get-sync-properties (ov)minimap-get-sync-properties559,20011
(defun minimap-enlarge-faces ()minimap-enlarge-faces572,20337
(defun minimap-apply-semantic-overlays ()minimap-apply-semantic-overlays588,20965

/home/malk/.emacs.d/elpa/diminish-20091203.1912/diminish-pkg.el,148
(define-package "diminish" "20091203.1912" "Diminished modes are minor modes with no modeline display [source: github]" (quote nil))"diminish"1,0

/home/malk/.emacs.d/elpa/diminish-20091203.1912/diminish-autoloads.el,0

/home/malk/.emacs.d/elpa/diminish-20091203.1912/diminish.el,469
(defvar diminish-must-not-copy-minor-mode-alist nildiminish-must-not-copy-minor-mode-alist111,4924
(defvar diminished-mode-alist nildiminished-mode-alist122,5480
(defvar diminish-history-symbols nildiminish-history-symbols125,5585
(defvar diminish-history-names nildiminish-history-names128,5677
(defun diminish (mode &optional to-what)diminish155,7325
(defun diminish-undo (mode)diminish-undo206,10032
(defun diminished-modes ()diminished-modes244,11987

/home/malk/.emacs.d/elpa/nrepl-20130124.1734/nrepl-pkg.el,129
(define-package "nrepl" "20130124.1734" "Client for Clojure nREPL [source: github]" (quote ((clojure-mode "1.11"))))"nrepl"1,0

/home/malk/.emacs.d/elpa/nrepl-20130124.1734/nrepl.el,19090
(defgroup nrepl nilnrepl63,1697
(defconst nrepl-current-version "0.1.6-preview"nrepl-current-version68,1808
(defun nrepl-version ()nrepl-version71,1892
(defcustom nrepl-connected-hook nilnrepl-connected-hook76,2047
(defcustom nrepl-disconnected-hook nilnrepl-disconnected-hook81,2182
(defcustom nrepl-host "127.0.0.1"nrepl-host86,2324
(defcustom nrepl-port nilnrepl-port91,2448
(defconst nrepl-connection-buffer "*nrepl-connection*")nrepl-connection-buffer96,2544
(defconst nrepl-server-buffer "*nrepl-server*")nrepl-server-buffer97,2600
(defconst nrepl-nrepl-buffer "*nrepl*")nrepl-nrepl-buffer98,2648
(defconst nrepl-error-buffer "*nrepl-error*")nrepl-error-buffer99,2688
(defconst nrepl-doc-buffer "*nrepl-doc*")nrepl-doc-buffer100,2734
(defconst nrepl-src-buffer "*nrepl-src*")nrepl-src-buffer101,2776
(defconst nrepl-macroexpansion-buffer "*nrepl-macroexpansion*")nrepl-macroexpansion-buffer102,2818
(defface nrepl-prompt-facenrepl-prompt-face104,2883
(defface nrepl-output-facenrepl-output-face109,3016
(defface nrepl-error-facenrepl-error-face114,3144
(defface nrepl-input-facenrepl-input-face119,3271
(defface nrepl-result-facenrepl-result-face124,3383
(defmacro nrepl-propertize-region (props &rest body)nrepl-propertize-region129,3502
(defvar nrepl-session nilnrepl-session141,3967
(defvar nrepl-tooling-session nilnrepl-tooling-session144,4025
(defvar nrepl-input-start-mark)nrepl-input-start-mark148,4158
(defvar nrepl-prompt-start-mark)nrepl-prompt-start-mark150,4191
(defvar nrepl-request-counter 0nrepl-request-counter152,4225
(defvar nrepl-old-input-counter 0nrepl-old-input-counter155,4299
(defvar nrepl-requests (make-hash-table :test 'equal))nrepl-requests160,4488
(defvar nrepl-buffer-ns "user"nrepl-buffer-ns162,4544
(defvar nrepl-input-history '()nrepl-input-history165,4623
(defvar nrepl-input-history-items-added 0nrepl-input-history-items-added168,4713
(defvar nrepl-output-start nilnrepl-output-start171,4819
(defvar nrepl-output-end nilnrepl-output-end174,4888
(defvar nrepl-sync-response nilnrepl-sync-response177,4953
(defvar nrepl-err-handler 'nrepl-default-err-handlernrepl-err-handler180,5024
(defvar nrepl-extra-eldoc-commands '("nrepl-complete" "yas/expand")nrepl-extra-eldoc-commands183,5109
(defvar nrepl-ops nilnrepl-ops186,5241
(defcustom nrepl-popup-stacktraces tnrepl-popup-stacktraces189,5313
(defcustom nrepl-tab-command 'nrepl-indent-and-complete-symbolnrepl-tab-command196,5546
(defun nrepl-make-variables-buffer-local (&rest variables)nrepl-make-variables-buffer-local204,5834
(defun nrepl-reset-markers ()nrepl-reset-markers225,6361
(defun nrepl-bdecode-buffer ()nrepl-bdecode-buffer236,6759
(defun nrepl-decode (str)nrepl-decode270,8073
(defun nrepl-netstring (string)nrepl-netstring280,8322
(defun nrepl-bencode (message)nrepl-bencode285,8458
(defun nrepl-eval-region (start end)nrepl-eval-region289,8593
(defun nrepl-eval-buffer ()nrepl-eval-buffer294,8743
(defun nrepl-expression-at-point ()nrepl-expression-at-point299,8868
(defun nrepl-region-for-expression-at-point ()nrepl-region-for-expression-at-point304,9039
(defun nrepl-eval-expression-at-point (&optional prefix)nrepl-eval-expression-at-point313,9291
(defun nrepl-eval-ns-form ()nrepl-eval-ns-form321,9551
(defun nrepl-last-expression-with-bounds ()nrepl-last-expression-with-bounds329,9773
(defun nrepl-last-expression ()nrepl-last-expression337,10111
(defun nrepl-find-file (filename)nrepl-find-file343,10261
(defun nrepl-find-resource (resource)nrepl-find-resource352,10585
(defun nrepl-jump-to-def-for (location)nrepl-jump-to-def-for369,11346
(defun nrepl-jump-to-def-handler (buffer)nrepl-jump-to-def-handler382,11811
(defun nrepl-jump-to-def (var)nrepl-jump-to-def394,12433
(defun nrepl-jump (query)nrepl-jump406,13066
(defalias 'nrepl-jump-back 'pop-tag-mark)nrepl-jump-back410,13177
(defun nrepl-completion-complete-core-fn (str)nrepl-completion-complete-core-fn412,13220
(defun nrepl-completion-complete-op-fn (str)nrepl-completion-complete-op-fn423,13678
(defun nrepl-dispatch-complete-symbol (str)nrepl-dispatch-complete-symbol435,14179
(defun nrepl-complete-at-point ()nrepl-complete-at-point440,14354
(defun nrepl-eldoc-format-thing (thing)nrepl-eldoc-format-thing447,14638
(defun nrepl-highlight-args (arglist pos)nrepl-highlight-args450,14737
(defun nrepl-highlight-arglist (arglist pos)nrepl-highlight-arglist467,15303
(defun nrepl-eldoc-format-arglist (arglist pos)nrepl-eldoc-format-arglist470,15404
(defun nrepl-eldoc-handler (buffer the-thing the-pos)nrepl-eldoc-handler475,15586
(defun nrepl-eldoc ()nrepl-eldoc487,15983
(defun nrepl-turn-on-eldoc-mode ()nrepl-turn-on-eldoc-mode505,16747
(defvar nrepl-javadoc-local-paths nilnrepl-javadoc-local-paths513,17039
(defun nrepl-javadoc-op (symbol-name)nrepl-javadoc-op516,17126
(defun nrepl-javadoc-handler (symbol-name)nrepl-javadoc-handler529,17510
(defun nrepl-javadoc (query)nrepl-javadoc536,17769
(defmacro nrepl-dbind-response (response keys &rest body)nrepl-dbind-response542,17961
(defun nrepl-make-response-handler (buffer value-handler stdout-handler stderr-handler done-handler)nrepl-make-response-handler550,18233
(defun nrepl-stdin-handler (buffer)nrepl-stdin-handler585,19815
(defun nrepl-handler (buffer)nrepl-handler595,20288
(defun nrepl-interactive-eval-handler (buffer)nrepl-interactive-eval-handler606,20829
(defun nrepl-load-file-handler (buffer)nrepl-load-file-handler616,21292
(defun nrepl-interactive-eval-print-handler (buffer)nrepl-interactive-eval-print-handler629,21946
(defun nrepl-popup-eval-print-handler (buffer)nrepl-popup-eval-print-handler639,22396
(defun nrepl-popup-eval-out-handler (buffer)nrepl-popup-eval-out-handler648,22810
(defun nrepl-default-err-handler (buffer ex root-ex session)nrepl-default-err-handler657,23222
(defun nrepl-need-input (buffer)nrepl-need-input672,24102
(define-minor-mode nrepl-popup-buffer-modenrepl-popup-buffer-mode679,24310
(defun nrepl-popup-buffer-quit-function (&optional kill-buffer-p)nrepl-popup-buffer-quit-function689,24621
(defun nrepl-popup-buffer (name &optional select)nrepl-popup-buffer694,24835
(defun nrepl-popup-buffer-quit (&optional kill-buffer-p)nrepl-popup-buffer-quit705,25250
(defun nrepl-make-popup-buffer (name)nrepl-make-popup-buffer711,25533
(defun nrepl-emit-into-popup-buffer (buffer value)nrepl-emit-into-popup-buffer721,25849
(defun nrepl-emit-into-color-buffer (buffer value)nrepl-emit-into-color-buffer730,26116
(defun nrepl-macroexpand-undo (&optional arg)nrepl-macroexpand-undo741,26439
(defvar nrepl-last-macroexpand-expression nilnrepl-last-macroexpand-expression746,26555
(defun nrepl-macroexpand-handler (buffer ns)nrepl-macroexpand-handler750,26715
(defun nrepl-macroexpand-inplace-handler (expansion-buffer start end current-point)nrepl-macroexpand-inplace-handler758,27046
(defun nrepl-macroexpand-form (expander expr)nrepl-macroexpand-form767,27495
(defun nrepl-macroexpand-expr (expander expr &optional buffer)nrepl-macroexpand-expr772,27673
(defun nrepl-macroexpand-expr-inplace (expander)nrepl-macroexpand-expr-inplace778,28030
(defun nrepl-macroexpand-again ()nrepl-macroexpand-again786,28449
(defun nrepl-macroexpand-1 (&optional prefix)nrepl-macroexpand-1791,28670
(defun nrepl-macroexpand-1-inplace (&optional prefix)nrepl-macroexpand-1-inplace798,29054
(defun nrepl-macroexpand-all ()nrepl-macroexpand-all803,29237
(defun nrepl-macroexpand-all-inplace ()nrepl-macroexpand-all-inplace808,29495
(defun nrepl-initialize-macroexpansion-buffer (expansion ns)nrepl-initialize-macroexpansion-buffer812,29618
(defun nrepl-redraw-macroexpansion-buffer (expansion buffer start end current-point)nrepl-redraw-macroexpansion-buffer823,29970
(defun nrepl-popup-eval-print (form)nrepl-popup-eval-print834,30296
(defun nrepl-interactive-eval-print (form)nrepl-interactive-eval-print841,30565
(defun nrepl-interactive-eval (form)nrepl-interactive-eval848,30846
(defun nrepl-send-op (op attributes handler)nrepl-send-op855,31111
(defun nrepl-send-load-file (file-contents file-path file-name)nrepl-send-load-file865,31480
(defun nrepl-eval-last-expression (&optional prefix)nrepl-eval-last-expression875,31966
(defun nrepl-eval-print-last-expression ()nrepl-eval-print-last-expression882,32214
(defcustom nrepl-wrap-history nilnrepl-wrap-history890,32432
(defvar nrepl-input-history-position -1nrepl-input-history-position899,32723
(defvar nrepl-history-pattern nilnrepl-history-pattern902,32803
(defun nrepl-add-to-input-history (string)nrepl-add-to-input-history905,32900
(defun nrepl-delete-current-input ()nrepl-delete-current-input913,33194
(defun nrepl-replace-input (string)nrepl-replace-input919,33366
(defun nrepl-position-in-history (start-pos direction regexp)nrepl-position-in-history923,33465
(defun nrepl-history-replace (direction &optional regexp)nrepl-history-replace937,34073
(defun nrepl-history-search-in-progress-p ()nrepl-history-search-in-progress-p966,35473
(defun nrepl-terminate-history-search ()nrepl-terminate-history-search969,35563
(defun nrepl-previous-input ()nrepl-previous-input972,35641
(defun nrepl-next-input ()nrepl-next-input980,35947
(defun nrepl-forward-input ()nrepl-forward-input986,36123
(defun nrepl-backward-input ()nrepl-backward-input991,36272
(defun nrepl-previous-matching-input (regexp)nrepl-previous-matching-input996,36424
(defun nrepl-next-matching-input (regexp)nrepl-next-matching-input1001,36606
(defun nrepl-history-pattern (&optional use-current-input)nrepl-history-pattern1006,36779
(defcustom nrepl-history-size 500nrepl-history-size1018,37245
(defcustom nrepl-history-file nilnrepl-history-file1024,37398
(defun nrepl-history-read-filename ()nrepl-history-read-filename1030,37537
(defun nrepl-history-read (filename)nrepl-history-read1035,37729
(defun nrepl-history-load (&optional filename)nrepl-history-load1044,37985
(defun nrepl-history-write (filename)nrepl-history-write1057,38643
(defun nrepl-history-save (&optional filename)nrepl-history-save1077,39654
(defun nrepl-history-just-save ()nrepl-history-just-save1084,39949
(defun nrepl-histories-merge (session-hist n-added-items file-hist)nrepl-histories-merge1095,40477
(defun nrepl-same-line-p (pos1 pos2)nrepl-same-line-p1100,40620
(defun nrepl-bol-internal ()nrepl-bol-internal1105,40834
(defun nrepl-bol ()nrepl-bol1112,41108
(defun nrepl-bol-mark ()nrepl-bol-mark1118,41236
(defun nrepl-at-prompt-start-p ()nrepl-at-prompt-start-p1125,41412
(defvar nrepl-mode-hook nilnrepl-mode-hook1130,41555
(defvar nrepl-mode-syntax-tablenrepl-mode-syntax-table1133,41631
(defvar nrepl-interaction-mode-mapnrepl-interaction-mode-map1136,41713
(defvar nrepl-macroexpansion-minor-mode-mapnrepl-macroexpansion-minor-mode-map1181,43782
(define-minor-mode nrepl-macroexpansion-minor-modenrepl-macroexpansion-minor-mode1194,44442
(defun nrepl-create-macroexpansion-buffer ()nrepl-create-macroexpansion-buffer1202,44638
(defun nrepl-tab ()nrepl-tab1209,44868
(defvar nrepl-mode-mapnrepl-mode-map1214,44991
(defun clojure-enable-nrepl ()clojure-enable-nrepl1258,46874
(defun clojure-disable-nrepl ()clojure-disable-nrepl1263,46990
(define-minor-mode nrepl-interaction-modenrepl-interaction-mode1269,47124
(define-derived-mode nrepl-mode fundamental-mode "nREPL"nrepl-mode1280,47448
(defcustom nrepl-lein-commandnrepl-lein-command1304,48408
(defcustom nrepl-server-commandnrepl-server-command1310,48533
(defun nrepl-show-maximum-output ()nrepl-show-maximum-output1323,49109
(defmacro nrepl-save-marker (marker &rest body)nrepl-save-marker1332,49398
(defun nrepl-insert-prompt (namespace)nrepl-insert-prompt1340,49646
(defun nrepl-emit-output-at-pos (buffer string position &optional bol)nrepl-emit-output-at-pos1358,50412
(defun nrepl-emit-interactive-output (string)nrepl-emit-interactive-output1375,51166
(defun nrepl-emit-output (buffer string &optional bol)nrepl-emit-output1379,51357
(defun nrepl-emit-prompt (buffer)nrepl-emit-prompt1383,51517
(defun nrepl-emit-result (buffer string &optional bol)nrepl-emit-result1391,51775
(defun nrepl-default-handler (response)nrepl-default-handler1404,52341
(defun nrepl-dispatch (response)nrepl-dispatch1411,52556
(defun nrepl-net-decode ()nrepl-net-decode1419,52830
(defun nrepl-net-process-input (process)nrepl-net-process-input1429,53148
(defun nrepl-net-filter (process string)nrepl-net-filter1439,53525
(defun nrepl-sentinel (process message)nrepl-sentinel1446,53741
(defun nrepl-write-message (process message)nrepl-write-message1453,53987
(defun nrepl-property-bounds (prop)nrepl-property-bounds1457,54095
(defun nrepl-in-input-area-p ()nrepl-in-input-area-p1464,54413
(defun nrepl-current-input (&optional until-point-p)nrepl-current-input1467,54485
(defun nrepl-previous-prompt ()nrepl-previous-prompt1476,54858
(defun nrepl-next-prompt ()nrepl-next-prompt1481,54974
(defun nrepl-find-prompt (&optional backward)nrepl-find-prompt1486,55079
(defun nrepl-search-property-change (prop &optional backward)nrepl-search-property-change1495,55401
(defun nrepl-end-of-proprange-p (property)nrepl-end-of-proprange-p1501,55639
(defun nrepl-mark-input-start ()nrepl-mark-input-start1505,55792
(defun nrepl-mark-output-start ()nrepl-mark-output-start1508,55890
(defun nrepl-mark-output-end ()nrepl-mark-output-end1512,56008
(defun nrepl-current-session ()nrepl-current-session1519,56225
(defun nrepl-current-tooling-session ()nrepl-current-tooling-session1523,56325
(defun nrepl-next-request-id ()nrepl-next-request-id1527,56441
(defun nrepl-send-request (request callback)nrepl-send-request1531,56575
(defun nrepl-create-client-session (callback)nrepl-create-client-session1537,56852
(defun nrepl-send-stdin (input callback)nrepl-send-stdin1541,56970
(defun nrepl-send-interrupt (pending-request-id callback)nrepl-send-interrupt1547,57191
(defun nrepl-eval-request (input &optional ns session)nrepl-eval-request1553,57453
(defun nrepl-send-string (input callback &optional ns session)nrepl-send-string1560,57666
(defun nrepl-sync-request-handler (buffer)nrepl-sync-request-handler1563,57801
(defun nrepl-send-request-sync (request)nrepl-send-request-sync1582,58988
(defun nrepl-send-string-sync (input &optional ns session)nrepl-send-string-sync1593,59485
(defalias 'nrepl-eval 'nrepl-send-string-sync)nrepl-eval1596,59612
(defalias 'nrepl-eval-async 'nrepl-send-string)nrepl-eval-async1597,59659
(defun nrepl-send-input (&optional newline)nrepl-send-input1599,59708
(defun nrepl-newline-and-indent ()nrepl-newline-and-indent1626,60877
(defun nrepl-indent-and-complete-symbol ()nrepl-indent-and-complete-symbol1637,61256
(defun nrepl-kill-input ()nrepl-kill-input1648,61634
(defun nrepl-input-complete-p (start end)nrepl-input-complete-p1656,61942
(defun nrepl-return (&optional end-of-input)nrepl-return1673,62584
(defun nrepl-recenter-if-needed ()nrepl-recenter-if-needed1693,63276
(defun nrepl-grab-old-input (replace)nrepl-grab-old-input1700,63472
(defun nrepl-closing-return ()nrepl-closing-return1721,64362
(defvar nrepl-clear-buffer-hook)nrepl-clear-buffer-hook1731,64684
(defun nrepl-clear-buffer ()nrepl-clear-buffer1733,64718
(defun nrepl-find-and-clear-repl-buffer ()nrepl-find-and-clear-repl-buffer1744,65108
(defun nrepl-input-line-beginning-position ()nrepl-input-line-beginning-position1753,65422
(defun nrepl-clear-output ()nrepl-clear-output1758,65558
(defun nrepl-find-ns ()nrepl-find-ns1775,66138
(defun nrepl-current-ns ()nrepl-current-ns1781,66245
(defun nrepl-user-first-name ()nrepl-user-first-name1791,66543
(defvar nrepl-words-of-inspirationnrepl-words-of-inspiration1799,66810
(defun nrepl-random-words-of-inspiration ()nrepl-random-words-of-inspiration1828,68549
(defun nrepl-insert-banner (ns)nrepl-insert-banner1833,68756
(defun nrepl-init-repl-buffer (connection buffer &optional noprompt)nrepl-init-repl-buffer1843,69107
(defun nrepl-repl-buffer (&optional noprompt)nrepl-repl-buffer1852,69382
(defun nrepl-switch-to-repl-buffer ()nrepl-switch-to-repl-buffer1859,69726
(defun nrepl-set-ns (ns)nrepl-set-ns1871,70153
(defun nrepl-symbol-at-point ()nrepl-symbol-at-point1877,70400
(defvar nrepl-ido-ns nil)nrepl-ido-ns1886,70751
(defun nrepl-ido-form (ns)nrepl-ido-form1888,70778
(defun nrepl-ido-up-ns (ns)nrepl-ido-up-ns1902,71342
(defun nrepl-ido-select (selected targets callback)nrepl-ido-select1905,71434
(defun nrepl-ido-read-var-handler (ido-callback buffer)nrepl-ido-read-var-handler1916,71979
(defun nrepl-ido-read-var (ns ido-callback)nrepl-ido-read-var1925,72494
(defun nrepl-operator-before-point ()nrepl-operator-before-point1933,72833
(defun nrepl-read-symbol-name (prompt callback &optional query)nrepl-read-symbol-name1940,72989
(defun nrepl-doc-handler (symbol)nrepl-doc-handler1950,73524
(defun nrepl-doc (query)nrepl-doc1958,73866
(defun nrepl-src-handler (symbol)nrepl-src-handler1965,74128
(defun nrepl-src (query)nrepl-src1975,74533
(defun nrepl-eval-load-file (form)nrepl-eval-load-file1983,74824
(defun nrepl-file-string (file)nrepl-file-string1987,74966
(defun nrepl-load-file-op (filename)nrepl-load-file-op1992,75126
(defun nrepl-load-file-core (filename)nrepl-load-file-core1997,75310
(defun nrepl-dispatch-load-file (filename)nrepl-dispatch-load-file2005,75615
(defun nrepl-load-file (filename)nrepl-load-file2010,75774
(defun nrepl-load-current-buffer ()nrepl-load-current-buffer2020,76184
(defun nrepl-interrupt-handler (buffer)nrepl-interrupt-handler2032,76558
(defun nrepl-hash-keys (hashtable)nrepl-hash-keys2035,76655
(defun nrepl-interrupt ()nrepl-interrupt2040,76787
(defun nrepl-server-filter (process output)nrepl-server-filter2048,77075
(defun nrepl-server-sentinel (process event)nrepl-server-sentinel2058,77470
(defun nrepl-enable-on-existing-clojure-buffers ()nrepl-enable-on-existing-clojure-buffers2076,78094
(defun nrepl-disable-on-existing-clojure-buffers ()nrepl-disable-on-existing-clojure-buffers2089,78591
(defun nrepl-jack-in (&optional prompt-project)nrepl-jack-in2101,79017
(defun nrepl-quit ()nrepl-quit2117,79762
(defun nrepl-restart (&optional prompt-project)nrepl-restart2133,80338
(defun nrepl-op-supported-p (op)nrepl-op-supported-p2142,80582
(defun nrepl-describe-handler (process-buffer)nrepl-describe-handler2148,80788
(defun nrepl-describe-session (process)nrepl-describe-session2156,81050
(defun nrepl-create-nrepl-buffer (process)nrepl-create-nrepl-buffer2161,81240
(defun nrepl-new-tooling-session-handler (process)nrepl-new-tooling-session-handler2168,81420
(defun nrepl-new-session-handler (process &optional create-nrepl-buffer-p)nrepl-new-session-handler2177,81782
(defun nrepl-init-client-sessions (process)nrepl-init-client-sessions2191,82454
(defun nrepl-connect (host port)nrepl-connect2195,82646
(defun nrepl (host port)nrepl2213,83366

/home/malk/.emacs.d/elpa/nrepl-20130124.1734/nrepl-autoloads.el,0

/home/malk/.emacs.d/elpa/writegood-mode-20121108.1709/writegood-mode.el,1782
(defgroup writegood nilwritegood68,2208
(defconst writegood-version "1.2"writegood-version74,2391
(defface writegood-weasels-facewritegood-weasels-face78,2469
(defcustom writegood-weasel-wordswritegood-weasel-words86,2767
(defvar writegood-weasels-font-lock-keywords-regexpwritegood-weasels-font-lock-keywords-regexp97,3224
(defvar writegood-weasels-font-lock-keywordswritegood-weasels-font-lock-keywords101,3362
(defface writegood-passive-voice-facewritegood-passive-voice-face106,3536
(defcustom writegood-passive-voice-irregularswritegood-passive-voice-irregulars112,3722
(defvar writegood-passive-voice-font-lock-keywords-regexpwritegood-passive-voice-font-lock-keywords-regexp140,5382
(defvar writegood-passive-voice-font-lock-keywordswritegood-passive-voice-font-lock-keywords146,5676
(defface writegood-duplicates-facewritegood-duplicates-face151,5865
(defvar writegood-duplicates-font-lock-keywords-regexpwritegood-duplicates-font-lock-keywords-regexp159,6168
(defvar writegood-duplicates-font-lock-keywordswritegood-duplicates-font-lock-keywords163,6326
(defun writegood-version ()writegood-version169,6525
(defun writegood-weasels-turn-on ()writegood-weasels-turn-on174,6636
(defun writegood-passive-voice-turn-on ()writegood-passive-voice-turn-on178,6786
(defun writegood-duplicates-turn-on ()writegood-duplicates-turn-on182,6943
(defun writegood-weasels-turn-off ()writegood-weasels-turn-off186,7096
(defun writegood-passive-voice-turn-off ()writegood-passive-voice-turn-off190,7250
(defun writegood-duplicates-turn-off ()writegood-duplicates-turn-off194,7411
(defun writegood-turn-on ()writegood-turn-on198,7568
(defun writegood-turn-off ()writegood-turn-off206,7833
(define-minor-mode writegood-modewritegood-mode213,8010

/home/malk/.emacs.d/elpa/writegood-mode-20121108.1709/writegood-mode-pkg.el,136
(define-package "writegood-mode" "20121108.1709" "Polish up poor writing on the fly [source: github]" (quote nil))"writegood-mode"1,0

/home/malk/.emacs.d/elpa/writegood-mode-20121108.1709/writegood-mode-autoloads.el,0

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/css-mode-expansions.el,138
(defun er/mark-css-declaration ()er/mark-css-declaration33,1066
(defun er/add-css-mode-expansions ()er/add-css-mode-expansions42,1343

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/clojure-mode-expansions.el,346
(defun er/mark-clj-word ()er/mark-clj-word37,1185
(defun er/mark-clj-set-literal ()er/mark-clj-set-literal49,1577
(defun er/mark-clj-regexp-literal ()er/mark-clj-regexp-literal63,1998
(defun er/mark-clj-function-literal ()er/mark-clj-function-literal77,2449
(defun er/add-clojure-mode-expansions ()er/add-clojure-mode-expansions91,2869

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/expand-region-autoloads.el,732
(defvar expand-region-preferred-python-mode 'python "\expand-region-preferred-python-mode32,1212
(defvar expand-region-guess-python-mode t "\expand-region-guess-python-mode37,1390
(defvar expand-region-autocopy-register "" "\expand-region-autocopy-register42,1583
(defvar expand-region-skip-whitespace t "\expand-region-skip-whitespace49,1893
(defvar expand-region-fast-keys-enabled t "\expand-region-fast-keys-enabled54,2080
(defvar expand-region-contract-fast-key "-" "\expand-region-contract-fast-key59,2274
(defvar expand-region-reset-fast-key "0" "\expand-region-reset-fast-key64,2468
(defvar expand-region-exclude-text-mode-expansions '(html-mode nxml-mode) "\expand-region-exclude-text-mode-expansions69,2642

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/expand-region-custom.el,840
(defgroup expand-region nilexpand-region28,917
(defcustom expand-region-preferred-python-mode 'pythonexpand-region-preferred-python-mode33,1026
(defcustom expand-region-guess-python-mode texpand-region-guess-python-mode41,1353
(defun expand-region-guess-python-mode ()expand-region-guess-python-mode47,1586
(defcustom expand-region-autocopy-register ""expand-region-autocopy-register55,1822
(defcustom expand-region-skip-whitespace texpand-region-skip-whitespace63,2113
(defcustom expand-region-fast-keys-enabled texpand-region-fast-keys-enabled70,2377
(defcustom expand-region-contract-fast-key "-"expand-region-contract-fast-key77,2642
(defcustom expand-region-reset-fast-key "0"expand-region-reset-fast-key83,2817
(defcustom expand-region-exclude-text-mode-expansionsexpand-region-exclude-text-mode-expansions89,2975

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/html-mode-expansions.el,368
(defun er/mark-html-attribute ()er/mark-html-attribute37,1148
(defun er--looking-at-marked-tag ()er--looking-at-marked-tag52,1687
(defun er--inside-tag-p ()er--inside-tag-p60,1912
(defun er/mark-outer-tag ()er/mark-outer-tag65,2023
(defun er/mark-inner-tag ()er/mark-inner-tag77,2413
(defun er/add-html-mode-expansions ()er/add-html-mode-expansions87,2698

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/expand-region-pkg.el,137
(define-package "expand-region" "20130117.1542" "Increase selected region by semantic units. [source: github]" 'nil)"expand-region"1,0

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/python-el-fgallina-expansions.el,873
(defvar er--python-string-delimiterer--python-string-delimiter36,1195
(defvar er--python-block-start-regexer--python-block-start-regex44,1499
(defun er/mark-python-string (mark-inside)er/mark-python-string51,1747
(defun er/mark-inside-python-string ()er/mark-inside-python-string70,2585
(defun er/mark-outside-python-string ()er/mark-outside-python-string77,2778
(defun er/mark-python-statement ()er/mark-python-statement84,2975
(defun er/mark-python-block (&optional next-indent-level)er/mark-python-block91,3171
(defun er/mark-outer-python-block ()er/mark-outer-python-block136,5281
(defun er/mark-python-block-and-decorator ()er/mark-python-block-and-decorator143,5499
(defun er--python-looking-at-decorator (&optional line-offset)er--python-looking-at-decorator159,5918
(defun er/add-python-mode-expansions ()er/add-python-mode-expansions168,6105

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/expand-region.el,56
(defun er/expand-region (arg)er/expand-region142,5385

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/js2-mode-expansions.el,142
(defun js2-mark-parent-statement ()js2-mark-parent-statement34,1084
(defun er/add-js2-mode-expansions ()er/add-js2-mode-expansions45,1513

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/nxml-mode-expansions.el,420
(defun er/mark-nxml-tag ()er/mark-nxml-tag33,1080
(defun er/mark-nxml-element ()er/mark-nxml-element44,1379
(defun er/mark-nxml-containing-element ()er/mark-nxml-containing-element53,1625
(defun er/mark-nxml-inside-element ()er/mark-nxml-inside-element60,1807
(defun er/mark-nxml-attribute-string ()er/mark-nxml-attribute-string70,2101
(defun er/add-nxml-mode-expansions ()er/add-nxml-mode-expansions91,2827

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/feature-mode-expansions.el,331
(defun er--block-between-keywords (start-keywords-regexp &optional end-keywords-regexp)er--block-between-keywords35,1079
(defun er/mark-feature-scenario ()er/mark-feature-scenario51,1776
(defun er/mark-feature-step ()er/mark-feature-step55,1903
(defun er/add-feature-mode-expansions ()er/add-feature-mode-expansions59,2064

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/ruby-mode-expansions.el,760
(defvar er/ruby-block-end-reer/ruby-block-end-re45,1210
(defun er/ruby-skip-past-block-end ()er/ruby-skip-past-block-end49,1315
(defun er/ruby-end-of-block (&optional arg)er/ruby-end-of-block54,1469
(defun er/point-at-indentation ()er/point-at-indentation66,1948
(defun er/ruby-backward-up ()er/ruby-backward-up72,2101
(defun er/ruby-forward-up ()er/ruby-forward-up104,3345
(defun er/get-ruby-block (&optional pos)er/get-ruby-block110,3471
(defun er/mark-ruby-block-up-1 ()er/mark-ruby-block-up-1123,3819
(defun er/mark-ruby-block-up (&optional no-recurse)er/mark-ruby-block-up129,3971
(defun er/mark-ruby-instance-variable ()er/mark-ruby-instance-variable166,5496
(defun er/add-ruby-mode-expansions ()er/add-ruby-mode-expansions176,5788

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/latex-mode-expansions.el,216
(defun er/mark-LaTeX-inside-environment ()er/mark-LaTeX-inside-environment34,1103
(defun er/mark-LaTeX-math ()er/mark-LaTeX-math54,1802
(defun er/add-latex-mode-expansions ()er/add-latex-mode-expansions81,2720

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/python-el-expansions.el,379
(defvar er--python-string-delimiter "'\"")er--python-string-delimiter44,1475
(defun er/mark-python-statement ()er/mark-python-statement46,1519
(defun er/mark-outside-python-string ()er/mark-outside-python-string53,1697
(defun er/mark-inside-python-string ()er/mark-inside-python-string61,1915
(defun er/add-python-mode-expansions ()er/add-python-mode-expansions73,2356

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/erlang-mode-expansions.el,78
(defun er/add-erlang-mode-expansions ()er/add-erlang-mode-expansions36,1147

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/python-mode-expansions.el,592
(defvar er--python-string-delimiter "'\"")er--python-string-delimiter44,1456
(defun er/mark-outside-python-string ()er/mark-outside-python-string46,1500
(defun er/mark-inside-python-string ()er/mark-inside-python-string56,1808
(defun er--move-to-beginning-of-outer-python-block (start-column)er--move-to-beginning-of-outer-python-block68,2228
(defun er/mark-outer-python-block ()er/mark-outer-python-block78,2695
(defun er/mark-x-python-compound-statement ()er/mark-x-python-compound-statement90,3159
(defun er/add-python-mode-expansions ()er/add-python-mode-expansions114,4172

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/jsp-expansions.el,120
(defun er/mark-jstl-escape ()er/mark-jstl-escape41,1314
(defun er/add-jsp-expansions ()er/add-jsp-expansions54,1711

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/web-mode-expansions.el,71
(defun er/add-web-mode-expansions ()er/add-web-mode-expansions25,887

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/cc-mode-expansions.el,310
(defun er/c-mark-statement ()er/c-mark-statement50,1686
(defun er/c-mark-fully-qualified-name ()er/c-mark-fully-qualified-name94,2950
(defmacro er/c-define-construct (name mark-first-part open-brace doc)er/c-define-construct113,3482
(defun er/add-cc-mode-expansions ()er/add-cc-mode-expansions164,5837

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/expand-region-core.el,2489
(defvar er/history '()er/history42,1279
(defvar er--space-str " \t\n")er--space-str48,1466
(defvar er--blank-list (append er--space-str nil))er--blank-list49,1497
(defun er/mark-word ()er/mark-word55,1619
(defun er/mark-symbol ()er/mark-symbol66,1949
(defun er/mark-symbol-with-prefix ()er/mark-symbol-with-prefix77,2299
(defun er/mark-next-accessor ()er/mark-next-accessor94,2855
(defun er/mark-method-call ()er/mark-method-call107,3256
(defun er--point-is-in-comment-p ()er--point-is-in-comment-p123,3736
(defun er/mark-comment ()er/mark-comment128,3953
(defun er--current-quotes-char ()er--current-quotes-char144,4366
(defalias 'er--point-inside-string-p 'er--current-quotes-char)er--point-inside-string-p148,4475
(defun er--move-point-forward-out-of-string ()er--move-point-forward-out-of-string150,4539
(defun er--move-point-backward-out-of-string ()er--move-point-backward-out-of-string154,4706
(defun er/mark-inside-quotes ()er/mark-inside-quotes158,4876
(defun er/mark-outside-quotes ()er/mark-outside-quotes169,5220
(defun er--point-inside-pairs-p ()er--point-inside-pairs-p186,5729
(defun er/mark-inside-pairs ()er/mark-inside-pairs190,5825
(defun er--looking-at-pair ()er--looking-at-pair204,6270
(defun er--looking-at-marked-pair ()er--looking-at-marked-pair208,6370
(defun er/mark-outside-pairs ()er/mark-outside-pairs217,6613
(defun er--prepare-expanding ()er--prepare-expanding245,7623
(defun er--copy-region-to-register ()er--copy-region-to-register254,7963
(defun er--expand-region-1 ()er--expand-region-1260,8256
(defun er--this-expansion-is-better ()er--this-expansion-is-better311,10010
(defun er/contract-region (arg)er/contract-region324,10403
(defun er/prepare-for-more-expansions-internal (repeat-key-str)er/prepare-for-more-expansions-internal359,11529
(defun er/prepare-for-more-expansions ()er/prepare-for-more-expansions374,12553
(defadvice keyboard-quit (before collapse-region activate)keyboard-quit432,15072
(defadvice minibuffer-keyboard-quit (around collapse-region activate)minibuffer-keyboard-quit436,15228
(defadvice cua-cancel (before collapse-region activate)cua-cancel441,15408
(defun er/clear-history (&rest args)er/clear-history445,15561
(defsubst er--first-invocation ()er--first-invocation450,15707
(defun er--point-is-surrounded-by-white-space ()er--point-is-surrounded-by-white-space454,15890
(defun er/enable-mode-expansions (mode add-fn)er/enable-mode-expansions459,16068

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/octave-expansions.el,323
(defconst er/old-octave-mod-p (fboundp 'octave-up-block))er/old-octave-mod-p39,1427
(defalias 'er/up-blocker/up-block41,1486
(defun er/octave-mark-up-block ()er/octave-mark-up-block44,1564
(defun er/octave-mark-block ()er/octave-mark-block54,1887
(defun er/add-octave-expansions ()er/add-octave-expansions62,2107

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/js-mode-expansions.el,465
(defun er/mark-js-function ()er/mark-js-function40,1254
(defun er/mark-js-outer-return ()er/mark-js-outer-return56,1682
(defun er/mark-js-inner-return ()er/mark-js-inner-return74,2200
(defun er/mark-js-if ()er/mark-js-if92,2732
(defun er/mark-js-object-property-value ()er/mark-js-object-property-value111,3204
(defun er/mark-js-object-property ()er/mark-js-object-property130,3748
(defun er/add-js-mode-expansions ()er/add-js-mode-expansions152,4499

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/text-mode-expansions.el,200
(defun er/mark-text-sentence ()er/mark-text-sentence32,1060
(defun er/mark-text-paragraph ()er/mark-text-paragraph43,1394
(defun er/add-text-mode-expansions ()er/add-text-mode-expansions49,1526

/home/malk/.emacs.d/elpa/expand-region-20130117.1542/org-mode-expansions.el,178
(defun er/mark-sentence ()er/mark-sentence32,1043
(defun er/mark-paragraph ()er/mark-paragraph41,1227
(defun er/add-org-mode-expansions ()er/add-org-mode-expansions50,1448

/home/malk/.emacs.d/elpa/popup-20130117.1954/popup-autoloads.el,0

/home/malk/.emacs.d/elpa/popup-20130117.1954/popup-pkg.el,112
(define-package "popup" "20130117.1954" "Visual Popup User Interface [source: github]" (quote nil))"popup"1,0

/home/malk/.emacs.d/elpa/popup-20130117.1954/popup.el,6701
(defvar popup-use-optimized-column-computation tpopup-use-optimized-column-computation37,1096
(defmacro popup-aif (test then &rest else)popup-aif41,1239
(defmacro popup-awhen (test &rest body)popup-awhen47,1373
(defun popup-x-to-string (x)popup-x-to-string53,1502
(defun popup-substring-by-width (string width)popup-substring-by-width63,1783
(defun popup-fill-string (string &optional width max-width justify squeeze)popup-fill-string78,2302
(defmacro popup-save-buffer-state (&rest body)popup-save-buffer-state131,4389
(defun popup-preferred-width (list)popup-preferred-width141,4684
(defun popup-window-full-width-p (&optional window)popup-window-full-width-p153,5169
(defun popup-truncated-partial-width-window-p (&optional window)popup-truncated-partial-width-window-p159,5434
(defun popup-current-physical-column ()popup-current-physical-column170,5848
(defun popup-vertical-motion (column direction)popup-vertical-motion181,6298
(defun popup-last-line-of-buffer-p ()popup-last-line-of-buffer-p188,6557
(defun popup-lookup-key-by-event (function event)popup-lookup-key-by-event193,6720
(defgroup popup nilpopup206,7119
(defface popup-facepopup-face211,7207
(defface popup-summary-facepopup-summary-face216,7320
(defface popup-scroll-bar-foreground-facepopup-scroll-bar-foreground-face221,7447
(defface popup-scroll-bar-background-facepopup-scroll-bar-background-face226,7574
(defvar popup-instances nilpopup-instances231,7700
(defvar popup-scroll-bar-foreground-charpopup-scroll-bar-foreground-char234,7751
(defvar popup-scroll-bar-background-charpopup-scroll-bar-background-char238,7894
(defstruct popuppopup242,8037
(defun popup-item-propertize (item &rest properties)popup-item-propertize250,8330
(defun popup-item-property (item property)popup-item-property260,8676
(defun* popup-make-item (namepopup-make-item266,8869
(defsubst popup-item-value (item)               (popup-item-property item 'value))popup-item-value288,9665
(defsubst popup-item-value-or-self (item)       (or (popup-item-value item) item))popup-item-value-or-self289,9748
(defsubst popup-item-face (item)                (popup-item-property item 'popup-face))popup-item-face290,9831
(defsubst popup-item-mouse-face (item)          (popup-item-property item 'popup-mouse-face))popup-item-mouse-face291,9919
(defsubst popup-item-selection-face (item)      (popup-item-property item 'selection-face))popup-item-selection-face292,10013
(defsubst popup-item-document (item)            (popup-item-property item 'document))popup-item-document293,10105
(defsubst popup-item-summary (item)             (popup-item-property item 'summary))popup-item-summary294,10191
(defsubst popup-item-symbol (item)              (popup-item-property item 'symbol))popup-item-symbol295,10276
(defsubst popup-item-sublist (item)             (popup-item-property item 'sublist))popup-item-sublist296,10360
(defun popup-item-documentation (item)popup-item-documentation298,10446
(defun popup-item-show-help-1 (item)popup-item-show-help-1304,10628
(defun popup-item-show-help-with-event-loop (item)popup-item-show-help-with-event-loop314,10920
(defun popup-item-show-help (item &optional persist)popup-item-show-help329,11470
(defun popup-set-list (popup list)popup-set-list340,11900
(defun popup-set-filtered-list (popup list)popup-set-filtered-list345,12055
(defun popup-selected-item (popup)popup-selected-item353,12310
(defun popup-selected-line (popup)popup-selected-line356,12395
(defun popup-line-overlay (popup line)popup-line-overlay359,12484
(defun popup-selected-line-overlay (popup)popup-selected-line-overlay362,12562
(defun popup-hide-line (popup line)popup-hide-line365,12664
(defun popup-line-hidden-p (popup line)popup-line-hidden-p370,12837
(defun* popup-set-line-item (popuppopup-set-line-item375,13035
(defun* popup-create-line-string (popuppopup-create-line-string422,15186
(defun popup-live-p (popup)popup-live-p455,16583
(defun popup-child-point (popup &optional offset)popup-child-point459,16690
(defun popup-calculate-direction (height row)popup-calculate-direction466,16844
(defun* popup-create (pointpopup-create481,17486
(defun popup-delete (popup)popup-delete660,24217
(defun popup-draw (popup)popup-draw677,24754
(defun popup-hide (popup)popup-hide775,29457
(defun popup-hidden-p (popup)popup-hidden-p780,29568
(defun popup-select (popup i)popup-select789,29819
(defun popup-next (popup)popup-next797,30047
(defun popup-previous (popup)popup-previous815,30650
(defun popup-scroll-down (popup &optional n)popup-scroll-down833,31236
(defun popup-scroll-up (popup &optional n)popup-scroll-up841,31577
(defface popup-isearch-matchpopup-isearch-match853,31896
(defvar popup-isearch-cursor-color "blue")popup-isearch-cursor-color858,32007
(defvar popup-isearch-keymappopup-isearch-keymap860,32051
(defsubst popup-isearch-char-p (char)popup-isearch-char-p868,32346
(defun popup-isearch-filter-list (pattern list)popup-isearch-filter-list873,32451
(defun popup-isearch-prompt (popup pattern)popup-isearch-prompt894,33265
(defun popup-isearch-update (popup pattern &optional callback)popup-isearch-update899,33478
(defun* popup-isearch (popuppopup-isearch909,33841
(defface popup-tip-facepopup-tip-face969,36282
(defvar popup-tip-max-width 80)popup-tip-max-width974,36400
(defun* popup-tip (stringpopup-tip976,36433
(defface popup-menu-facepopup-menu-face1048,38841
(defface popup-menu-mouse-facepopup-menu-mouse-face1053,38940
(defface popup-menu-selection-facepopup-menu-selection-face1058,39064
(defface popup-menu-summary-facepopup-menu-summary-face1063,39207
(defvar popup-menu-show-tip-function 'popup-tippopup-menu-show-tip-function1068,39325
(defvar popup-menu-show-quick-help-function 'popup-menu-show-quick-helppopup-menu-show-quick-help-function1071,39446
(defun popup-menu-show-help (menu &optional persist item)popup-menu-show-help1074,39579
(defun popup-menu-documentation (menu &optional item)popup-menu-documentation1077,39709
(defun popup-menu-show-quick-help (menu &optional item &rest args)popup-menu-show-quick-help1080,39831
(defun popup-menu-item-of-mouse-event (event)popup-menu-item-of-mouse-event1104,40731
(defun popup-menu-read-key-sequence (keymap &optional prompt timeout)popup-menu-read-key-sequence1112,41055
(defun popup-menu-fallback (event default))popup-menu-fallback1139,42381
(defun* popup-menu-event-loop (menupopup-menu-event-loop1141,42426
(defun* popup-menu* (listpopup-menu*1209,45427
(defun popup-cascade-menu (list &rest args)popup-cascade-menu1301,49045
(defvar popup-menu-keymappopup-menu-keymap1317,49630

/home/malk/.emacs.d/filesets-cache.el,0
